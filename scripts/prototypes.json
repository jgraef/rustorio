[
  {
    "class_name": "Accumulator",
    "extends": "EntityWithHealth",
    "name": "accumulator",
    "properties": [
      {
        "comment": "charge_cooldown :: uint16",
        "name": "charge_cooldown",
        "type": "uint16"
      },
      {
        "comment": "discharge_cooldown :: uint16",
        "name": "discharge_cooldown",
        "type": "uint16"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "picture :: Sprite",
        "name": "picture",
        "type": "Sprite"
      },
      {
        "comment": "charge_animation :: Animation (optional)",
        "name": "charge_animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "charge_light :: LightDefinition (optional)",
        "name": "charge_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "circuit_connector_sprites :: CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": "CircuitConnectorSprites"
      },
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": "WireConnectionPoint"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "default_output_signal :: SignalIDConnector (optional)",
        "name": "default_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "discharge_animation :: Animation (optional)",
        "name": "discharge_animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "discharge_light :: LightDefinition (optional)",
        "name": "discharge_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Achievement",
    "extends": "PrototypeBase",
    "name": "achievement",
    "properties": [
      {
        "comment": "icons, icon, icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "allowed_without_fight :: bool (optional)",
        "name": "allowed_without_fight",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "hidden :: bool (optional)",
        "name": "hidden",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "steam_stats_name :: string (optional)",
        "name": "steam_stats_name",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "ActiveDefenseEquipment",
    "extends": "Equipment",
    "name": "active-defense-equipment",
    "properties": [
      {
        "comment": "attack_parameters :: AttackParameters",
        "name": "attack_parameters",
        "type": "AttackParameters"
      },
      {
        "comment": "automatic :: bool",
        "name": "automatic",
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "AmbientSound",
    "name": "ambient-sound",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "sound :: Sound",
        "name": "sound",
        "type": "Sound"
      },
      {
        "comment": "track_type :: string",
        "name": "track_type",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "weight :: double (optional)",
        "name": "weight",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "AmmoCategory",
    "extends": "PrototypeBase",
    "name": "ammo-category",
    "properties": [
      {
        "comment": "bonus_gui_order :: Order (optional)",
        "name": "bonus_gui_order",
        "optional": true,
        "type": "Order"
      }
    ]
  },
  {
    "class_name": "AmmoItem",
    "extends": "Item",
    "name": "ammo",
    "properties": [
      {
        "comment": "ammo_type :: table of AmmoType or AmmoType",
        "name": "ammo_type",
        "type": {
          "or": [
            {
              "table_of": "AmmoType"
            },
            "AmmoType"
          ]
        }
      },
      {
        "comment": "magazine_size :: float (optional)",
        "name": "magazine_size",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "reload_time :: float (optional)",
        "name": "reload_time",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "AmmoTurret",
    "extends": "Turret",
    "name": "ammo-turret",
    "properties": [
      {
        "comment": "automated_ammo_count :: ItemCountType",
        "name": "automated_ammo_count",
        "type": "ItemCountType"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "entity_info_icon_shift :: vector (optional)",
        "name": "entity_info_icon_shift",
        "optional": true,
        "type": "vector"
      }
    ]
  },
  {
    "class_name": "Animation",
    "name": "animation",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "animation_speed :: float (optional)",
        "name": "animation_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "apply_runtime_tint :: bool (optional)",
        "name": "apply_runtime_tint",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "blend_mode :: BlendMode (optional)",
        "name": "blend_mode",
        "optional": true,
        "type": "BlendMode"
      },
      {
        "comment": "draw_as_shadow :: bool (optional)",
        "name": "draw_as_shadow",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "filename :: FileName (optional)",
        "name": "filename",
        "optional": true,
        "type": "FileName"
      },
      {
        "comment": "flags :: SpriteFlags (optional)",
        "name": "flags",
        "optional": true,
        "type": "SpriteFlags"
      },
      {
        "comment": "frame_count :: uint32 (optional)",
        "name": "frame_count",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "frame_sequence :: AnimationFrameSequence (optional)",
        "name": "frame_sequence",
        "optional": true,
        "type": "AnimationFrameSequence"
      },
      {
        "comment": "generate_sdf :: bool (optional)",
        "name": "generate_sdf",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "height :: SpriteSizeType (optional)",
        "name": "height",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "hr_version :: Animation (optional)",
        "name": "hr_version",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "layers :: table of Animation (optional)",
        "name": "layers",
        "optional": true,
        "type": {
          "table_of": "Animation"
        }
      },
      {
        "comment": "line_length :: uint32 (optional)",
        "name": "line_length",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "load_in_minimal_mode :: bool (optional)",
        "name": "load_in_minimal_mode",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "max_advance :: float (optional)",
        "name": "max_advance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "mipmap_count :: uint8 (optional)",
        "name": "mipmap_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "position :: table of SpriteSizeType (optional)",
        "name": "position",
        "optional": true,
        "type": {
          "table_of": "SpriteSizeType"
        }
      },
      {
        "comment": "premul_alpha :: bool (optional)",
        "name": "premul_alpha",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "priority :: SpritePriority (optional)",
        "name": "priority",
        "optional": true,
        "type": "SpritePriority"
      },
      {
        "comment": "repeat_count :: uint8 (optional)",
        "name": "repeat_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "run_mode :: string (optional)",
        "name": "run_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "scale :: double (optional)",
        "name": "scale",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "shift :: vector (optional)",
        "name": "shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "size :: SpriteSizeType or table of SpriteSizeType (optional)",
        "name": "size",
        "optional": true,
        "type": {
          "or": [
            "SpriteSizeType",
            {
              "table_of": "SpriteSizeType"
            }
          ]
        }
      },
      {
        "comment": "stripes :: table of Stripe (optional)",
        "name": "stripes",
        "optional": true,
        "type": {
          "table_of": "Stripe"
        }
      },
      {
        "comment": "tint :: Color (optional)",
        "name": "tint",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "width :: SpriteSizeType (optional)",
        "name": "width",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "x :: SpriteSizeType (optional)",
        "name": "x",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "y :: SpriteSizeType (optional)",
        "name": "y",
        "optional": true,
        "type": "SpriteSizeType"
      }
    ]
  },
  {
    "class_name": "ArithmeticCombinator",
    "extends": "Combinator",
    "name": "arithmetic-combinator",
    "properties": [
      {
        "comment": "and_symbol_sprites :: Sprite4Way",
        "name": "and_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "divide_symbol_sprites :: Sprite4Way",
        "name": "divide_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "left_shift_symbol_sprites :: Sprite4Way",
        "name": "left_shift_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "minus_symbol_sprites :: Sprite4Way",
        "name": "minus_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "modulo_symbol_sprites :: Sprite4Way",
        "name": "modulo_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "multiply_symbol_sprites :: Sprite4Way",
        "name": "multiply_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "or_symbol_sprites :: Sprite4Way",
        "name": "or_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "plus_symbol_sprites :: Sprite4Way",
        "name": "plus_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "power_symbol_sprites :: Sprite4Way",
        "name": "power_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "right_shift_symbol_sprites :: Sprite4Way",
        "name": "right_shift_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "xor_symbol_sprites :: Sprite4Way",
        "name": "xor_symbol_sprites",
        "type": "Sprite4Way"
      }
    ]
  },
  {
    "class_name": "Armor",
    "extends": "Tool",
    "name": "armor",
    "properties": [
      {
        "comment": "equipment_grid :: string (optional)",
        "name": "equipment_grid",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "inventory_size_bonus :: ItemStackIndex (optional)",
        "name": "inventory_size_bonus",
        "optional": true,
        "type": "ItemStackIndex"
      },
      {
        "comment": "resistances :: Resistances (optional)",
        "name": "resistances",
        "optional": true,
        "type": "Resistances"
      }
    ]
  },
  {
    "class_name": "Arrow",
    "extends": "Entity",
    "name": "arrow",
    "properties": [
      {
        "comment": "arrow_picture :: Sprite",
        "name": "arrow_picture",
        "type": "Sprite"
      },
      {
        "comment": "blinking :: bool (optional)",
        "name": "blinking",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "circle_picture :: Sprite (optional)",
        "name": "circle_picture",
        "optional": true,
        "type": "Sprite"
      }
    ]
  },
  {
    "class_name": "ArtilleryFlare",
    "extends": "Entity",
    "name": "artillery-flare",
    "properties": [
      {
        "comment": "life_time :: uint16",
        "name": "life_time",
        "type": "uint16"
      },
      {
        "comment": "pictures :: AnimationVariations",
        "name": "pictures",
        "type": "AnimationVariations"
      },
      {
        "comment": "render_layer :: RenderLayer",
        "name": "render_layer",
        "type": "RenderLayer"
      },
      {
        "comment": "render_layer_when_on_ground :: RenderLayer",
        "name": "render_layer_when_on_ground",
        "type": "RenderLayer"
      },
      {
        "comment": "creation_shift :: vector (optional)",
        "name": "creation_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "early_death_ticks :: uint32 (optional)",
        "name": "early_death_ticks",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "ended_in_water_trigger_effect :: TriggerEffect (optional)",
        "name": "ended_in_water_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "initial_frame_speed :: float (optional)",
        "name": "initial_frame_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "initial_height :: float (optional)",
        "name": "initial_height",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "initial_speed :: vector (optional)",
        "name": "initial_speed",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "initial_vertical_speed :: float (optional)",
        "name": "initial_vertical_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "movement_modifier :: double (optional)",
        "name": "movement_modifier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "movement_modifier_when_on_ground :: double (optional)",
        "name": "movement_modifier_when_on_ground",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "regular_trigger_effect :: TriggerEffect (optional)",
        "name": "regular_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "regular_trigger_effect_frequency :: uint32 (optional)",
        "name": "regular_trigger_effect_frequency",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "shadows :: AnimationVariations (optional)",
        "name": "shadows",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "shot_category :: string (optional)",
        "name": "shot_category",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "shots_per_flare :: uint32 (optional)",
        "name": "shots_per_flare",
        "optional": true,
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "ArtilleryProjectile",
    "extends": "Entity",
    "name": "artillery-projectile",
    "properties": [
      {
        "comment": "reveal_map :: bool",
        "name": "reveal_map",
        "type": "bool"
      },
      {
        "comment": "action :: Trigger (optional)",
        "name": "action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "chart_picture :: Sprite (optional)",
        "name": "chart_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "final_action :: Trigger (optional)",
        "name": "final_action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "height_from_ground :: float (optional)",
        "name": "height_from_ground",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "rotatable :: bool (optional)",
        "name": "rotatable",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "shadow :: Sprite (optional)",
        "name": "shadow",
        "optional": true,
        "type": "Sprite"
      }
    ]
  },
  {
    "class_name": "ArtilleryTurret",
    "extends": "EntityWithHealth",
    "name": "artillery-turret",
    "properties": [
      {
        "comment": "ammo_stack_limit :: ItemCountType",
        "name": "ammo_stack_limit",
        "type": "ItemCountType"
      },
      {
        "comment": "automated_ammo_count :: ItemCountType",
        "name": "automated_ammo_count",
        "type": "ItemCountType"
      },
      {
        "comment": "gun :: string",
        "name": "gun",
        "type": "string"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "manual_range_modifier :: double",
        "name": "manual_range_modifier",
        "type": "double"
      },
      {
        "comment": "turret_rotation_speed :: double",
        "name": "turret_rotation_speed",
        "type": "double"
      },
      {
        "comment": "alert_when_attacking :: bool (optional)",
        "name": "alert_when_attacking",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "base_picture :: Animation4Way (optional)",
        "name": "base_picture",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "base_picture_render_layer :: RenderLayer (optional)",
        "name": "base_picture_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "base_picture_secondary_draw_order :: uint8 (optional)",
        "name": "base_picture_secondary_draw_order",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "base_shift :: vector (optional)",
        "name": "base_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "cannon_barrel_light_direction :: Vector3D (optional)",
        "name": "cannon_barrel_light_direction",
        "optional": true,
        "type": "Vector3D"
      },
      {
        "comment": "cannon_barrel_pictures :: RotatedSprite (optional)",
        "name": "cannon_barrel_pictures",
        "optional": true,
        "type": "RotatedSprite"
      },
      {
        "comment": "cannon_barrel_recoil_shiftings :: table of Vector3D (optional)",
        "name": "cannon_barrel_recoil_shiftings",
        "optional": true,
        "type": {
          "table_of": "Vector3D"
        }
      },
      {
        "comment": "cannon_barrel_recoil_shiftings_load_correction_matrix :: table of Vector3D (optional)",
        "name": "cannon_barrel_recoil_shiftings_load_correction_matrix",
        "optional": true,
        "type": {
          "table_of": "Vector3D"
        }
      },
      {
        "comment": "cannon_base_pictures :: RotatedSprite (optional)",
        "name": "cannon_base_pictures",
        "optional": true,
        "type": "RotatedSprite"
      },
      {
        "comment": "cannon_parking_frame_count :: uint16 (optional)",
        "name": "cannon_parking_frame_count",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "cannon_parking_speed :: uint16 (optional)",
        "name": "cannon_parking_speed",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "disable_automatic_firing :: bool (optional)",
        "name": "disable_automatic_firing",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "rotating_sound :: InterruptibleSound (optional)",
        "name": "rotating_sound",
        "optional": true,
        "type": "InterruptibleSound"
      },
      {
        "comment": "rotating_stopped_sound :: Sound (optional)",
        "name": "rotating_stopped_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "turn_after_shooting_cooldown :: uint16 (optional)",
        "name": "turn_after_shooting_cooldown",
        "optional": true,
        "type": "uint16"
      }
    ]
  },
  {
    "class_name": "ArtilleryWagon",
    "extends": "RollingStock",
    "name": "artillery-wagon",
    "properties": [
      {
        "comment": "ammo_stack_limit :: ItemCountType",
        "name": "ammo_stack_limit",
        "type": "ItemCountType"
      },
      {
        "comment": "gun :: string",
        "name": "gun",
        "type": "string"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "manual_range_modifier :: double",
        "name": "manual_range_modifier",
        "type": "double"
      },
      {
        "comment": "turret_rotation_speed :: double",
        "name": "turret_rotation_speed",
        "type": "double"
      },
      {
        "comment": "cannon_barrel_light_direction :: Vector3D (optional)",
        "name": "cannon_barrel_light_direction",
        "optional": true,
        "type": "Vector3D"
      },
      {
        "comment": "cannon_barrel_pictures :: RotatedSprite (optional)",
        "name": "cannon_barrel_pictures",
        "optional": true,
        "type": "RotatedSprite"
      },
      {
        "comment": "cannon_barrel_recoil_shiftings :: table of Vector3D (optional)",
        "name": "cannon_barrel_recoil_shiftings",
        "optional": true,
        "type": {
          "table_of": "Vector3D"
        }
      },
      {
        "comment": "cannon_barrel_recoil_shiftings_load_correction_matrix :: table of Vector3D (optional)",
        "name": "cannon_barrel_recoil_shiftings_load_correction_matrix",
        "optional": true,
        "type": {
          "table_of": "Vector3D"
        }
      },
      {
        "comment": "cannon_base_pictures :: RotatedSprite (optional)",
        "name": "cannon_base_pictures",
        "optional": true,
        "type": "RotatedSprite"
      },
      {
        "comment": "cannon_base_shiftings :: table of vector (optional)",
        "name": "cannon_base_shiftings",
        "optional": true,
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "cannon_parking_frame_count :: uint16 (optional)",
        "name": "cannon_parking_frame_count",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "cannon_parking_speed :: float (optional)",
        "name": "cannon_parking_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "disable_automatic_firing :: bool (optional)",
        "name": "disable_automatic_firing",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "rotating_sound :: InterruptibleSound (optional)",
        "name": "rotating_sound",
        "optional": true,
        "type": "InterruptibleSound"
      },
      {
        "comment": "rotating_stopped_sound :: Sound (optional)",
        "name": "rotating_stopped_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "turn_after_shooting_cooldown :: uint16 (optional)",
        "name": "turn_after_shooting_cooldown",
        "optional": true,
        "type": "uint16"
      }
    ]
  },
  {
    "class_name": "AssemblingMachine",
    "extends": "CraftingMachine",
    "name": "assembling-machine",
    "properties": [
      {
        "comment": "fixed_recipe :: string (optional)",
        "name": "fixed_recipe",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "gui_title_key :: string (optional)",
        "name": "gui_title_key",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "ingredient_count :: uint8 (optional)",
        "name": "ingredient_count",
        "optional": true,
        "type": "uint8"
      }
    ]
  },
  {
    "class_name": "AutoplaceControl",
    "extends": "PrototypeBase",
    "name": "autoplace-control",
    "properties": [
      {
        "comment": "category :: string",
        "name": "category",
        "type": "string"
      },
      {
        "comment": "richness :: bool (optional)",
        "name": "richness",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "BatteryEquipment",
    "extends": "Equipment",
    "name": "battery-equipment",
    "properties": []
  },
  {
    "class_name": "Beacon",
    "extends": "EntityWithHealth",
    "name": "beacon",
    "properties": [
      {
        "comment": "distribution_effectivity :: double",
        "name": "distribution_effectivity",
        "type": "double"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "module_specification :: ModuleSpecification",
        "name": "module_specification",
        "type": "ModuleSpecification"
      },
      {
        "comment": "supply_area_distance :: double",
        "name": "supply_area_distance",
        "type": "double"
      },
      {
        "comment": "allowed_effects :: EffectTypeLimitation (optional)",
        "name": "allowed_effects",
        "optional": true,
        "type": "EffectTypeLimitation"
      },
      {
        "comment": "animation :: Animation (optional)",
        "name": "animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "base_picture :: Sprite (optional)",
        "name": "base_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "graphics_set :: BeaconGraphicsSet (optional)",
        "name": "graphics_set",
        "optional": true,
        "type": "BeaconGraphicsSet"
      },
      {
        "comment": "radius_visualisation_picture :: Sprite (optional)",
        "name": "radius_visualisation_picture",
        "optional": true,
        "type": "Sprite"
      }
    ]
  },
  {
    "class_name": "Beam",
    "extends": "Entity",
    "name": "beam",
    "properties": [
      {
        "comment": "body :: AnimationVariations",
        "name": "body",
        "type": "AnimationVariations"
      },
      {
        "comment": "damage_interval :: uint32",
        "name": "damage_interval",
        "type": "uint32"
      },
      {
        "comment": "head :: Animation",
        "name": "head",
        "type": "Animation"
      },
      {
        "comment": "tail :: Animation",
        "name": "tail",
        "type": "Animation"
      },
      {
        "comment": "width :: double",
        "name": "width",
        "type": "double"
      },
      {
        "comment": "action :: Trigger (optional)",
        "name": "action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "action_triggered_automatically :: bool (optional)",
        "name": "action_triggered_automatically",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "body_light :: AnimationVariations (optional)",
        "name": "body_light",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "ending :: Animation (optional)",
        "name": "ending",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "ending_light :: Animation (optional)",
        "name": "ending_light",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "ground_light_animations :: table (optional)",
        "name": "ground_light_animations",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "head_light :: Animation (optional)",
        "name": "head_light",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "light_animations :: table (optional)",
        "name": "light_animations",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "random_end_animation_rotation :: bool (optional)",
        "name": "random_end_animation_rotation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "random_target_offset :: bool (optional)",
        "name": "random_target_offset",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "start :: Animation (optional)",
        "name": "start",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "start_light :: Animation (optional)",
        "name": "start_light",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "tail_light :: Animation (optional)",
        "name": "tail_light",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "target_offset :: vector (optional)",
        "name": "target_offset",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "transparent_start_end_animations :: bool (optional)",
        "name": "transparent_start_end_animations",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "BeltImmunityEquipment",
    "extends": "Equipment",
    "name": "belt-immunity-equipment",
    "properties": [
      {
        "comment": "energy_consumption :: Energy",
        "name": "energy_consumption",
        "type": "Energy"
      }
    ]
  },
  {
    "class_name": "BlueprintBook",
    "extends": "ItemWithInventory",
    "name": "blueprint-book",
    "properties": [
      {
        "comment": "show_in_library :: bool (optional)",
        "name": "show_in_library",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "BlueprintItem",
    "extends": "SelectionTool",
    "name": "blueprint",
    "properties": []
  },
  {
    "class_name": "Boiler",
    "extends": "EntityWithHealth",
    "name": "boiler",
    "properties": [
      {
        "comment": "burning_cooldown :: uint32",
        "name": "burning_cooldown",
        "type": "uint32"
      },
      {
        "comment": "energy_consumption :: Energy",
        "name": "energy_consumption",
        "type": "Energy"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "fire :: table",
        "name": "fire",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "fire_glow :: table",
        "name": "fire_glow",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "output_fluid_box :: FluidBox",
        "name": "output_fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "structure :: table",
        "name": "structure",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "target_temperature :: double",
        "name": "target_temperature",
        "type": "double"
      },
      {
        "comment": "fire_flicker_enabled :: bool (optional)",
        "name": "fire_flicker_enabled",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "fire_glow_flicker_enabled :: bool (optional)",
        "name": "fire_glow_flicker_enabled",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "mode :: string (optional)",
        "name": "mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "patch :: table (optional)",
        "name": "patch",
        "optional": true,
        "type": {
          "table_of": null
        }
      }
    ]
  },
  {
    "class_name": "BuildEntityAchievement",
    "extends": "Achievement",
    "name": "build-entity-achievement",
    "properties": [
      {
        "comment": "to_build :: string",
        "name": "to_build",
        "type": "string"
      },
      {
        "comment": "amount :: uint32 (optional)",
        "name": "amount",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "limited_to_one_game :: bool (optional)",
        "name": "limited_to_one_game",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "until_second :: uint32 (optional)",
        "name": "until_second",
        "optional": true,
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "BurnerGenerator",
    "extends": "EntityWithHealth",
    "name": "burner-generator",
    "properties": [
      {
        "comment": "animation :: Animation4Way",
        "name": "animation",
        "type": "Animation4Way"
      },
      {
        "comment": "burner :: EnergySource",
        "name": "burner",
        "type": "EnergySource"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "max_power_output :: Energy",
        "name": "max_power_output",
        "type": "Energy"
      },
      {
        "comment": "always_draw_idle_animation :: bool (optional)",
        "name": "always_draw_idle_animation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "idle_animation :: Animation4Way (optional)",
        "name": "idle_animation",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "min_perceived_performance :: double (optional)",
        "name": "min_perceived_performance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "performance_to_sound_speedup :: double (optional)",
        "name": "performance_to_sound_speedup",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "Capsule",
    "extends": "Item",
    "name": "capsule",
    "properties": [
      {
        "comment": "capsule_action :: CapsuleAction",
        "name": "capsule_action",
        "type": "CapsuleAction"
      },
      {
        "comment": "radius_color :: Color (optional)",
        "name": "radius_color",
        "optional": true,
        "type": "Color"
      }
    ]
  },
  {
    "class_name": "Car",
    "extends": "Vehicle",
    "name": "car",
    "properties": [
      {
        "comment": "animation :: RotatedAnimation",
        "name": "animation",
        "type": "RotatedAnimation"
      },
      {
        "comment": "burner or energy_source :: EnergySource",
        "name": "burner or energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "consumption :: Energy",
        "name": "consumption",
        "type": "Energy"
      },
      {
        "comment": "effectivity :: double",
        "name": "effectivity",
        "type": "double"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "rotation_speed :: double",
        "name": "rotation_speed",
        "type": "double"
      },
      {
        "comment": "guns :: table of strings of prototype names (optional)",
        "name": "guns",
        "optional": true,
        "type": {
          "table_of": "strings"
        }
      },
      {
        "comment": "has_belt_immunity :: bool (optional)",
        "name": "has_belt_immunity",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "immune_to_rock_impacts :: bool (optional)",
        "name": "immune_to_rock_impacts",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "immune_to_tree_impacts :: bool (optional)",
        "name": "immune_to_tree_impacts",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "sound_no_fuel :: Sound (optional)",
        "name": "sound_no_fuel",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "tank_driving :: bool (optional)",
        "name": "tank_driving",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "track_particle_triggers :: FootstepTriggerEffectList (optional)",
        "name": "track_particle_triggers",
        "optional": true,
        "type": "FootstepTriggerEffectList"
      },
      {
        "comment": "turret_animation :: RotatedAnimation (optional)",
        "name": "turret_animation",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "turret_return_timeout :: uint32 (optional)",
        "name": "turret_return_timeout",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "turret_rotation_speed :: double (optional)",
        "name": "turret_rotation_speed",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "CargoWagon",
    "extends": "RollingStock",
    "name": "cargo-wagon",
    "properties": [
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      }
    ]
  },
  {
    "class_name": "Character",
    "extends": "EntityWithHealth",
    "name": "character",
    "properties": [
      {
        "comment": "animations :: table of CharacterArmorAnimation",
        "name": "animations",
        "type": {
          "table_of": "CharacterArmorAnimation"
        }
      },
      {
        "comment": "build_distance :: uint32",
        "name": "build_distance",
        "type": "uint32"
      },
      {
        "comment": "damage_hit_tint :: Color",
        "name": "damage_hit_tint",
        "type": "Color"
      },
      {
        "comment": "distance_per_frame :: double",
        "name": "distance_per_frame",
        "type": "double"
      },
      {
        "comment": "drop_item_distance :: uint32",
        "name": "drop_item_distance",
        "type": "uint32"
      },
      {
        "comment": "eat :: Sound",
        "name": "eat",
        "type": "Sound"
      },
      {
        "comment": "heartbeat :: Sound",
        "name": "heartbeat",
        "type": "Sound"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "item_pickup_distance :: double",
        "name": "item_pickup_distance",
        "type": "double"
      },
      {
        "comment": "loot_pickup_distance :: double",
        "name": "loot_pickup_distance",
        "type": "double"
      },
      {
        "comment": "maximum_corner_sliding_distance :: double",
        "name": "maximum_corner_sliding_distance",
        "type": "double"
      },
      {
        "comment": "mining_speed :: double",
        "name": "mining_speed",
        "type": "double"
      },
      {
        "comment": "mining_with_tool_particles_animation_positions :: table of float",
        "name": "mining_with_tool_particles_animation_positions",
        "type": {
          "table_of": "float"
        }
      },
      {
        "comment": "reach_distance :: uint32",
        "name": "reach_distance",
        "type": "uint32"
      },
      {
        "comment": "reach_resource_distance :: double",
        "name": "reach_resource_distance",
        "type": "double"
      },
      {
        "comment": "running_sound_animation_positions :: table of float",
        "name": "running_sound_animation_positions",
        "type": {
          "table_of": "float"
        }
      },
      {
        "comment": "running_speed :: double",
        "name": "running_speed",
        "type": "double"
      },
      {
        "comment": "ticks_to_keep_aiming_direction :: uint32",
        "name": "ticks_to_keep_aiming_direction",
        "type": "uint32"
      },
      {
        "comment": "ticks_to_keep_gun :: uint32",
        "name": "ticks_to_keep_gun",
        "type": "uint32"
      },
      {
        "comment": "ticks_to_stay_in_combat :: uint32",
        "name": "ticks_to_stay_in_combat",
        "type": "uint32"
      },
      {
        "comment": "character_corpse :: string (optional)",
        "name": "character_corpse",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "crafting_categories :: table of string (optional)",
        "name": "crafting_categories",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "enter_vehicle_distance :: double (optional)",
        "name": "enter_vehicle_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "footprint_particles :: table of FootprintParticle (optional)",
        "name": "footprint_particles",
        "optional": true,
        "type": {
          "table_of": "FootprintParticle"
        }
      },
      {
        "comment": "footstep_particle_triggers :: FootstepTriggerEffectList (optional)",
        "name": "footstep_particle_triggers",
        "optional": true,
        "type": "FootstepTriggerEffectList"
      },
      {
        "comment": "has_belt_immunity :: bool (optional)",
        "name": "has_belt_immunity",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "left_footprint_frames :: table of float (optional)",
        "name": "left_footprint_frames",
        "optional": true,
        "type": {
          "table_of": "float"
        }
      },
      {
        "comment": "left_footprint_offset :: vector (optional)",
        "name": "left_footprint_offset",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "mining_categories :: table of string (optional)",
        "name": "mining_categories",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "respawn_time :: uint32 (optional)",
        "name": "respawn_time",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "right_footprint_frames :: table of float (optional)",
        "name": "right_footprint_frames",
        "optional": true,
        "type": {
          "table_of": "float"
        }
      },
      {
        "comment": "right_footprint_offset :: vector (optional)",
        "name": "right_footprint_offset",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "synced_footstep_particle_triggers :: FootstepTriggerEffectList (optional)",
        "name": "synced_footstep_particle_triggers",
        "optional": true,
        "type": "FootstepTriggerEffectList"
      },
      {
        "comment": "tool_attack_distance :: double (optional)",
        "name": "tool_attack_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "tool_attack_result :: Trigger (optional)",
        "name": "tool_attack_result",
        "optional": true,
        "type": "Trigger"
      }
    ]
  },
  {
    "class_name": "CharacterCorpse",
    "extends": "Entity",
    "name": "character-corpse",
    "properties": [
      {
        "comment": "time_to_live :: uint32",
        "name": "time_to_live",
        "type": "uint32"
      },
      {
        "comment": "armor_picture_mapping :: table (optional)",
        "name": "armor_picture_mapping",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "picture :: Animation (optional)",
        "name": "picture",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "pictures :: AnimationVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      }
    ]
  },
  {
    "class_name": "Cliff",
    "extends": "Entity",
    "name": "cliff",
    "properties": [
      {
        "comment": "grid_offset :: vector",
        "name": "grid_offset",
        "type": "vector"
      },
      {
        "comment": "grid_size :: vector",
        "name": "grid_size",
        "type": "vector"
      },
      {
        "comment": "orientations :: table of OrientedCliffPrototype",
        "name": "orientations",
        "type": {
          "table_of": "OrientedCliffPrototype"
        }
      },
      {
        "comment": "cliff_explosive :: string (optional)",
        "name": "cliff_explosive",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "cliff_height :: float (optional)",
        "name": "cliff_height",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "CombatRobot",
    "extends": "FlyingRobot",
    "name": "combat-robot",
    "properties": [
      {
        "comment": "attack_parameters :: AttackParameters",
        "name": "attack_parameters",
        "type": "AttackParameters"
      },
      {
        "comment": "idle :: RotatedAnimation",
        "name": "idle",
        "type": "RotatedAnimation"
      },
      {
        "comment": "in_motion :: RotatedAnimation",
        "name": "in_motion",
        "type": "RotatedAnimation"
      },
      {
        "comment": "shadow_idle :: RotatedAnimation",
        "name": "shadow_idle",
        "type": "RotatedAnimation"
      },
      {
        "comment": "shadow_in_motion :: RotatedAnimation",
        "name": "shadow_in_motion",
        "type": "RotatedAnimation"
      },
      {
        "comment": "time_to_live :: uint32",
        "name": "time_to_live",
        "type": "uint32"
      },
      {
        "comment": "destroy_action :: Trigger (optional)",
        "name": "destroy_action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "follows_player :: bool (optional)",
        "name": "follows_player",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "friction :: double (optional)",
        "name": "friction",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "range_from_player :: double (optional)",
        "name": "range_from_player",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "CombatRobotCountAchievement",
    "extends": "Achievement",
    "name": "combat-robot-count",
    "properties": [
      {
        "comment": "count :: uint32 (optional)",
        "name": "count",
        "optional": true,
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "Combinator",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "active_energy_usage :: Energy",
        "name": "active_energy_usage",
        "type": "Energy"
      },
      {
        "comment": "activity_led_light_offsets :: table of vector",
        "name": "activity_led_light_offsets",
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "activity_led_sprites :: Sprite4Way",
        "name": "activity_led_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "input_connection_bounding_box :: BoundingBox",
        "name": "input_connection_bounding_box",
        "type": "BoundingBox"
      },
      {
        "comment": "input_connection_points :: table of WireConnectionPoint",
        "name": "input_connection_points",
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "output_connection_bounding_box :: BoundingBox",
        "name": "output_connection_bounding_box",
        "type": "BoundingBox"
      },
      {
        "comment": "output_connection_points :: table of WireConnectionPoint",
        "name": "output_connection_points",
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "screen_light_offsets :: table of vector",
        "name": "screen_light_offsets",
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "sprites :: Sprite4Way",
        "name": "sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "activity_led_hold_time :: uint8 (optional)",
        "name": "activity_led_hold_time",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "activity_led_light :: LightDefinition (optional)",
        "name": "activity_led_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "screen_light :: LightDefinition (optional)",
        "name": "screen_light",
        "optional": true,
        "type": "LightDefinition"
      }
    ]
  },
  {
    "class_name": "ConstantCombinator",
    "extends": "EntityWithHealth",
    "name": "constant-combinator",
    "properties": [
      {
        "comment": "activity_led_light_offsets :: table of vector",
        "name": "activity_led_light_offsets",
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "activity_led_sprites :: Sprite4Way",
        "name": "activity_led_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint",
        "name": "circuit_wire_connection_points",
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "item_slot_count :: uint32",
        "name": "item_slot_count",
        "type": "uint32"
      },
      {
        "comment": "sprites :: Sprite4Way",
        "name": "sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "activity_led_light :: LightDefinition (optional)",
        "name": "activity_led_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "ConstructWithRobotsAchievement",
    "extends": "Achievement",
    "name": "construct-with-robots-achievement",
    "properties": [
      {
        "comment": "limited_to_one_game :: bool",
        "name": "limited_to_one_game",
        "type": "bool"
      },
      {
        "comment": "amount :: uint32 (optional)",
        "name": "amount",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "more_than_manually :: bool (optional)",
        "name": "more_than_manually",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "ConstructionRobot",
    "extends": "RobotWithLogisticInterface",
    "name": "construction-robot",
    "properties": [
      {
        "comment": "construction_vector :: vector",
        "name": "construction_vector",
        "type": "vector"
      },
      {
        "comment": "smoke :: Animation (optional)",
        "name": "smoke",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "sparks :: AnimationVariations (optional)",
        "name": "sparks",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "working :: RotatedAnimation (optional)",
        "name": "working",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "working_light :: LightDefinition (optional)",
        "name": "working_light",
        "optional": true,
        "type": "LightDefinition"
      }
    ]
  },
  {
    "class_name": "Container",
    "extends": "EntityWithHealth",
    "name": "container",
    "properties": [
      {
        "comment": "inventory_size :: uint16",
        "name": "inventory_size",
        "type": "uint16"
      },
      {
        "comment": "picture :: Sprite",
        "name": "picture",
        "type": "Sprite"
      },
      {
        "comment": "circuit_connector_sprites :: CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": "CircuitConnectorSprites"
      },
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": "WireConnectionPoint"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "enable_inventory_bar :: bool (optional)",
        "name": "enable_inventory_bar",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "scale_info_icons :: bool (optional)",
        "name": "scale_info_icons",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "CopyPasteTool",
    "extends": "SelectionTool",
    "name": "copy-paste-tool",
    "properties": [
      {
        "comment": "cuts :: bool (optional)",
        "name": "cuts",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Corpse",
    "extends": "Entity",
    "name": "corpse",
    "properties": [
      {
        "comment": "animation :: RotatedAnimationVariations (optional)",
        "name": "animation",
        "optional": true,
        "type": "RotatedAnimationVariations"
      },
      {
        "comment": "animation_overlay :: RotatedAnimationVariations (optional)",
        "name": "animation_overlay",
        "optional": true,
        "type": "RotatedAnimationVariations"
      },
      {
        "comment": "animation_overlay_final_render_layer :: RenderLayer (optional)",
        "name": "animation_overlay_final_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "animation_overlay_render_layer :: RenderLayer (optional)",
        "name": "animation_overlay_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "animation_render_layer :: RenderLayer (optional)",
        "name": "animation_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "direction_shuffle :: table of tables of uint16 (optional)",
        "name": "direction_shuffle",
        "optional": true,
        "type": {
          "table_of": "tables"
        }
      },
      {
        "comment": "dying_speed :: float (optional)",
        "name": "dying_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "final_render_layer :: RenderLayer (optional)",
        "name": "final_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "ground_patch :: AnimationVariations (optional)",
        "name": "ground_patch",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "ground_patch_fade_in_delay :: float (optional)",
        "name": "ground_patch_fade_in_delay",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "ground_patch_fade_in_speed :: float (optional)",
        "name": "ground_patch_fade_in_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "ground_patch_fade_out_duration :: float (optional)",
        "name": "ground_patch_fade_out_duration",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "ground_patch_fade_out_start :: float (optional)",
        "name": "ground_patch_fade_out_start",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "ground_patch_higher :: AnimationVariations (optional)",
        "name": "ground_patch_higher",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "ground_patch_render_layer :: RenderLayer (optional)",
        "name": "ground_patch_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "remove_on_entity_placement :: bool (optional)",
        "name": "remove_on_entity_placement",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "remove_on_tile_placement :: bool (optional)",
        "name": "remove_on_tile_placement",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "shuffle_directions_at_frame :: uint8 (optional)",
        "name": "shuffle_directions_at_frame",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "splash :: AnimationVariations (optional)",
        "name": "splash",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "splash_render_layer :: RenderLayer (optional)",
        "name": "splash_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "splash_speed :: float (optional)",
        "name": "splash_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "time_before_removed :: int32 (optional)",
        "name": "time_before_removed",
        "optional": true,
        "type": "int32"
      },
      {
        "comment": "time_before_shading_off :: int32 (optional)",
        "name": "time_before_shading_off",
        "optional": true,
        "type": "int32"
      },
      {
        "comment": "use_tile_color_for_ground_patch_tint :: bool (optional)",
        "name": "use_tile_color_for_ground_patch_tint",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "CraftingMachine",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "crafting_categories :: table of strings",
        "name": "crafting_categories",
        "type": {
          "table_of": "strings"
        }
      },
      {
        "comment": "crafting_speed :: double",
        "name": "crafting_speed",
        "type": "double"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "allowed_effects :: EffectTypeLimitation (optional)",
        "name": "allowed_effects",
        "optional": true,
        "type": "EffectTypeLimitation"
      },
      {
        "comment": "always_draw_idle_animation :: bool (optional)",
        "name": "always_draw_idle_animation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "animation :: Animation4Way (optional)",
        "name": "animation",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "base_productivity :: float (optional)",
        "name": "base_productivity",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "default_recipe_tint :: table of Color (optional)",
        "name": "default_recipe_tint",
        "optional": true,
        "type": {
          "table_of": "Color"
        }
      },
      {
        "comment": "draw_entity_info_icon_background :: bool (optional)",
        "name": "draw_entity_info_icon_background",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "entity_info_icon_shift :: vector (optional)",
        "name": "entity_info_icon_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "fluid_boxes :: table of FluidBox (optional)",
        "name": "fluid_boxes",
        "optional": true,
        "type": {
          "table_of": "FluidBox"
        }
      },
      {
        "comment": "idle_animation :: Animation4Way (optional)",
        "name": "idle_animation",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "match_animation_speed_to_activity :: bool (optional)",
        "name": "match_animation_speed_to_activity",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "module_specification :: ModuleSpecification (optional)",
        "name": "module_specification",
        "optional": true,
        "type": "ModuleSpecification"
      },
      {
        "comment": "return_ingredients_on_change :: bool (optional)",
        "name": "return_ingredients_on_change",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "scale_entity_info_icon :: bool (optional)",
        "name": "scale_entity_info_icon",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "shift_animation_transition_duration :: uint16 (optional)",
        "name": "shift_animation_transition_duration",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "shift_animation_waypoint_stop_duration :: uint16 (optional)",
        "name": "shift_animation_waypoint_stop_duration",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "shift_animation_waypoints :: table of table (array) of vector (optional)",
        "name": "shift_animation_waypoints",
        "optional": true,
        "type": {
          "table_of": {
            "table_of": "vector"
          }
        }
      },
      {
        "comment": "show_recipe_icon :: bool (optional)",
        "name": "show_recipe_icon",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "status_colors :: table of Color (optional)",
        "name": "status_colors",
        "optional": true,
        "type": {
          "table_of": "Color"
        }
      },
      {
        "comment": "working_visualisations :: table of WorkingVisualisation (optional)",
        "name": "working_visualisations",
        "optional": true,
        "type": {
          "table_of": "WorkingVisualisation"
        }
      }
    ]
  },
  {
    "class_name": "CurvedRail",
    "extends": "Rail",
    "name": "curved-rail",
    "properties": [
      {
        "comment": "bending_type :: string (optional)",
        "name": "bending_type",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "CustomInput",
    "extends": "PrototypeBase",
    "name": "custom-input",
    "properties": [
      {
        "comment": "key_sequence :: string",
        "name": "key_sequence",
        "type": "string"
      },
      {
        "comment": "action :: string (optional)",
        "name": "action",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "alternative_key_sequence :: string (optional)",
        "name": "alternative_key_sequence",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "consuming :: ConsumingType (optional)",
        "name": "consuming",
        "optional": true,
        "type": "ConsumingType"
      },
      {
        "comment": "enabled :: bool (optional)",
        "name": "enabled",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "enabled_while_in_cutscene :: bool (optional)",
        "name": "enabled_while_in_cutscene",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "enabled_while_spectating :: bool (optional)",
        "name": "enabled_while_spectating",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "item_to_create :: string (optional)",
        "name": "item_to_create",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "linked_game_control :: string (optional)",
        "name": "linked_game_control",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "DamageType",
    "extends": "PrototypeBase",
    "name": "damage-type",
    "properties": [
      {
        "comment": "hidden :: bool (optional)",
        "name": "hidden",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "DeciderCombinator",
    "extends": "Combinator",
    "name": "decider-combinator",
    "properties": [
      {
        "comment": "equal_symbol_sprites :: Sprite4Way",
        "name": "equal_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "greater_or_equal_symbol_sprites :: Sprite4Way",
        "name": "greater_or_equal_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "greater_symbol_sprites :: Sprite4Way",
        "name": "greater_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "less_or_equal_symbol_sprites :: Sprite4Way",
        "name": "less_or_equal_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "less_symbol_sprites :: Sprite4Way",
        "name": "less_symbol_sprites",
        "type": "Sprite4Way"
      },
      {
        "comment": "not_equal_symbol_sprites :: Sprite4Way",
        "name": "not_equal_symbol_sprites",
        "type": "Sprite4Way"
      }
    ]
  },
  {
    "class_name": "DeconstructWithRobotsAchievement",
    "extends": "Achievement",
    "name": "deconstruct-with-robots-achievement",
    "properties": [
      {
        "comment": "amount :: uint32",
        "name": "amount",
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "DeconstructibleTileProxy",
    "extends": "Entity",
    "name": "deconstructible-tile-proxy",
    "properties": []
  },
  {
    "class_name": "DeconstructionItem",
    "extends": "SelectionTool",
    "name": "deconstruction-item",
    "properties": [
      {
        "comment": "entity_filter_count :: Types/ItemStackIndex (optional)",
        "name": "entity_filter_count",
        "optional": true,
        "type": "ItemStackIndex"
      },
      {
        "comment": "tile_filter_count :: Types/ItemStackIndex (optional)",
        "name": "tile_filter_count",
        "optional": true,
        "type": "ItemStackIndex"
      }
    ]
  },
  {
    "class_name": "Decorative",
    "extends": "PrototypeBase",
    "name": "optimized-decorative",
    "properties": [
      {
        "comment": "pictures :: SpriteVariations",
        "name": "pictures",
        "type": "SpriteVariations"
      },
      {
        "comment": "autoplace :: AutoplaceSpecification (optional)",
        "name": "autoplace",
        "optional": true,
        "type": "AutoplaceSpecification"
      },
      {
        "comment": "collision_box :: BoundingBox (optional)",
        "name": "collision_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "collision_mask :: CollisionMask (optional)",
        "name": "collision_mask",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "grows_through_rail_path :: bool (optional)",
        "name": "grows_through_rail_path",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "tile_layer :: uint8 (optional)",
        "name": "tile_layer",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "trigger_effect :: TriggerEffect (optional)",
        "name": "trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "walking_sound :: Sound (optional)",
        "name": "walking_sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "DeliverByRobotsAchievement",
    "extends": "Achievement",
    "name": "deliver-by-robots-achievement",
    "properties": [
      {
        "comment": "amount :: MaterialAmountType",
        "name": "amount",
        "type": "MaterialAmountType"
      }
    ]
  },
  {
    "class_name": "DontBuildEntityAchievement",
    "extends": "Achievement",
    "name": "dont-build-entity-achievement",
    "properties": [
      {
        "comment": "dont_build :: table of string or string",
        "name": "dont_build",
        "type": {
          "or": [
            {
              "table_of": "string"
            },
            "string"
          ]
        }
      },
      {
        "comment": "amount :: uint32 (optional)",
        "name": "amount",
        "optional": true,
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "DontCraftManuallyAchievement",
    "extends": "Achievement",
    "name": "dont-craft-manually-achievement",
    "properties": [
      {
        "comment": "amount :: MaterialAmountType",
        "name": "amount",
        "type": "MaterialAmountType"
      }
    ]
  },
  {
    "class_name": "DontUseEntityInEnergyProductionAchievement",
    "extends": "Achievement",
    "name": "dont-use-entity-in-energy-production-achievement",
    "properties": [
      {
        "comment": "excluded :: string or table of string",
        "name": "excluded",
        "type": {
          "or": [
            "string",
            {
              "table_of": "string"
            }
          ]
        }
      },
      {
        "comment": "included :: string or table of string",
        "name": "included",
        "type": {
          "or": [
            "string",
            {
              "table_of": "string"
            }
          ]
        }
      },
      {
        "comment": "last_hour_only :: bool (optional)",
        "name": "last_hour_only",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "minimum_energy_produced :: Energy (optional)",
        "name": "minimum_energy_produced",
        "optional": true,
        "type": "Energy"
      }
    ]
  },
  {
    "class_name": "EditorController",
    "name": "editor-controller",
    "properties": [
      {
        "comment": "adjust_speed_based_off_zoom :: bool",
        "name": "adjust_speed_based_off_zoom",
        "type": "bool"
      },
      {
        "comment": "enable_flash_light :: bool",
        "name": "enable_flash_light",
        "type": "bool"
      },
      {
        "comment": "fill_built_entity_energy_buffers :: bool",
        "name": "fill_built_entity_energy_buffers",
        "type": "bool"
      },
      {
        "comment": "generate_neighbor_chunks :: bool",
        "name": "generate_neighbor_chunks",
        "type": "bool"
      },
      {
        "comment": "gun_inventory_size :: ItemStackIndex",
        "name": "gun_inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "instant_blueprint_building :: bool",
        "name": "instant_blueprint_building",
        "type": "bool"
      },
      {
        "comment": "instant_deconstruction :: bool",
        "name": "instant_deconstruction",
        "type": "bool"
      },
      {
        "comment": "instant_rail_planner :: bool",
        "name": "instant_rail_planner",
        "type": "bool"
      },
      {
        "comment": "instant_upgrading :: bool",
        "name": "instant_upgrading",
        "type": "bool"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "item_pickup_distance :: double",
        "name": "item_pickup_distance",
        "type": "double"
      },
      {
        "comment": "loot_pickup_distance :: double",
        "name": "loot_pickup_distance",
        "type": "double"
      },
      {
        "comment": "mining_speed :: double",
        "name": "mining_speed",
        "type": "double"
      },
      {
        "comment": "movement_speed :: double",
        "name": "movement_speed",
        "type": "double"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "placed_corpses_never_expire :: bool",
        "name": "placed_corpses_never_expire",
        "type": "bool"
      },
      {
        "comment": "render_as_day :: bool",
        "name": "render_as_day",
        "type": "bool"
      },
      {
        "comment": "show_additional_entity_info_gui :: bool",
        "name": "show_additional_entity_info_gui",
        "type": "bool"
      },
      {
        "comment": "show_character_tab_in_controller_gui :: bool",
        "name": "show_character_tab_in_controller_gui",
        "type": "bool"
      },
      {
        "comment": "show_entity_health_bars :: bool",
        "name": "show_entity_health_bars",
        "type": "bool"
      },
      {
        "comment": "show_entity_tags :: bool",
        "name": "show_entity_tags",
        "type": "bool"
      },
      {
        "comment": "show_hidden_entities :: bool",
        "name": "show_hidden_entities",
        "type": "bool"
      },
      {
        "comment": "show_infinity_filters_in_controller_gui :: bool",
        "name": "show_infinity_filters_in_controller_gui",
        "type": "bool"
      },
      {
        "comment": "show_status_icons :: bool",
        "name": "show_status_icons",
        "type": "bool"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "ElectricEnergyInterface",
    "extends": "EntityWithHealth",
    "name": "electric-energy-interface",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "animation :: Animation (optional)",
        "name": "animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "animations :: Animation4Way (optional)",
        "name": "animations",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "continuous_animation :: bool (optional)",
        "name": "continuous_animation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "energy_production :: Energy (optional)",
        "name": "energy_production",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "energy_usage :: Energy (optional)",
        "name": "energy_usage",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "gui_mode :: string (optional)",
        "name": "gui_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "pictures :: Sprite4Way (optional)",
        "name": "pictures",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      }
    ]
  },
  {
    "class_name": "ElectricPole",
    "extends": "EntityWithHealth",
    "name": "electric-pole",
    "properties": [
      {
        "comment": "connection_points :: table of WireConnectionPoint",
        "name": "connection_points",
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "pictures :: RotatedSprite",
        "name": "pictures",
        "type": "RotatedSprite"
      },
      {
        "comment": "supply_area_distance :: double",
        "name": "supply_area_distance",
        "type": "double"
      },
      {
        "comment": "active_picture :: Sprite (optional)",
        "name": "active_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "maximum_wire_distance :: double (optional)",
        "name": "maximum_wire_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "radius_visualisation_picture :: Sprite (optional)",
        "name": "radius_visualisation_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "track_coverage_during_build_by_moving :: bool (optional)",
        "name": "track_coverage_during_build_by_moving",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "ElectricTurret",
    "extends": "Turret",
    "name": "electric-turret",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      }
    ]
  },
  {
    "class_name": "EnemySpawner",
    "extends": "EntityWithHealth",
    "name": "unit-spawner",
    "properties": [
      {
        "comment": "animations :: AnimationVariations",
        "name": "animations",
        "type": "AnimationVariations"
      },
      {
        "comment": "call_for_help_radius :: double",
        "name": "call_for_help_radius",
        "type": "double"
      },
      {
        "comment": "max_count_of_owned_units :: uint32",
        "name": "max_count_of_owned_units",
        "type": "uint32"
      },
      {
        "comment": "max_friends_around_to_spawn :: uint32",
        "name": "max_friends_around_to_spawn",
        "type": "uint32"
      },
      {
        "comment": "max_richness_for_spawn_shift :: double",
        "name": "max_richness_for_spawn_shift",
        "type": "double"
      },
      {
        "comment": "max_spawn_shift :: double",
        "name": "max_spawn_shift",
        "type": "double"
      },
      {
        "comment": "pollution_absorption_absolute :: double",
        "name": "pollution_absorption_absolute",
        "type": "double"
      },
      {
        "comment": "pollution_absorption_proportional :: double",
        "name": "pollution_absorption_proportional",
        "type": "double"
      },
      {
        "comment": "result_units :: table of UnitSpawnDefinition",
        "name": "result_units",
        "type": {
          "table_of": "UnitSpawnDefinition"
        }
      },
      {
        "comment": "spawning_cooldown :: array of two double",
        "name": "spawning_cooldown",
        "type": {
          "tuple": {
            "n": 2,
            "of": "double"
          }
        }
      },
      {
        "comment": "spawning_radius :: double",
        "name": "spawning_radius",
        "type": "double"
      },
      {
        "comment": "spawning_spacing :: double",
        "name": "spawning_spacing",
        "type": "double"
      },
      {
        "comment": "dying_sound :: Sound (optional)",
        "name": "dying_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "integration :: SpriteVariations (optional)",
        "name": "integration",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "max_darkness_to_spawn :: float (optional)",
        "name": "max_darkness_to_spawn",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "min_darkness_to_spawn :: float (optional)",
        "name": "min_darkness_to_spawn",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "random_animation_offset :: bool (optional)",
        "name": "random_animation_offset",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "EnergyShieldEquipment",
    "extends": "Equipment",
    "name": "energy-shield-equipment",
    "properties": [
      {
        "comment": "energy_per_shield :: Energy",
        "name": "energy_per_shield",
        "type": "Energy"
      },
      {
        "comment": "max_shield_value :: float",
        "name": "max_shield_value",
        "type": "float"
      }
    ]
  },
  {
    "class_name": "Entity",
    "extends": "PrototypeBase",
    "properties": [
      {
        "comment": "icons, icon,  icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "additional_pastable_entities :: table of string (optional)",
        "name": "additional_pastable_entities",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "alert_icon_scale :: float (optional)",
        "name": "alert_icon_scale",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "alert_icon_shift :: vector (optional)",
        "name": "alert_icon_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "allow_copy_paste :: bool (optional)",
        "name": "allow_copy_paste",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "autoplace :: AutoplaceSpecification (optional)",
        "name": "autoplace",
        "optional": true,
        "type": "AutoplaceSpecification"
      },
      {
        "comment": "build_base_evolution_requirement :: double (optional)",
        "name": "build_base_evolution_requirement",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "build_sound :: Sound (optional)",
        "name": "build_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "close_sound :: Sound (optional)",
        "name": "close_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "collision_box :: BoundingBox (optional)",
        "name": "collision_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "collision_mask :: CollisionMask (optional)",
        "name": "collision_mask",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "created_effect :: Trigger (optional)",
        "name": "created_effect",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "created_smoke :: CreateTrivialSmokeEffectItem (optional)",
        "name": "created_smoke",
        "optional": true,
        "type": "CreateTrivialSmokeEffectItem"
      },
      {
        "comment": "drawing_box :: BoundingBox (optional)",
        "name": "drawing_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "emissions_per_second :: double (optional)",
        "name": "emissions_per_second",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "enemy_map_color :: Color (optional)",
        "name": "enemy_map_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "fast_replaceable_group :: string (optional)",
        "name": "fast_replaceable_group",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "flags :: EntityPrototypeFlags (optional)",
        "name": "flags",
        "optional": true,
        "type": "EntityPrototypeFlags"
      },
      {
        "comment": "friendly_map_color :: Color (optional)",
        "name": "friendly_map_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "hit_visualization_box :: BoundingBox (optional)",
        "name": "hit_visualization_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "map_color :: Color (optional)",
        "name": "map_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "map_generator_bounding_box :: BoundingBox (optional)",
        "name": "map_generator_bounding_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "minable :: MinableProperties (optional)",
        "name": "minable",
        "optional": true,
        "type": "MinableProperties"
      },
      {
        "comment": "mined_sound :: Sound (optional)",
        "name": "mined_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "mining_sound :: Sound (optional)",
        "name": "mining_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "next_upgrade :: string (optional)",
        "name": "next_upgrade",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "open_sound :: Sound (optional)",
        "name": "open_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "placeable_by :: ItemToPlace or table of ItemToPlace (optional)",
        "name": "placeable_by",
        "optional": true,
        "type": {
          "or": [
            "ItemToPlace",
            {
              "table_of": "ItemToPlace"
            }
          ]
        }
      },
      {
        "comment": "radius_visualisation_specification :: RadiusVisualisationSpecification (optional)",
        "name": "radius_visualisation_specification",
        "optional": true,
        "type": "RadiusVisualisationSpecification"
      },
      {
        "comment": "remains_when_mined :: string or table of string (optional)",
        "name": "remains_when_mined",
        "optional": true,
        "type": {
          "or": [
            "string",
            {
              "table_of": "string"
            }
          ]
        }
      },
      {
        "comment": "remove_decoratives :: string (optional)",
        "name": "remove_decoratives",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "rotated_sound :: Sound (optional)",
        "name": "rotated_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "selectable_in_game :: bool (optional)",
        "name": "selectable_in_game",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "selection_box :: BoundingBox (optional)",
        "name": "selection_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "selection_priority :: uint8 (optional)",
        "name": "selection_priority",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "shooting_cursor_size :: double (optional)",
        "name": "shooting_cursor_size",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "sticker_box :: BoundingBox (optional)",
        "name": "sticker_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "subgroup :: string (optional)",
        "name": "subgroup",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "tile_height :: uint32 (optional)",
        "name": "tile_height",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "tile_width :: uint32 (optional)",
        "name": "tile_width",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "trigger_target_mask :: TriggerTargetMask (optional)",
        "name": "trigger_target_mask",
        "optional": true,
        "type": "TriggerTargetMask"
      },
      {
        "comment": "vehicle_impact_sound :: Sound (optional)",
        "name": "vehicle_impact_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "water_reflection :: WaterReflectionDefinition (optional)",
        "name": "water_reflection",
        "optional": true,
        "type": "WaterReflectionDefinition"
      },
      {
        "comment": "working_sound :: WorkingSound (optional)",
        "name": "working_sound",
        "optional": true,
        "type": "WorkingSound"
      }
    ]
  },
  {
    "class_name": "EntityGhost",
    "extends": "Entity",
    "name": "entity-ghost",
    "properties": [
      {
        "comment": "large_build_sound :: Sound (optional)",
        "name": "large_build_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "medium_build_sound :: Sound (optional)",
        "name": "medium_build_sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "EntityParticle",
    "extends": "Entity",
    "name": "particle",
    "properties": []
  },
  {
    "class_name": "EntityWithHealth",
    "extends": "Entity",
    "properties": [
      {
        "comment": "alert_when_damaged :: bool (optional)",
        "name": "alert_when_damaged",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "attack_reaction :: AttackReaction (optional)",
        "name": "attack_reaction",
        "optional": true,
        "type": "AttackReaction"
      },
      {
        "comment": "corpse :: string or table of strings (optional)",
        "name": "corpse",
        "optional": true,
        "type": {
          "or": [
            "string",
            {
              "table_of": "strings"
            }
          ]
        }
      },
      {
        "comment": "create_ghost_on_death :: bool (optional)",
        "name": "create_ghost_on_death",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "damaged_trigger_effect :: TriggerEffect (optional)",
        "name": "damaged_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "dying_explosion :: ExplosionDefinition or table of ExplosionDefinition (optional)",
        "name": "dying_explosion",
        "optional": true,
        "type": {
          "or": [
            "ExplosionDefinition",
            {
              "table_of": "ExplosionDefinition"
            }
          ]
        }
      },
      {
        "comment": "dying_trigger_effect :: TriggerEffect (optional)",
        "name": "dying_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "healing_per_tick :: float (optional)",
        "name": "healing_per_tick",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "hide_resistances :: bool (optional)",
        "name": "hide_resistances",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "integration_patch :: Sprite4Way (optional)",
        "name": "integration_patch",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "integration_patch_render_layer :: RenderLayer (optional)",
        "name": "integration_patch_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "loot :: Loot (optional)",
        "name": "loot",
        "optional": true,
        "type": "Loot"
      },
      {
        "comment": "max_health :: float (optional)",
        "name": "max_health",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "random_corpse_variation :: bool (optional)",
        "name": "random_corpse_variation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "repair_sound :: Sound (optional)",
        "name": "repair_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "repair_speed_modifier :: float (optional)",
        "name": "repair_speed_modifier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "resistances :: Resistances (optional)",
        "name": "resistances",
        "optional": true,
        "type": "Resistances"
      }
    ]
  },
  {
    "class_name": "Equipment",
    "extends": "PrototypeBase",
    "properties": [
      {
        "comment": "categories :: table of string",
        "name": "categories",
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "shape :: EquipmentShape",
        "name": "shape",
        "type": "EquipmentShape"
      },
      {
        "comment": "sprite :: Sprite",
        "name": "sprite",
        "type": "Sprite"
      },
      {
        "comment": "ability_icon :: Sprite (optional)",
        "name": "ability_icon",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "background_border_color :: Color (optional)",
        "name": "background_border_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "background_color :: Color (optional)",
        "name": "background_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "grabbed_background_color :: Color (optional)",
        "name": "grabbed_background_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "take_result :: string (optional)",
        "name": "take_result",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "EquipmentCategory",
    "extends": "PrototypeBase",
    "name": "equipment-category",
    "properties": []
  },
  {
    "class_name": "EquipmentGrid",
    "extends": "PrototypeBase",
    "name": "equipment-grid",
    "properties": [
      {
        "comment": "equipment_categories :: table of string",
        "name": "equipment_categories",
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "height :: uint32",
        "name": "height",
        "type": "uint32"
      },
      {
        "comment": "width :: uint32",
        "name": "width",
        "type": "uint32"
      },
      {
        "comment": "locked :: bool (optional)",
        "name": "locked",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Explosion",
    "extends": "Entity",
    "name": "explosion",
    "properties": [
      {
        "comment": "animations :: AnimationVariations",
        "name": "animations",
        "type": "AnimationVariations"
      },
      {
        "comment": "beam :: bool (optional)",
        "name": "beam",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "correct_rotation :: bool (optional)",
        "name": "correct_rotation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "height :: float (optional)",
        "name": "height",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "rotate :: bool (optional)",
        "name": "rotate",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "smoke :: string (optional)",
        "name": "smoke",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "smoke_count :: uint16 (optional)",
        "name": "smoke_count",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "smoke_slow_down_factor :: float (optional)",
        "name": "smoke_slow_down_factor",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "sound :: Sound (optional)",
        "name": "sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "FinishTheGameAchievement",
    "extends": "Achievement",
    "name": "finish-the-game-achievement",
    "properties": [
      {
        "comment": "until_second :: uint32 (optional)",
        "name": "until_second",
        "optional": true,
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "FireFlame",
    "extends": "Entity",
    "name": "fire",
    "properties": [
      {
        "comment": "damage_per_tick :: DamagePrototype",
        "name": "damage_per_tick",
        "type": "DamagePrototype"
      },
      {
        "comment": "spread_delay :: uint32",
        "name": "spread_delay",
        "type": "uint32"
      },
      {
        "comment": "spread_delay_deviation :: uint32",
        "name": "spread_delay_deviation",
        "type": "uint32"
      },
      {
        "comment": "add_fuel_cooldown :: uint32 (optional)",
        "name": "add_fuel_cooldown",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "burnt_patch_alpha_default :: float (optional)",
        "name": "burnt_patch_alpha_default",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "burnt_patch_alpha_variations :: table (optional)",
        "name": "burnt_patch_alpha_variations",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "burnt_patch_lifetime :: uint32 (optional)",
        "name": "burnt_patch_lifetime",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "burnt_patch_pictures :: SpriteVariations (optional)",
        "name": "burnt_patch_pictures",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "damage_multiplier_decrease_per_tick :: float (optional)",
        "name": "damage_multiplier_decrease_per_tick",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "damage_multiplier_increase_per_added_fuel :: float (optional)",
        "name": "damage_multiplier_increase_per_added_fuel",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "delay_between_initial_flames :: uint32 (optional)",
        "name": "delay_between_initial_flames",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "fade_in_duration :: uint32 (optional)",
        "name": "fade_in_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "fade_out_duration :: uint32 (optional)",
        "name": "fade_out_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "flame_alpha :: float (optional)",
        "name": "flame_alpha",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "flame_alpha_deviation :: float (optional)",
        "name": "flame_alpha_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "initial_flame_count :: uint8 (optional)",
        "name": "initial_flame_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "initial_lifetime :: uint32 (optional)",
        "name": "initial_lifetime",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "initial_render_layer :: RenderLayer (optional)",
        "name": "initial_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "lifetime_increase_by :: uint32 (optional)",
        "name": "lifetime_increase_by",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "lifetime_increase_cooldown :: uint32 (optional)",
        "name": "lifetime_increase_cooldown",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "limit_overlapping_particles :: bool (optional)",
        "name": "limit_overlapping_particles",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "maximum_damage_multiplier :: float (optional)",
        "name": "maximum_damage_multiplier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "maximum_lifetime :: uint32 (optional)",
        "name": "maximum_lifetime",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "maximum_spread_count :: uint16 (optional)",
        "name": "maximum_spread_count",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "on_damage_tick_effect :: Trigger (optional)",
        "name": "on_damage_tick_effect",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "on_fuel_added_action :: Trigger (optional)",
        "name": "on_fuel_added_action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "particle_alpha :: float (optional)",
        "name": "particle_alpha",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_alpha_blend_duration :: uint16 (optional)",
        "name": "particle_alpha_blend_duration",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "particle_alpha_deviation :: float (optional)",
        "name": "particle_alpha_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "pictures :: AnimationVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "secondary_picture_fade_out_duration :: uint32 (optional)",
        "name": "secondary_picture_fade_out_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "secondary_picture_fade_out_start :: uint32 (optional)",
        "name": "secondary_picture_fade_out_start",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "secondary_pictures :: AnimationVariations (optional)",
        "name": "secondary_pictures",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "secondary_render_layer :: RenderLayer (optional)",
        "name": "secondary_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "small_tree_fire_pictures :: AnimationVariations (optional)",
        "name": "small_tree_fire_pictures",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "smoke :: Array of SmokeSource (optional)",
        "name": "smoke",
        "optional": true,
        "type": {
          "table_of": "SmokeSource"
        }
      },
      {
        "comment": "smoke_fade_in_duration :: uint32 (optional)",
        "name": "smoke_fade_in_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "smoke_fade_out_duration :: uint32 (optional)",
        "name": "smoke_fade_out_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "smoke_source_pictures :: AnimationVariations (optional)",
        "name": "smoke_source_pictures",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "spawn_entity :: string (optional)",
        "name": "spawn_entity",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "tree_dying_factor :: float (optional)",
        "name": "tree_dying_factor",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "uses_alternative_behavior :: bool (optional)",
        "name": "uses_alternative_behavior",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Fish",
    "extends": "EntityWithHealth",
    "name": "fish",
    "properties": [
      {
        "comment": "pictures :: SpriteVariations",
        "name": "pictures",
        "type": "SpriteVariations"
      }
    ]
  },
  {
    "class_name": "FlameThrowerExplosion",
    "extends": "Explosion",
    "name": "flame-thrower-explosion",
    "properties": [
      {
        "comment": "damage :: DamagePrototype",
        "name": "damage",
        "type": "DamagePrototype"
      },
      {
        "comment": "slow_down_factor :: double",
        "name": "slow_down_factor",
        "type": "double"
      }
    ]
  },
  {
    "class_name": "Fluid",
    "extends": "PrototypeBase",
    "name": "fluid",
    "properties": [
      {
        "comment": "base_color :: Color",
        "name": "base_color",
        "type": "Color"
      },
      {
        "comment": "default_temperature :: double",
        "name": "default_temperature",
        "type": "double"
      },
      {
        "comment": "flow_color :: Color",
        "name": "flow_color",
        "type": "Color"
      },
      {
        "comment": "icons, icon, icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "max_temperature :: double",
        "name": "max_temperature",
        "type": "double"
      },
      {
        "comment": "emissions_multiplier :: double (optional)",
        "name": "emissions_multiplier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fuel_value :: Energy (optional)",
        "name": "fuel_value",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "gas_temperature :: double (optional)",
        "name": "gas_temperature",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "heat_capacity :: Energy (optional)",
        "name": "heat_capacity",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "hidden :: bool (optional)",
        "name": "hidden",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "subgroup :: string (optional)",
        "name": "subgroup",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "FluidStream",
    "extends": "Entity",
    "name": "stream",
    "properties": [
      {
        "comment": "particle_horizontal_speed :: double",
        "name": "particle_horizontal_speed",
        "type": "double"
      },
      {
        "comment": "particle_horizontal_speed_deviation :: double",
        "name": "particle_horizontal_speed_deviation",
        "type": "double"
      },
      {
        "comment": "particle_spawn_interval :: uint16",
        "name": "particle_spawn_interval",
        "type": "uint16"
      },
      {
        "comment": "particle_vertical_acceleration :: double",
        "name": "particle_vertical_acceleration",
        "type": "double"
      },
      {
        "comment": "action :: Trigger (optional)",
        "name": "action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "ground_light :: LightDefinition (optional)",
        "name": "ground_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "initial_action :: Trigger (optional)",
        "name": "initial_action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "oriented_particle :: bool (optional)",
        "name": "oriented_particle",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "particle :: Animation (optional)",
        "name": "particle",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "particle_alpha_per_part :: float (optional)",
        "name": "particle_alpha_per_part",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_buffer_size :: uint32 (optional)",
        "name": "particle_buffer_size",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "particle_end_alpha :: float (optional)",
        "name": "particle_end_alpha",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_fade_out_duration :: uint16 (optional)",
        "name": "particle_fade_out_duration",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "particle_fade_out_threshold :: float (optional)",
        "name": "particle_fade_out_threshold",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_loop_exit_threshold :: float (optional)",
        "name": "particle_loop_exit_threshold",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_loop_frame_count :: uint16 (optional)",
        "name": "particle_loop_frame_count",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "particle_scale_per_part :: float (optional)",
        "name": "particle_scale_per_part",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_spawn_timeout :: uint16 (optional)",
        "name": "particle_spawn_timeout",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "particle_start_alpha :: float (optional)",
        "name": "particle_start_alpha",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_start_scale :: float (optional)",
        "name": "particle_start_scale",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "progress_to_create_smoke :: float (optional)",
        "name": "progress_to_create_smoke",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "shadow :: Animation (optional)",
        "name": "shadow",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "shadow_scale_enabled :: bool (optional)",
        "name": "shadow_scale_enabled",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "smoke_sources :: table of SmokeSource (optional)",
        "name": "smoke_sources",
        "optional": true,
        "type": {
          "table_of": "SmokeSource"
        }
      },
      {
        "comment": "special_neutral_target_damage :: DamagePrototype (optional)",
        "name": "special_neutral_target_damage",
        "optional": true,
        "type": "DamagePrototype"
      },
      {
        "comment": "spine_animation :: Animation (optional)",
        "name": "spine_animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "stream_light :: LightDefinition (optional)",
        "name": "stream_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "target_position_deviation :: double (optional)",
        "name": "target_position_deviation",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "width :: float (optional)",
        "name": "width",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "FluidTurret",
    "extends": "Turret",
    "name": "fluid-turret",
    "properties": [
      {
        "comment": "activation_buffer_ratio :: float",
        "name": "activation_buffer_ratio",
        "type": "float"
      },
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "fluid_buffer_input_flow :: float",
        "name": "fluid_buffer_input_flow",
        "type": "float"
      },
      {
        "comment": "fluid_buffer_size :: float",
        "name": "fluid_buffer_size",
        "type": "float"
      },
      {
        "comment": "attacking_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "attacking_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      },
      {
        "comment": "ending_attack_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "ending_attack_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      },
      {
        "comment": "enough_fuel_indicator_picture :: Sprite4Way (optional)",
        "name": "enough_fuel_indicator_picture",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "folded_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "folded_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      },
      {
        "comment": "folding_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "folding_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      },
      {
        "comment": "indicator_light :: LightDefinition (optional)",
        "name": "indicator_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "muzzle_animation :: Animation (optional)",
        "name": "muzzle_animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "muzzle_light :: LightDefinition (optional)",
        "name": "muzzle_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "not_enough_fuel_indicator_picture :: Sprite4Way (optional)",
        "name": "not_enough_fuel_indicator_picture",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "out_of_ammo_alert_icon :: Sprite (optional)",
        "name": "out_of_ammo_alert_icon",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "prepared_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "prepared_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      },
      {
        "comment": "preparing_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "preparing_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      },
      {
        "comment": "starting_attack_muzzle_animation_shift :: AnimatedVector (optional)",
        "name": "starting_attack_muzzle_animation_shift",
        "optional": true,
        "type": "AnimatedVector"
      }
    ]
  },
  {
    "class_name": "FluidWagon",
    "extends": "RollingStock",
    "name": "fluid-wagon",
    "properties": [
      {
        "comment": "capacity :: double",
        "name": "capacity",
        "type": "double"
      },
      {
        "comment": "tank_count :: uint8 (optional)",
        "name": "tank_count",
        "optional": true,
        "type": "uint8"
      }
    ]
  },
  {
    "class_name": "FlyingRobot",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "speed :: double",
        "name": "speed",
        "type": "double"
      },
      {
        "comment": "energy_per_move :: Energy (optional)",
        "name": "energy_per_move",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "energy_per_tick :: Energy (optional)",
        "name": "energy_per_tick",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "max_energy :: Energy (optional)",
        "name": "max_energy",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "max_speed :: double (optional)",
        "name": "max_speed",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "max_to_charge :: float (optional)",
        "name": "max_to_charge",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "min_to_charge :: float (optional)",
        "name": "min_to_charge",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "speed_multiplier_when_out_of_energy :: float (optional)",
        "name": "speed_multiplier_when_out_of_energy",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "FlyingText",
    "extends": "Entity",
    "name": "flying-text",
    "properties": [
      {
        "comment": "speed :: float",
        "name": "speed",
        "type": "float"
      },
      {
        "comment": "time_to_live :: uint32",
        "name": "time_to_live",
        "type": "uint32"
      },
      {
        "comment": "text_alignment :: string (optional)",
        "name": "text_alignment",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "Font",
    "name": "font",
    "properties": [
      {
        "comment": "from :: string",
        "name": "from",
        "type": "string"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "size :: int32",
        "name": "size",
        "type": "int32"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "border :: bool (optional)",
        "name": "border",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "border_color :: Color (optional)",
        "name": "border_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "filtered :: bool (optional)",
        "name": "filtered",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "spacing :: float (optional)",
        "name": "spacing",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "FuelCategory",
    "extends": "PrototypeBase",
    "name": "fuel-category",
    "properties": []
  },
  {
    "class_name": "Furnace",
    "extends": "CraftingMachine",
    "name": "furnace",
    "properties": [
      {
        "comment": "result_inventory_size :: ItemStackIndex",
        "name": "result_inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "source_inventory_size :: ItemStackIndex",
        "name": "source_inventory_size",
        "type": "ItemStackIndex"
      }
    ]
  },
  {
    "class_name": "Gate",
    "extends": "EntityWithHealth",
    "name": "gate",
    "properties": [
      {
        "comment": "activation_distance :: double",
        "name": "activation_distance",
        "type": "double"
      },
      {
        "comment": "close_sound :: Sound",
        "name": "close_sound",
        "type": "Sound"
      },
      {
        "comment": "horizontal_animation :: Animation",
        "name": "horizontal_animation",
        "type": "Animation"
      },
      {
        "comment": "horizontal_rail_animation_left :: Animation",
        "name": "horizontal_rail_animation_left",
        "type": "Animation"
      },
      {
        "comment": "horizontal_rail_animation_right :: Animation",
        "name": "horizontal_rail_animation_right",
        "type": "Animation"
      },
      {
        "comment": "horizontal_rail_base :: Animation",
        "name": "horizontal_rail_base",
        "type": "Animation"
      },
      {
        "comment": "open_sound :: Sound",
        "name": "open_sound",
        "type": "Sound"
      },
      {
        "comment": "opening_speed :: float",
        "name": "opening_speed",
        "type": "float"
      },
      {
        "comment": "timeout_to_close :: uint32",
        "name": "timeout_to_close",
        "type": "uint32"
      },
      {
        "comment": "vertical_animation :: Animation",
        "name": "vertical_animation",
        "type": "Animation"
      },
      {
        "comment": "vertical_rail_animation_left :: Animation",
        "name": "vertical_rail_animation_left",
        "type": "Animation"
      },
      {
        "comment": "vertical_rail_animation_right :: Animation",
        "name": "vertical_rail_animation_right",
        "type": "Animation"
      },
      {
        "comment": "vertical_rail_base :: Animation",
        "name": "vertical_rail_base",
        "type": "Animation"
      },
      {
        "comment": "wall_patch :: Animation",
        "name": "wall_patch",
        "type": "Animation"
      },
      {
        "comment": "fadeout_interval :: uint32 (optional)",
        "name": "fadeout_interval",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "opened_collision_mask :: CollisionMask (optional)",
        "name": "opened_collision_mask",
        "optional": true,
        "type": "CollisionMask"
      }
    ]
  },
  {
    "class_name": "Generator",
    "extends": "EntityWithHealth",
    "name": "generator",
    "properties": [
      {
        "comment": "effectivity :: double",
        "name": "effectivity",
        "type": "double"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "fluid_usage_per_tick :: double",
        "name": "fluid_usage_per_tick",
        "type": "double"
      },
      {
        "comment": "horizontal_animation :: Animation",
        "name": "horizontal_animation",
        "type": "Animation"
      },
      {
        "comment": "maximum_temperature :: double",
        "name": "maximum_temperature",
        "type": "double"
      },
      {
        "comment": "vertical_animation :: Animation",
        "name": "vertical_animation",
        "type": "Animation"
      },
      {
        "comment": "burns_fluid :: bool (optional)",
        "name": "burns_fluid",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "max_power_output :: Energy (optional)",
        "name": "max_power_output",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "min_perceived_performance :: double (optional)",
        "name": "min_perceived_performance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "performance_to_sound_speedup :: double (optional)",
        "name": "performance_to_sound_speedup",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "scale_fluid_usage :: bool (optional)",
        "name": "scale_fluid_usage",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "smoke :: table of SmokeSource (optional)",
        "name": "smoke",
        "optional": true,
        "type": {
          "table_of": "SmokeSource"
        }
      }
    ]
  },
  {
    "class_name": "GeneratorEquipment",
    "extends": "Equipment",
    "name": "generator-equipment",
    "properties": [
      {
        "comment": "power :: Energy",
        "name": "power",
        "type": "Energy"
      },
      {
        "comment": "burner :: EnergySource (optional)",
        "name": "burner",
        "optional": true,
        "type": "EnergySource"
      }
    ]
  },
  {
    "class_name": "GodController",
    "name": "god-controller",
    "properties": [
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "item_pickup_distance :: double",
        "name": "item_pickup_distance",
        "type": "double"
      },
      {
        "comment": "loot_pickup_distance :: double",
        "name": "loot_pickup_distance",
        "type": "double"
      },
      {
        "comment": "mining_speed :: double",
        "name": "mining_speed",
        "type": "double"
      },
      {
        "comment": "movement_speed :: double",
        "name": "movement_speed",
        "type": "double"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "crafting_categories :: table of string (optional)",
        "name": "crafting_categories",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "mining_categories :: table of string (optional)",
        "name": "mining_categories",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      }
    ]
  },
  {
    "class_name": "GroupAttackAchievement",
    "extends": "Achievement",
    "name": "group-attack-achievement",
    "properties": [
      {
        "comment": "amount :: uint32 (optional)",
        "name": "amount",
        "optional": true,
        "type": "uint32"
      }
    ]
  },
  {
    "class_name": "GuiStyle",
    "name": "gui-style",
    "properties": [
      {
        "comment": "default_sprite_priority :: SpritePriority",
        "name": "default_sprite_priority",
        "type": "SpritePriority"
      },
      {
        "comment": "default_sprite_scale :: double",
        "name": "default_sprite_scale",
        "type": "double"
      },
      {
        "comment": "default_tileset :: FileName",
        "name": "default_tileset",
        "type": "FileName"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "Gun",
    "extends": "Item",
    "name": "gun",
    "properties": [
      {
        "comment": "attack_parameters :: AttackParameters",
        "name": "attack_parameters",
        "type": "AttackParameters"
      }
    ]
  },
  {
    "class_name": "HeatInterface",
    "extends": "EntityWithHealth",
    "name": "heat-interface",
    "properties": [
      {
        "comment": "heat_buffer :: HeatBuffer",
        "name": "heat_buffer",
        "type": "HeatBuffer"
      },
      {
        "comment": "gui_mode :: string (optional)",
        "name": "gui_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      }
    ]
  },
  {
    "class_name": "HeatPipe",
    "extends": "EntityWithHealth",
    "name": "heat-pipe",
    "properties": [
      {
        "comment": "connection_sprites :: ConnectableEntityGraphics",
        "name": "connection_sprites",
        "type": "ConnectableEntityGraphics"
      },
      {
        "comment": "heat_buffer :: HeatBuffer",
        "name": "heat_buffer",
        "type": "HeatBuffer"
      },
      {
        "comment": "heat_glow_sprites :: ConnectableEntityGraphics",
        "name": "heat_glow_sprites",
        "type": "ConnectableEntityGraphics"
      }
    ]
  },
  {
    "class_name": "HighlightBoxEntity",
    "extends": "Entity",
    "name": "highlight-box",
    "properties": []
  },
  {
    "class_name": "InfinityContainer",
    "extends": "LogisticContainer",
    "name": "infinity-container",
    "properties": [
      {
        "comment": "erase_contents_when_mined :: bool",
        "name": "erase_contents_when_mined",
        "type": "bool"
      },
      {
        "comment": "gui_mode :: string (optional)",
        "name": "gui_mode",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "InfinityPipe",
    "extends": "Pipe",
    "name": "infinity-pipe",
    "properties": [
      {
        "comment": "gui_mode :: string (optional)",
        "name": "gui_mode",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "Inserter",
    "extends": "EntityWithHealth",
    "name": "inserter",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "extension_speed :: double",
        "name": "extension_speed",
        "type": "double"
      },
      {
        "comment": "hand_base_picture :: Sprite",
        "name": "hand_base_picture",
        "type": "Sprite"
      },
      {
        "comment": "hand_base_shadow :: Sprite",
        "name": "hand_base_shadow",
        "type": "Sprite"
      },
      {
        "comment": "hand_closed_picture :: Sprite",
        "name": "hand_closed_picture",
        "type": "Sprite"
      },
      {
        "comment": "hand_closed_shadow :: Sprite",
        "name": "hand_closed_shadow",
        "type": "Sprite"
      },
      {
        "comment": "hand_open_picture :: Sprite",
        "name": "hand_open_picture",
        "type": "Sprite"
      },
      {
        "comment": "hand_open_shadow :: Sprite",
        "name": "hand_open_shadow",
        "type": "Sprite"
      },
      {
        "comment": "insert_position :: vector",
        "name": "insert_position",
        "type": "vector"
      },
      {
        "comment": "pickup_position :: vector",
        "name": "pickup_position",
        "type": "vector"
      },
      {
        "comment": "platform_picture :: Sprite4Way",
        "name": "platform_picture",
        "type": "Sprite4Way"
      },
      {
        "comment": "rotation_speed :: double",
        "name": "rotation_speed",
        "type": "double"
      },
      {
        "comment": "allow_burner_leech :: bool (optional)",
        "name": "allow_burner_leech",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "allow_custom_vectors :: bool (optional)",
        "name": "allow_custom_vectors",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "chases_belt_items :: bool (optional)",
        "name": "chases_belt_items",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "default_stack_control_input_signal :: SignalIDConnector (optional)",
        "name": "default_stack_control_input_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_held_item :: bool (optional)",
        "name": "draw_held_item",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_inserter_arrow :: bool (optional)",
        "name": "draw_inserter_arrow",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "energy_per_movement :: Energy (optional)",
        "name": "energy_per_movement",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "energy_per_rotation :: Energy (optional)",
        "name": "energy_per_rotation",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "filter_count :: uint8 (optional)",
        "name": "filter_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "hand_size :: double (optional)",
        "name": "hand_size",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "stack :: bool (optional)",
        "name": "stack",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "use_easter_egg :: bool (optional)",
        "name": "use_easter_egg",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Item",
    "extends": "PrototypeBase",
    "name": "item",
    "properties": [
      {
        "comment": "icons, icon,  icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "stack_size :: ItemCountType",
        "name": "stack_size",
        "type": "ItemCountType"
      },
      {
        "comment": "burnt_result :: string (optional)",
        "name": "burnt_result",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "dark_background_icons, dark_background_icon,  icon_size (IconSpecification) :: IconSpecification (optional)",
        "name": "icon_spec",
        "optional": true,
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "default_request_amount :: ItemCountType (optional)",
        "name": "default_request_amount",
        "optional": true,
        "type": "ItemCountType"
      },
      {
        "comment": "flags :: ItemPrototypeFlags (optional)",
        "name": "flags",
        "optional": true,
        "type": "ItemPrototypeFlags"
      },
      {
        "comment": "fuel_acceleration_multiplier :: double (optional)",
        "name": "fuel_acceleration_multiplier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fuel_category :: string (optional)",
        "name": "fuel_category",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "fuel_emissions_multiplier :: double (optional)",
        "name": "fuel_emissions_multiplier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fuel_glow_color :: Color (optional)",
        "name": "fuel_glow_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "fuel_top_speed_multiplier :: double (optional)",
        "name": "fuel_top_speed_multiplier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fuel_value :: Energy (optional)",
        "name": "fuel_value",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "pictures :: SpriteVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "place_as_tile :: PlaceAsTile (optional)",
        "name": "place_as_tile",
        "optional": true,
        "type": "PlaceAsTile"
      },
      {
        "comment": "place_result :: string (optional)",
        "name": "place_result",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "placed_as_equipment_result :: string (optional)",
        "name": "placed_as_equipment_result",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "rocket_launch_product :: ItemProductPrototype (optional)",
        "name": "rocket_launch_product",
        "optional": true,
        "type": "ItemProductPrototype"
      },
      {
        "comment": "rocket_launch_products :: table (array) of ItemProductPrototype (optional)",
        "name": "rocket_launch_products",
        "optional": true,
        "type": {
          "table_of": "ItemProductPrototype"
        }
      },
      {
        "comment": "subgroup :: string (optional)",
        "name": "subgroup",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "wire_count :: ItemCountType (optional)",
        "name": "wire_count",
        "optional": true,
        "type": "ItemCountType"
      }
    ]
  },
  {
    "class_name": "ItemEntity",
    "extends": "Entity",
    "name": "item-entity",
    "properties": []
  },
  {
    "class_name": "ItemGroup",
    "extends": "PrototypeBase",
    "name": "item-group",
    "properties": [
      {
        "comment": "icons, icon, icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "order_in_recipe :: Order (optional)",
        "name": "order_in_recipe",
        "optional": true,
        "type": "Order"
      }
    ]
  },
  {
    "class_name": "ItemRequestProxy",
    "extends": "Entity",
    "name": "item-request-proxy",
    "properties": [
      {
        "comment": "picture :: Sprite",
        "name": "picture",
        "type": "Sprite"
      },
      {
        "comment": "use_target_entity_alert_icon_shift :: bool (optional)",
        "name": "use_target_entity_alert_icon_shift",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "ItemSubGroup",
    "extends": "PrototypeBase",
    "name": "item-subgroup",
    "properties": [
      {
        "comment": "group :: string",
        "name": "group",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "ItemWithEntityData",
    "extends": "Item",
    "name": "item-with-entity-data",
    "properties": []
  },
  {
    "class_name": "ItemWithInventory",
    "extends": "ItemWithLabel",
    "name": "item-with-inventory",
    "properties": [
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "extends_inventory_by_default :: bool (optional)",
        "name": "extends_inventory_by_default",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "filter_message_key :: string (optional)",
        "name": "filter_message_key",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "filter_mode :: string (optional)",
        "name": "filter_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "insertion_priority_mode :: string (optional)",
        "name": "insertion_priority_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "item_filters :: table of string (optional)",
        "name": "item_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "item_group_filters :: table of string (optional)",
        "name": "item_group_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "item_subgroup_filters :: table of string (optional)",
        "name": "item_subgroup_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      }
    ]
  },
  {
    "class_name": "ItemWithLabel",
    "extends": "Item",
    "name": "item-with-label",
    "properties": [
      {
        "comment": "default_label_color :: Color (optional)",
        "name": "default_label_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "draw_label_for_cursor_render :: bool (optional)",
        "name": "draw_label_for_cursor_render",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "ItemWithTags",
    "extends": "ItemWithLabel",
    "name": "item-with-tags",
    "properties": []
  },
  {
    "class_name": "KillAchievement",
    "extends": "Achievement",
    "name": "kill-achievement",
    "properties": [
      {
        "comment": "amount :: uint32 (optional)",
        "name": "amount",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "damage_type :: string (optional)",
        "name": "damage_type",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "in_vehicle :: bool (optional)",
        "name": "in_vehicle",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "personally :: bool (optional)",
        "name": "personally",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "to_kill :: string (optional)",
        "name": "to_kill",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "type_to_kill :: string (optional)",
        "name": "type_to_kill",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "Lab",
    "extends": "EntityWithHealth",
    "name": "lab",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "inputs :: table of string",
        "name": "inputs",
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "off_animation :: Animation",
        "name": "off_animation",
        "type": "Animation"
      },
      {
        "comment": "on_animation :: Animation",
        "name": "on_animation",
        "type": "Animation"
      },
      {
        "comment": "allowed_effects :: EffectTypeLimitation (optional)",
        "name": "allowed_effects",
        "optional": true,
        "type": "EffectTypeLimitation"
      },
      {
        "comment": "base_productivity :: float (optional)",
        "name": "base_productivity",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "entity_info_icon_shift :: vector (optional)",
        "name": "entity_info_icon_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "module_specification :: ModuleSpecification (optional)",
        "name": "module_specification",
        "optional": true,
        "type": "ModuleSpecification"
      },
      {
        "comment": "researching_speed :: double (optional)",
        "name": "researching_speed",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "Lamp",
    "extends": "EntityWithHealth",
    "name": "lamp",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage_per_tick :: Energy",
        "name": "energy_usage_per_tick",
        "type": "Energy"
      },
      {
        "comment": "picture_off :: Sprite",
        "name": "picture_off",
        "type": "Sprite"
      },
      {
        "comment": "picture_on :: Sprite",
        "name": "picture_on",
        "type": "Sprite"
      },
      {
        "comment": "always_on :: bool (optional)",
        "name": "always_on",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "circuit_connector_sprites :: CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": "CircuitConnectorSprites"
      },
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": "WireConnectionPoint"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "darkness_for_all_lamps_off :: float (optional)",
        "name": "darkness_for_all_lamps_off",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "darkness_for_all_lamps_on :: float (optional)",
        "name": "darkness_for_all_lamps_on",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "glow_color_intensity :: float (optional)",
        "name": "glow_color_intensity",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "glow_render_mode :: string (optional)",
        "name": "glow_render_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "glow_size :: float (optional)",
        "name": "glow_size",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "light_when_colored :: LightDefinition (optional)",
        "name": "light_when_colored",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "signal_to_color_mapping :: table of SignalColorMapping (optional)",
        "name": "signal_to_color_mapping",
        "optional": true,
        "type": {
          "table_of": "SignalColorMapping"
        }
      }
    ]
  },
  {
    "class_name": "LandMine",
    "extends": "EntityWithHealth",
    "name": "land-mine",
    "properties": [
      {
        "comment": "picture_safe :: Sprite",
        "name": "picture_safe",
        "type": "Sprite"
      },
      {
        "comment": "picture_set :: Sprite",
        "name": "picture_set",
        "type": "Sprite"
      },
      {
        "comment": "trigger_radius :: double",
        "name": "trigger_radius",
        "type": "double"
      },
      {
        "comment": "action :: Trigger (optional)",
        "name": "action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "ammo_category :: string (optional)",
        "name": "ammo_category",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "force_die_on_attack :: bool (optional)",
        "name": "force_die_on_attack",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "picture_set_enemy :: Sprite (optional)",
        "name": "picture_set_enemy",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "timeout :: uint32 (optional)",
        "name": "timeout",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "trigger_force :: ForceCondition (optional)",
        "name": "trigger_force",
        "optional": true,
        "type": "ForceCondition"
      }
    ]
  },
  {
    "class_name": "LeafParticle",
    "extends": "EntityParticle",
    "name": "leaf-particle",
    "properties": []
  },
  {
    "class_name": "LegacyDecorative",
    "extends": "Entity",
    "name": "decorative",
    "properties": []
  },
  {
    "class_name": "Loader1x1",
    "extends": "TransportBeltConnectable",
    "name": "loader-1x1",
    "properties": [
      {
        "comment": "filter_count :: uint8",
        "name": "filter_count",
        "type": "uint8"
      },
      {
        "comment": "structure :: table",
        "name": "structure",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "belt_length :: double (optional)",
        "name": "belt_length",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "container_distance :: double (optional)",
        "name": "container_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "structure_render_layer :: RenderLayer (optional)",
        "name": "structure_render_layer",
        "optional": true,
        "type": "RenderLayer"
      }
    ]
  },
  {
    "class_name": "Loader1x2",
    "extends": "TransportBeltConnectable",
    "name": "loader",
    "properties": [
      {
        "comment": "filter_count :: uint8",
        "name": "filter_count",
        "type": "uint8"
      },
      {
        "comment": "structure :: table",
        "name": "structure",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "belt_length :: double (optional)",
        "name": "belt_length",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "container_distance :: double (optional)",
        "name": "container_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "structure_render_layer :: RenderLayer (optional)",
        "name": "structure_render_layer",
        "optional": true,
        "type": "RenderLayer"
      }
    ]
  },
  {
    "class_name": "Locomotive",
    "extends": "RollingStock",
    "name": "locomotive",
    "properties": [
      {
        "comment": "burner or energy_source :: EnergySource",
        "name": "burner or energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "max_power :: Energy",
        "name": "max_power",
        "type": "Energy"
      },
      {
        "comment": "reversing_power_modifier :: double",
        "name": "reversing_power_modifier",
        "type": "double"
      },
      {
        "comment": "front_light :: LightDefinition (optional)",
        "name": "front_light",
        "optional": true,
        "type": "LightDefinition"
      }
    ]
  },
  {
    "class_name": "LogisticContainer",
    "extends": "Container",
    "name": "logistic-container",
    "properties": [
      {
        "comment": "logistic_mode :: string",
        "name": "logistic_mode",
        "type": "string"
      },
      {
        "comment": "animation :: Animation (optional)",
        "name": "animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "animation_sound :: Sound (optional)",
        "name": "animation_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "landing_location_offset :: vector (optional)",
        "name": "landing_location_offset",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "logistic_slots_count :: uint32 (optional)",
        "name": "logistic_slots_count",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "opened_duration :: uint8 (optional)",
        "name": "opened_duration",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "render_not_in_network_icon :: bool (optional)",
        "name": "render_not_in_network_icon",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "LogisticRobot",
    "extends": "RobotWithLogisticInterface",
    "name": "logistic-robot",
    "properties": [
      {
        "comment": "idle_with_cargo :: RotatedAnimation (optional)",
        "name": "idle_with_cargo",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "in_motion_with_cargo :: RotatedAnimation (optional)",
        "name": "in_motion_with_cargo",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "shadow_idle_with_cargo :: RotatedAnimation (optional)",
        "name": "shadow_idle_with_cargo",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "shadow_in_motion_with_cargo :: RotatedAnimation (optional)",
        "name": "shadow_in_motion_with_cargo",
        "optional": true,
        "type": "RotatedAnimation"
      }
    ]
  },
  {
    "class_name": "MapGenPresets",
    "name": "map-gen-presets",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "MapSettings",
    "name": "map-settings",
    "properties": [
      {
        "comment": "difficulty_settings :: table",
        "name": "difficulty_settings",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "enemy_evolution :: table",
        "name": "enemy_evolution",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "enemy_expansion :: table",
        "name": "enemy_expansion",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "max_failed_behavior_count :: uint32",
        "name": "max_failed_behavior_count",
        "type": "uint32"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "path_finder :: table",
        "name": "path_finder",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "pollution :: table",
        "name": "pollution",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "steering :: table",
        "name": "steering",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "unit_group :: table",
        "name": "unit_group",
        "type": {
          "table_of": null
        }
      }
    ]
  },
  {
    "class_name": "Market",
    "extends": "EntityWithHealth",
    "name": "market",
    "properties": [
      {
        "comment": "picture :: Sprite",
        "name": "picture",
        "type": "Sprite"
      },
      {
        "comment": "allow_access_to_all_forces :: bool (optional)",
        "name": "allow_access_to_all_forces",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "MiningDrill",
    "extends": "EntityWithHealth",
    "name": "mining-drill",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "mining_speed :: double",
        "name": "mining_speed",
        "type": "double"
      },
      {
        "comment": "resource_categories :: array of string",
        "name": "resource_categories",
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "resource_searching_radius :: double",
        "name": "resource_searching_radius",
        "type": "double"
      },
      {
        "comment": "vector_to_place_result :: vector",
        "name": "vector_to_place_result",
        "type": "vector"
      },
      {
        "comment": "allowed_effects :: EffectTypeLimitation (optional)",
        "name": "allowed_effects",
        "optional": true,
        "type": "EffectTypeLimitation"
      },
      {
        "comment": "animations :: Animation4Way (optional)",
        "name": "animations",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "base_picture :: Sprite4Way (optional)",
        "name": "base_picture",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "base_productivity :: float (optional)",
        "name": "base_productivity",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "base_render_layer :: RenderLayer (optional)",
        "name": "base_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "graphics_set :: MiningDrillGraphicsSet (optional)",
        "name": "graphics_set",
        "optional": true,
        "type": "MiningDrillGraphicsSet"
      },
      {
        "comment": "input_fluid_box :: FluidBox (optional)",
        "name": "input_fluid_box",
        "optional": true,
        "type": "FluidBox"
      },
      {
        "comment": "module_specification :: ModuleSpecification (optional)",
        "name": "module_specification",
        "optional": true,
        "type": "ModuleSpecification"
      },
      {
        "comment": "monitor_visualization_tint :: Color (optional)",
        "name": "monitor_visualization_tint",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "output_fluid_box :: FluidBox (optional)",
        "name": "output_fluid_box",
        "optional": true,
        "type": "FluidBox"
      },
      {
        "comment": "radius_visualisation_picture :: Sprite (optional)",
        "name": "radius_visualisation_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "storage_slots :: ItemStackIndex (optional)",
        "name": "storage_slots",
        "optional": true,
        "type": "ItemStackIndex"
      },
      {
        "comment": "wet_mining_graphics_set :: MiningDrillGraphicsSet (optional)",
        "name": "wet_mining_graphics_set",
        "optional": true,
        "type": "MiningDrillGraphicsSet"
      }
    ]
  },
  {
    "class_name": "MiningTool",
    "extends": "Tool",
    "name": "mining-tool",
    "properties": []
  },
  {
    "class_name": "Module",
    "extends": "Item",
    "name": "module",
    "properties": [
      {
        "comment": "category :: string",
        "name": "category",
        "type": "string"
      },
      {
        "comment": "effect :: Effect",
        "name": "effect",
        "type": "Effect"
      },
      {
        "comment": "tier :: uint32",
        "name": "tier",
        "type": "uint32"
      },
      {
        "comment": "art_style :: string (optional)",
        "name": "art_style",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "beacon_tint :: table of Color (optional)",
        "name": "beacon_tint",
        "optional": true,
        "type": {
          "table_of": "Color"
        }
      },
      {
        "comment": "limitation :: table of string (optional)",
        "name": "limitation",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "limitation_message_key :: string (optional)",
        "name": "limitation_message_key",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "requires_beacon_alt_mode :: bool (optional)",
        "name": "requires_beacon_alt_mode",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "ModuleCategory",
    "extends": "PrototypeBase",
    "name": "module-category",
    "properties": []
  },
  {
    "class_name": "MouseCursor",
    "name": "mouse-cursor",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "filename :: FileName (optional)",
        "name": "filename",
        "optional": true,
        "type": "FileName"
      },
      {
        "comment": "hot_pixel_x :: int16 (optional)",
        "name": "hot_pixel_x",
        "optional": true,
        "type": "int16"
      },
      {
        "comment": "hot_pixel_y :: int16 (optional)",
        "name": "hot_pixel_y",
        "optional": true,
        "type": "int16"
      },
      {
        "comment": "system_cursor :: string (optional)",
        "name": "system_cursor",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "MovementBonusEquipment",
    "extends": "Equipment",
    "name": "movement-bonus-equipment",
    "properties": [
      {
        "comment": "energy_consumption :: Energy",
        "name": "energy_consumption",
        "type": "Energy"
      },
      {
        "comment": "movement_bonus :: double",
        "name": "movement_bonus",
        "type": "double"
      }
    ]
  },
  {
    "class_name": "NamedNoiseExpression",
    "extends": "PrototypeBase",
    "name": "noise-expression",
    "properties": [
      {
        "comment": "expression :: NoiseExpression",
        "name": "expression",
        "type": "NoiseExpression"
      },
      {
        "comment": "intended_property :: string (optional)",
        "name": "intended_property",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "NightVisionEquipment",
    "extends": "Equipment",
    "name": "night-vision-equipment",
    "properties": [
      {
        "comment": "color_lookup :: DaytimeColorLookupTable",
        "name": "color_lookup",
        "type": "DaytimeColorLookupTable"
      },
      {
        "comment": "energy_input :: Energy",
        "name": "energy_input",
        "type": "Energy"
      },
      {
        "comment": "activate_sound :: Sound (optional)",
        "name": "activate_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "darkness_to_turn_on :: float (optional)",
        "name": "darkness_to_turn_on",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "deactivate_sound :: Sound (optional)",
        "name": "deactivate_sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "NoiseLayer",
    "extends": "PrototypeBase",
    "name": "noise-layer",
    "properties": []
  },
  {
    "class_name": "OffshorePump",
    "extends": "EntityWithHealth",
    "name": "offshore-pump",
    "properties": [
      {
        "comment": "fluid :: string",
        "name": "fluid",
        "type": "string"
      },
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "pumping_speed :: float",
        "name": "pumping_speed",
        "type": "float"
      },
      {
        "comment": "adjacent_tile_collision_box :: BoundingBox (optional)",
        "name": "adjacent_tile_collision_box",
        "optional": true,
        "type": "BoundingBox"
      },
      {
        "comment": "adjacent_tile_collision_mask :: CollisionMask (optional)",
        "name": "adjacent_tile_collision_mask",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "adjacent_tile_collision_test :: CollisionMask (optional)",
        "name": "adjacent_tile_collision_test",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "always_draw_fluid :: bool (optional)",
        "name": "always_draw_fluid",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "center_collision_mask :: CollisionMask (optional)",
        "name": "center_collision_mask",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "fluid_box_tile_collision_test :: CollisionMask (optional)",
        "name": "fluid_box_tile_collision_test",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "graphics_set :: table (optional)",
        "name": "graphics_set",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "min_perceived_performance :: float (optional)",
        "name": "min_perceived_performance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "picture :: Sprite4Way (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "placeable_position_visualization :: Sprite (optional)",
        "name": "placeable_position_visualization",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "remove_on_tile_collision :: bool (optional)",
        "name": "remove_on_tile_collision",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Particle",
    "extends": "PrototypeBase",
    "name": "optimized-particle",
    "properties": [
      {
        "comment": "life_time :: uint16",
        "name": "life_time",
        "type": "uint16"
      },
      {
        "comment": "pictures :: AnimationVariations",
        "name": "pictures",
        "type": "AnimationVariations"
      },
      {
        "comment": "render_layer :: RenderLayer",
        "name": "render_layer",
        "type": "RenderLayer"
      },
      {
        "comment": "render_layer_when_on_ground :: RenderLayer",
        "name": "render_layer_when_on_ground",
        "type": "RenderLayer"
      },
      {
        "comment": "draw_shadow_when_on_ground :: bool (optional)",
        "name": "draw_shadow_when_on_ground",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "ended_in_water_trigger_effect :: TriggerEffect (optional)",
        "name": "ended_in_water_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "ended_on_ground_trigger_effect :: TriggerEffect (optional)",
        "name": "ended_on_ground_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "fade_away_duration :: uint16 (optional)",
        "name": "fade_away_duration",
        "optional": true,
        "type": "uint16"
      },
      {
        "comment": "mining_particle_frame_speed :: float (optional)",
        "name": "mining_particle_frame_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "movement_modifier :: double (optional)",
        "name": "movement_modifier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "movement_modifier_when_on_ground :: double (optional)",
        "name": "movement_modifier_when_on_ground",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "regular_trigger_effect :: TriggerEffect (optional)",
        "name": "regular_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "regular_trigger_effect_frequency :: uint32 (optional)",
        "name": "regular_trigger_effect_frequency",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "shadows :: AnimationVariations (optional)",
        "name": "shadows",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "vertical_acceleration :: float (optional)",
        "name": "vertical_acceleration",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "ParticleSource",
    "extends": "Entity",
    "name": "particle-source",
    "properties": [
      {
        "comment": "height :: float",
        "name": "height",
        "type": "float"
      },
      {
        "comment": "horizontal_speed :: float",
        "name": "horizontal_speed",
        "type": "float"
      },
      {
        "comment": "particle :: string",
        "name": "particle",
        "type": "string"
      },
      {
        "comment": "time_before_start :: float",
        "name": "time_before_start",
        "type": "float"
      },
      {
        "comment": "time_to_live :: float",
        "name": "time_to_live",
        "type": "float"
      },
      {
        "comment": "vertical_speed :: float",
        "name": "vertical_speed",
        "type": "float"
      },
      {
        "comment": "height_deviation :: float (optional)",
        "name": "height_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "horizontal_speed_deviation :: float (optional)",
        "name": "horizontal_speed_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "time_before_start_deviation :: float (optional)",
        "name": "time_before_start_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "time_to_live_deviation :: float (optional)",
        "name": "time_to_live_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vertical_speed_deviation :: float (optional)",
        "name": "vertical_speed_deviation",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "Pipe",
    "extends": "EntityWithHealth",
    "name": "pipe",
    "properties": [
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "horizontal_window_bounding_box :: BoundingBox",
        "name": "horizontal_window_bounding_box",
        "type": "BoundingBox"
      },
      {
        "comment": "pictures :: table",
        "name": "pictures",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "vertical_window_bounding_box :: BoundingBox",
        "name": "vertical_window_bounding_box",
        "type": "BoundingBox"
      }
    ]
  },
  {
    "class_name": "PipeToGround",
    "extends": "EntityWithHealth",
    "name": "pipe-to-ground",
    "properties": [
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "pictures :: table of Sprite",
        "name": "pictures",
        "type": {
          "table_of": "Sprite"
        }
      }
    ]
  },
  {
    "class_name": "PlayerDamagedAchievement",
    "extends": "Achievement",
    "name": "player-damaged-achievement",
    "properties": [
      {
        "comment": "minimum_damage :: float",
        "name": "minimum_damage",
        "type": "float"
      },
      {
        "comment": "should_survive :: bool",
        "name": "should_survive",
        "type": "bool"
      },
      {
        "comment": "type_of_dealer :: string (optional)",
        "name": "type_of_dealer",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "PlayerPort",
    "extends": "EntityWithHealth",
    "name": "player-port",
    "properties": [
      {
        "comment": "animation :: Animation",
        "name": "animation",
        "type": "Animation"
      }
    ]
  },
  {
    "class_name": "PowerSwitch",
    "extends": "EntityWithHealth",
    "name": "power-switch",
    "properties": [
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint",
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint"
      },
      {
        "comment": "led_off :: Sprite",
        "name": "led_off",
        "type": "Sprite"
      },
      {
        "comment": "led_on :: Sprite",
        "name": "led_on",
        "type": "Sprite"
      },
      {
        "comment": "left_wire_connection_point :: WireConnectionPoint",
        "name": "left_wire_connection_point",
        "type": "WireConnectionPoint"
      },
      {
        "comment": "overlay_loop :: Animation",
        "name": "overlay_loop",
        "type": "Animation"
      },
      {
        "comment": "overlay_start :: Animation",
        "name": "overlay_start",
        "type": "Animation"
      },
      {
        "comment": "overlay_start_delay :: uint8",
        "name": "overlay_start_delay",
        "type": "uint8"
      },
      {
        "comment": "power_on_animation :: Animation",
        "name": "power_on_animation",
        "type": "Animation"
      },
      {
        "comment": "right_wire_connection_point :: WireConnectionPoint",
        "name": "right_wire_connection_point",
        "type": "WireConnectionPoint"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "wire_max_distance :: double (optional)",
        "name": "wire_max_distance",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "ProduceAchievement",
    "extends": "Achievement",
    "name": "produce-achievement",
    "properties": [
      {
        "comment": "amount :: MaterialAmountType",
        "name": "amount",
        "type": "MaterialAmountType"
      },
      {
        "comment": "limited_to_one_game :: bool",
        "name": "limited_to_one_game",
        "type": "bool"
      },
      {
        "comment": "fluid_product :: string (optional)",
        "name": "fluid_product",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "item_product :: string (optional)",
        "name": "item_product",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "ProducePerHourAchievement",
    "extends": "Achievement",
    "name": "produce-per-hour-achievement",
    "properties": [
      {
        "comment": "amount :: MaterialAmountType",
        "name": "amount",
        "type": "MaterialAmountType"
      },
      {
        "comment": "fluid_product :: string (optional)",
        "name": "fluid_product",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "item_product :: string (optional)",
        "name": "item_product",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "ProgrammableSpeaker",
    "extends": "EntityWithHealth",
    "name": "programmable-speaker",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage_per_tick :: Energy",
        "name": "energy_usage_per_tick",
        "type": "Energy"
      },
      {
        "comment": "instruments :: table",
        "name": "instruments",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "maximum_polyphony :: uint32",
        "name": "maximum_polyphony",
        "type": "uint32"
      },
      {
        "comment": "sprite :: Sprite",
        "name": "sprite",
        "type": "Sprite"
      },
      {
        "comment": "audible_distance_modifier :: float (optional)",
        "name": "audible_distance_modifier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "circuit_connector_sprites :: CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": "CircuitConnectorSprites"
      },
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": "WireConnectionPoint"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Projectile",
    "extends": "Entity",
    "name": "projectile",
    "properties": [
      {
        "comment": "acceleration :: double",
        "name": "acceleration",
        "type": "double"
      },
      {
        "comment": "animation :: Animation",
        "name": "animation",
        "type": "Animation"
      },
      {
        "comment": "action :: Trigger (optional)",
        "name": "action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "direction_only :: bool (optional)",
        "name": "direction_only",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "enable_drawing_with_mask :: bool (optional)",
        "name": "enable_drawing_with_mask",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "final_action :: Trigger (optional)",
        "name": "final_action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "force_condition :: ForceCondition (optional)",
        "name": "force_condition",
        "optional": true,
        "type": "ForceCondition"
      },
      {
        "comment": "height :: double (optional)",
        "name": "height",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "hit_at_collision_position :: bool (optional)",
        "name": "hit_at_collision_position",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "hit_collision_mask :: CollisionMask (optional)",
        "name": "hit_collision_mask",
        "optional": true,
        "type": "CollisionMask"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "max_speed :: double (optional)",
        "name": "max_speed",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "piercing_damage :: float (optional)",
        "name": "piercing_damage",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "rotatable :: bool (optional)",
        "name": "rotatable",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "shadow :: Animation (optional)",
        "name": "shadow",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "smoke :: Array of SmokeSource (optional)",
        "name": "smoke",
        "optional": true,
        "type": {
          "table_of": "SmokeSource"
        }
      },
      {
        "comment": "turn_speed :: float (optional)",
        "name": "turn_speed",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "Pump",
    "extends": "EntityWithHealth",
    "name": "pump",
    "properties": [
      {
        "comment": "animations :: Animation4Way",
        "name": "animations",
        "type": "Animation4Way"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "pumping_speed :: double",
        "name": "pumping_speed",
        "type": "double"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "fluid_animation :: Animation4Way (optional)",
        "name": "fluid_animation",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "fluid_wagon_connector_alignment_tolerance :: double (optional)",
        "name": "fluid_wagon_connector_alignment_tolerance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fluid_wagon_connector_frame_count :: uint8 (optional)",
        "name": "fluid_wagon_connector_frame_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "fluid_wagon_connector_graphics :: table of PumpConnectorGraphics (optional)",
        "name": "fluid_wagon_connector_graphics",
        "optional": true,
        "type": {
          "table_of": "PumpConnectorGraphics"
        }
      },
      {
        "comment": "fluid_wagon_connector_speed :: double (optional)",
        "name": "fluid_wagon_connector_speed",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "glass_pictures :: Sprite4Way (optional)",
        "name": "glass_pictures",
        "optional": true,
        "type": "Sprite4Way"
      }
    ]
  },
  {
    "class_name": "Radar",
    "extends": "EntityWithHealth",
    "name": "radar",
    "properties": [
      {
        "comment": "energy_per_nearby_scan :: Energy",
        "name": "energy_per_nearby_scan",
        "type": "Energy"
      },
      {
        "comment": "energy_per_sector :: Energy",
        "name": "energy_per_sector",
        "type": "Energy"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "max_distance_of_nearby_sector_revealed :: uint32",
        "name": "max_distance_of_nearby_sector_revealed",
        "type": "uint32"
      },
      {
        "comment": "max_distance_of_sector_revealed :: uint32",
        "name": "max_distance_of_sector_revealed",
        "type": "uint32"
      },
      {
        "comment": "pictures :: RotatedSprite",
        "name": "pictures",
        "type": "RotatedSprite"
      },
      {
        "comment": "radius_minimap_visualisation_color :: Color (optional)",
        "name": "radius_minimap_visualisation_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "rotation_speed :: double (optional)",
        "name": "rotation_speed",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "Rail",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "pictures :: table",
        "name": "pictures",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "walking_sound :: Sound (optional)",
        "name": "walking_sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "RailChainSignal",
    "extends": "RailSignalBase",
    "name": "rail-chain-signal",
    "properties": [
      {
        "comment": "selection_box_offsets :: table of vector",
        "name": "selection_box_offsets",
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "blue_light :: LightDefinition (optional)",
        "name": "blue_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "default_blue_output_signal :: SignalIDConnector (optional)",
        "name": "default_blue_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      }
    ]
  },
  {
    "class_name": "RailPlanner",
    "extends": "Item",
    "name": "rail-planner",
    "properties": [
      {
        "comment": "curved_rail :: string",
        "name": "curved_rail",
        "type": "string"
      },
      {
        "comment": "straight_rail :: string",
        "name": "straight_rail",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "RailRemnants",
    "extends": "Corpse",
    "name": "rail-remnants",
    "properties": [
      {
        "comment": "bending_type :: string",
        "name": "bending_type",
        "type": "string"
      },
      {
        "comment": "pictures :: table",
        "name": "pictures",
        "type": {
          "table_of": null
        }
      }
    ]
  },
  {
    "class_name": "RailSignal",
    "extends": "RailSignalBase",
    "name": "rail-signal",
    "properties": []
  },
  {
    "class_name": "RailSignalBase",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "animation :: RotatedAnimation",
        "name": "animation",
        "type": "RotatedAnimation"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "default_green_output_signal :: SignalIDConnector (optional)",
        "name": "default_green_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "default_orange_output_signal :: SignalIDConnector (optional)",
        "name": "default_orange_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "default_red_output_signal :: SignalIDConnector (optional)",
        "name": "default_red_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "green_light :: LightDefinition (optional)",
        "name": "green_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "orange_light :: LightDefinition (optional)",
        "name": "orange_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "rail_piece :: Animation (optional)",
        "name": "rail_piece",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "red_light :: LightDefinition (optional)",
        "name": "red_light",
        "optional": true,
        "type": "LightDefinition"
      }
    ]
  },
  {
    "class_name": "Reactor",
    "extends": "EntityWithHealth",
    "name": "reactor",
    "properties": [
      {
        "comment": "consumption :: Energy",
        "name": "consumption",
        "type": "Energy"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "heat_buffer :: HeatBuffer",
        "name": "heat_buffer",
        "type": "HeatBuffer"
      },
      {
        "comment": "working_light_picture :: Sprite",
        "name": "working_light_picture",
        "type": "Sprite"
      },
      {
        "comment": "connection_patches_connected :: SpriteVariations (optional)",
        "name": "connection_patches_connected",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "connection_patches_disconnected :: SpriteVariations (optional)",
        "name": "connection_patches_disconnected",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "default_fuel_glow_color :: Color (optional)",
        "name": "default_fuel_glow_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "heat_connection_patches_connected :: SpriteVariations (optional)",
        "name": "heat_connection_patches_connected",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "heat_connection_patches_disconnected :: SpriteVariations (optional)",
        "name": "heat_connection_patches_disconnected",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "heat_lower_layer_picture :: Sprite (optional)",
        "name": "heat_lower_layer_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "lower_layer_picture :: Sprite (optional)",
        "name": "lower_layer_picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "meltdown_action :: Trigger (optional)",
        "name": "meltdown_action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "neighbour_bonus :: double (optional)",
        "name": "neighbour_bonus",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "neighbour_collision_increase :: double (optional)",
        "name": "neighbour_collision_increase",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "scale_energy_usage :: bool (optional)",
        "name": "scale_energy_usage",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "use_fuel_glow_color :: bool (optional)",
        "name": "use_fuel_glow_color",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Recipe",
    "extends": "PrototypeBase",
    "name": "recipe",
    "properties": [
      {
        "comment": "ingredients :: table of IngredientPrototype",
        "name": "ingredients",
        "type": {
          "table_of": "IngredientPrototype"
        }
      },
      {
        "comment": "allow_as_intermediate :: bool (optional)",
        "name": "allow_as_intermediate",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "allow_decomposition :: bool (optional)",
        "name": "allow_decomposition",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "allow_intermediates :: bool (optional)",
        "name": "allow_intermediates",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "always_show_made_in :: bool (optional)",
        "name": "always_show_made_in",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "always_show_products :: bool (optional)",
        "name": "always_show_products",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "category :: string (optional)",
        "name": "category",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "crafting_machine_tint :: table of Color (optional)",
        "name": "crafting_machine_tint",
        "optional": true,
        "type": {
          "table_of": "Color"
        }
      },
      {
        "comment": "emissions_multiplier :: double (optional)",
        "name": "emissions_multiplier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "enabled :: bool (optional)",
        "name": "enabled",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "energy_required :: double (optional)",
        "name": "energy_required",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "expensive :: Recipe data or bool (optional)",
        "name": "expensive",
        "optional": true,
        "type": {
          "or": [
            "Recipe data",
            "bool"
          ]
        }
      },
      {
        "comment": "hidden :: bool (optional)",
        "name": "hidden",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "hide_from_player_crafting :: bool (optional)",
        "name": "hide_from_player_crafting",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "hide_from_stats :: bool (optional)",
        "name": "hide_from_stats",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "icons, icon,  icon_size (IconSpecification) :: IconSpecification (optional)",
        "name": "icon_spec",
        "optional": true,
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "main_product :: string (optional)",
        "name": "main_product",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "normal :: Recipe data or bool (optional)",
        "name": "normal",
        "optional": true,
        "type": {
          "or": [
            "Recipe data",
            "bool"
          ]
        }
      },
      {
        "comment": "overload_multiplier :: uint32 (optional)",
        "name": "overload_multiplier",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "requester_paste_multiplier :: uint32 (optional)",
        "name": "requester_paste_multiplier",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "result :: string (optional)",
        "name": "result",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "result_count :: uint32 (optional)",
        "name": "result_count",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "results :: table of ProductPrototype (optional)",
        "name": "results",
        "optional": true,
        "type": {
          "table_of": "ProductPrototype"
        }
      },
      {
        "comment": "show_amount_in_title :: bool (optional)",
        "name": "show_amount_in_title",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "subgroup :: string (optional)",
        "name": "subgroup",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "unlock_results :: bool (optional)",
        "name": "unlock_results",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "RecipeCategory",
    "extends": "PrototypeBase",
    "name": "recipe-category",
    "properties": []
  },
  {
    "class_name": "RepairTool",
    "extends": "Tool",
    "name": "repair-tool",
    "properties": [
      {
        "comment": "speed :: float",
        "name": "speed",
        "type": "float"
      },
      {
        "comment": "repair_result :: Trigger (optional)",
        "name": "repair_result",
        "optional": true,
        "type": "Trigger"
      }
    ]
  },
  {
    "class_name": "ResearchAchievement",
    "extends": "Achievement",
    "name": "research-achievement",
    "properties": [
      {
        "comment": "research_all :: bool (optional)",
        "name": "research_all",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "technology :: string (optional)",
        "name": "technology",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "ResourceCategory",
    "extends": "PrototypeBase",
    "name": "resource-category",
    "properties": []
  },
  {
    "class_name": "ResourceEntity",
    "extends": "Entity",
    "name": "resource",
    "properties": [
      {
        "comment": "stage_counts :: table of uint32",
        "name": "stage_counts",
        "type": {
          "table_of": "uint32"
        }
      },
      {
        "comment": "stages :: AnimationVariations",
        "name": "stages",
        "type": "AnimationVariations"
      },
      {
        "comment": "category :: string (optional)",
        "name": "category",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "effect_animation_period :: float (optional)",
        "name": "effect_animation_period",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "effect_animation_period_deviation :: float (optional)",
        "name": "effect_animation_period_deviation",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "effect_darkness_multiplier :: float (optional)",
        "name": "effect_darkness_multiplier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "highlight :: bool (optional)",
        "name": "highlight",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "infinite :: bool (optional)",
        "name": "infinite",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "infinite_depletion_amount :: uint32 (optional)",
        "name": "infinite_depletion_amount",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "map_grid :: bool (optional)",
        "name": "map_grid",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "max_effect_alpha :: float (optional)",
        "name": "max_effect_alpha",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "min_effect_alpha :: float (optional)",
        "name": "min_effect_alpha",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "minimum :: uint32 (optional)",
        "name": "minimum",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "mining_visualisation_tint :: Color (optional)",
        "name": "mining_visualisation_tint",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "normal :: uint32 (optional)",
        "name": "normal",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "randomize_visual_position :: bool (optional)",
        "name": "randomize_visual_position",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "resource_patch_search_radius :: uint32 (optional)",
        "name": "resource_patch_search_radius",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "stages_effect :: AnimationVariations (optional)",
        "name": "stages_effect",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "tree_removal_max_distance :: double (optional)",
        "name": "tree_removal_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "tree_removal_probability :: double (optional)",
        "name": "tree_removal_probability",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "walking_sound :: Sound (optional)",
        "name": "walking_sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "Roboport",
    "extends": "EntityWithHealth",
    "name": "roboport",
    "properties": [
      {
        "comment": "base :: Sprite",
        "name": "base",
        "type": "Sprite"
      },
      {
        "comment": "base_animation :: Animation",
        "name": "base_animation",
        "type": "Animation"
      },
      {
        "comment": "base_patch :: Sprite",
        "name": "base_patch",
        "type": "Sprite"
      },
      {
        "comment": "charge_approach_distance :: float",
        "name": "charge_approach_distance",
        "type": "float"
      },
      {
        "comment": "charging_energy :: Energy",
        "name": "charging_energy",
        "type": "Energy"
      },
      {
        "comment": "construction_radius :: float",
        "name": "construction_radius",
        "type": "float"
      },
      {
        "comment": "door_animation_down :: Animation",
        "name": "door_animation_down",
        "type": "Animation"
      },
      {
        "comment": "door_animation_up :: Animation",
        "name": "door_animation_up",
        "type": "Animation"
      },
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "logistics_radius :: float",
        "name": "logistics_radius",
        "type": "float"
      },
      {
        "comment": "material_slots_count :: ItemStackIndex",
        "name": "material_slots_count",
        "type": "ItemStackIndex"
      },
      {
        "comment": "recharge_minimum :: Energy",
        "name": "recharge_minimum",
        "type": "Energy"
      },
      {
        "comment": "recharging_animation :: Animation",
        "name": "recharging_animation",
        "type": "Animation"
      },
      {
        "comment": "request_to_open_door_timeout :: uint32",
        "name": "request_to_open_door_timeout",
        "type": "uint32"
      },
      {
        "comment": "robot_slots_count :: ItemStackIndex",
        "name": "robot_slots_count",
        "type": "ItemStackIndex"
      },
      {
        "comment": "spawn_and_station_height :: float",
        "name": "spawn_and_station_height",
        "type": "float"
      },
      {
        "comment": "charging_distance :: float (optional)",
        "name": "charging_distance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "charging_offsets :: table of vector (optional)",
        "name": "charging_offsets",
        "optional": true,
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "charging_station_count :: uint32 (optional)",
        "name": "charging_station_count",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "charging_station_shift :: vector (optional)",
        "name": "charging_station_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "charging_threshold_distance :: float (optional)",
        "name": "charging_threshold_distance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "circuit_connector_sprites :: CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": "CircuitConnectorSprites"
      },
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": "WireConnectionPoint"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "close_door_trigger_effect :: TriggerEffect (optional)",
        "name": "close_door_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "default_available_construction_output_signal :: SignalIDConnector (optional)",
        "name": "default_available_construction_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "default_available_logistic_output_signal :: SignalIDConnector (optional)",
        "name": "default_available_logistic_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "default_total_construction_output_signal :: SignalIDConnector (optional)",
        "name": "default_total_construction_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "default_total_logistic_output_signal :: SignalIDConnector (optional)",
        "name": "default_total_logistic_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_construction_radius_visualization :: bool (optional)",
        "name": "draw_construction_radius_visualization",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_logistic_radius_visualization :: bool (optional)",
        "name": "draw_logistic_radius_visualization",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "logistics_connection_distance :: float (optional)",
        "name": "logistics_connection_distance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "open_door_trigger_effect :: TriggerEffect (optional)",
        "name": "open_door_trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "recharging_light :: LightDefinition (optional)",
        "name": "recharging_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "robot_limit :: ItemCountType (optional)",
        "name": "robot_limit",
        "optional": true,
        "type": "ItemCountType"
      },
      {
        "comment": "robot_vertical_acceleration :: float (optional)",
        "name": "robot_vertical_acceleration",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "robots_shrink_when_entering_and_exiting :: bool (optional)",
        "name": "robots_shrink_when_entering_and_exiting",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "spawn_and_station_shadow_height_offset :: float (optional)",
        "name": "spawn_and_station_shadow_height_offset",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "stationing_offset :: vector (optional)",
        "name": "stationing_offset",
        "optional": true,
        "type": "vector"
      }
    ]
  },
  {
    "class_name": "RoboportEquipment",
    "extends": "Equipment",
    "name": "roboport-equipment",
    "properties": [
      {
        "comment": "charge_approach_distance :: float",
        "name": "charge_approach_distance",
        "type": "float"
      },
      {
        "comment": "charging_energy :: Energy",
        "name": "charging_energy",
        "type": "Energy"
      },
      {
        "comment": "construction_radius :: float",
        "name": "construction_radius",
        "type": "float"
      },
      {
        "comment": "recharging_animation :: Animation",
        "name": "recharging_animation",
        "type": "Animation"
      },
      {
        "comment": "spawn_and_station_height :: float",
        "name": "spawn_and_station_height",
        "type": "float"
      },
      {
        "comment": "burner :: EnergySource (optional)",
        "name": "burner",
        "optional": true,
        "type": "EnergySource"
      },
      {
        "comment": "charging_distance :: float (optional)",
        "name": "charging_distance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "charging_offsets :: table of vector (optional)",
        "name": "charging_offsets",
        "optional": true,
        "type": {
          "table_of": "vector"
        }
      },
      {
        "comment": "charging_station_count :: uint32 (optional)",
        "name": "charging_station_count",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "charging_station_shift :: vector (optional)",
        "name": "charging_station_shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "charging_threshold_distance :: float (optional)",
        "name": "charging_threshold_distance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "draw_construction_radius_visualization :: bool (optional)",
        "name": "draw_construction_radius_visualization",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_logistic_radius_visualization :: bool (optional)",
        "name": "draw_logistic_radius_visualization",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "power :: Energy (optional)",
        "name": "power",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "recharging_light :: LightDefinition (optional)",
        "name": "recharging_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "robot_limit :: ItemCountType (optional)",
        "name": "robot_limit",
        "optional": true,
        "type": "ItemCountType"
      },
      {
        "comment": "robot_vertical_acceleration :: float (optional)",
        "name": "robot_vertical_acceleration",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "robots_shrink_when_entering_and_exiting :: bool (optional)",
        "name": "robots_shrink_when_entering_and_exiting",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "spawn_and_station_shadow_height_offset :: float (optional)",
        "name": "spawn_and_station_shadow_height_offset",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "spawn_minimum :: Energy (optional)",
        "name": "spawn_minimum",
        "optional": true,
        "type": "Energy"
      },
      {
        "comment": "stationing_offset :: vector (optional)",
        "name": "stationing_offset",
        "optional": true,
        "type": "vector"
      }
    ]
  },
  {
    "class_name": "RobotWithLogisticInterface",
    "extends": "FlyingRobot",
    "properties": [
      {
        "comment": "cargo_centered :: vector",
        "name": "cargo_centered",
        "type": "vector"
      },
      {
        "comment": "max_payload_size :: ItemCountType",
        "name": "max_payload_size",
        "type": "ItemCountType"
      },
      {
        "comment": "draw_cargo :: bool (optional)",
        "name": "draw_cargo",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "idle :: RotatedAnimation (optional)",
        "name": "idle",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "in_motion :: RotatedAnimation (optional)",
        "name": "in_motion",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "shadow_idle :: RotatedAnimation (optional)",
        "name": "shadow_idle",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "shadow_in_motion :: RotatedAnimation (optional)",
        "name": "shadow_in_motion",
        "optional": true,
        "type": "RotatedAnimation"
      }
    ]
  },
  {
    "class_name": "RocketSilo",
    "extends": "AssemblingMachine",
    "name": "rocket-silo",
    "properties": [
      {
        "comment": "active_energy_usage :: Energy",
        "name": "active_energy_usage",
        "type": "Energy"
      },
      {
        "comment": "arm_01_back_animation :: Animation",
        "name": "arm_01_back_animation",
        "type": "Animation"
      },
      {
        "comment": "arm_02_right_animation :: Animation",
        "name": "arm_02_right_animation",
        "type": "Animation"
      },
      {
        "comment": "arm_03_front_animation :: Animation",
        "name": "arm_03_front_animation",
        "type": "Animation"
      },
      {
        "comment": "base_day_sprite :: Sprite",
        "name": "base_day_sprite",
        "type": "Sprite"
      },
      {
        "comment": "base_front_sprite :: Sprite",
        "name": "base_front_sprite",
        "type": "Sprite"
      },
      {
        "comment": "door_back_open_offset :: vector",
        "name": "door_back_open_offset",
        "type": "vector"
      },
      {
        "comment": "door_back_sprite :: Sprite",
        "name": "door_back_sprite",
        "type": "Sprite"
      },
      {
        "comment": "door_front_open_offset :: vector",
        "name": "door_front_open_offset",
        "type": "vector"
      },
      {
        "comment": "door_front_sprite :: Sprite",
        "name": "door_front_sprite",
        "type": "Sprite"
      },
      {
        "comment": "door_opening_speed :: double",
        "name": "door_opening_speed",
        "type": "double"
      },
      {
        "comment": "energy_usage :: Energy",
        "name": "energy_usage",
        "type": "Energy"
      },
      {
        "comment": "hole_clipping_box :: BoundingBox",
        "name": "hole_clipping_box",
        "type": "BoundingBox"
      },
      {
        "comment": "hole_light_sprite :: Sprite",
        "name": "hole_light_sprite",
        "type": "Sprite"
      },
      {
        "comment": "hole_sprite :: Sprite",
        "name": "hole_sprite",
        "type": "Sprite"
      },
      {
        "comment": "idle_energy_usage :: Energy",
        "name": "idle_energy_usage",
        "type": "Energy"
      },
      {
        "comment": "lamp_energy_usage :: Energy",
        "name": "lamp_energy_usage",
        "type": "Energy"
      },
      {
        "comment": "light_blinking_speed :: double",
        "name": "light_blinking_speed",
        "type": "double"
      },
      {
        "comment": "red_lights_back_sprites :: Sprite",
        "name": "red_lights_back_sprites",
        "type": "Sprite"
      },
      {
        "comment": "red_lights_front_sprites :: Sprite",
        "name": "red_lights_front_sprites",
        "type": "Sprite"
      },
      {
        "comment": "rocket_entity :: string",
        "name": "rocket_entity",
        "type": "string"
      },
      {
        "comment": "rocket_glow_overlay_sprite :: Sprite",
        "name": "rocket_glow_overlay_sprite",
        "type": "Sprite"
      },
      {
        "comment": "rocket_parts_required :: uint32",
        "name": "rocket_parts_required",
        "type": "uint32"
      },
      {
        "comment": "rocket_shadow_overlay_sprite :: Sprite",
        "name": "rocket_shadow_overlay_sprite",
        "type": "Sprite"
      },
      {
        "comment": "satellite_animation :: Animation",
        "name": "satellite_animation",
        "type": "Animation"
      },
      {
        "comment": "satellite_shadow_animation :: Animation",
        "name": "satellite_shadow_animation",
        "type": "Animation"
      },
      {
        "comment": "shadow_sprite :: Sprite",
        "name": "shadow_sprite",
        "type": "Sprite"
      },
      {
        "comment": "silo_fade_out_end_distance :: double",
        "name": "silo_fade_out_end_distance",
        "type": "double"
      },
      {
        "comment": "silo_fade_out_start_distance :: double",
        "name": "silo_fade_out_start_distance",
        "type": "double"
      },
      {
        "comment": "times_to_blink :: uint8",
        "name": "times_to_blink",
        "type": "uint8"
      },
      {
        "comment": "alarm_sound :: Sound (optional)",
        "name": "alarm_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "alarm_trigger :: TriggerEffect (optional)",
        "name": "alarm_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "base_engine_light :: LightDefinition (optional)",
        "name": "base_engine_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "base_light :: LightDefinition (optional)",
        "name": "base_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "base_night_sprite :: Sprite (optional)",
        "name": "base_night_sprite",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "clamps_off_sound :: Sound (optional)",
        "name": "clamps_off_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "clamps_off_trigger :: TriggerEffect (optional)",
        "name": "clamps_off_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "clamps_on_sound :: Sound (optional)",
        "name": "clamps_on_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "clamps_on_trigger :: TriggerEffect (optional)",
        "name": "clamps_on_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "doors_sound :: Sound (optional)",
        "name": "doors_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "doors_trigger :: TriggerEffect (optional)",
        "name": "doors_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "flying_sound :: Sound (optional)",
        "name": "flying_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "raise_rocket_sound :: Sound (optional)",
        "name": "raise_rocket_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "raise_rocket_trigger :: TriggerEffect (optional)",
        "name": "raise_rocket_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "rocket_result_inventory_size :: ItemStackIndex (optional)",
        "name": "rocket_result_inventory_size",
        "optional": true,
        "type": "ItemStackIndex"
      }
    ]
  },
  {
    "class_name": "RocketSiloRocket",
    "extends": "Entity",
    "name": "rocket-silo-rocket",
    "properties": [
      {
        "comment": "effects_fade_in_end_distance :: double",
        "name": "effects_fade_in_end_distance",
        "type": "double"
      },
      {
        "comment": "effects_fade_in_start_distance :: double",
        "name": "effects_fade_in_start_distance",
        "type": "double"
      },
      {
        "comment": "engine_starting_speed :: double",
        "name": "engine_starting_speed",
        "type": "double"
      },
      {
        "comment": "flying_acceleration :: double",
        "name": "flying_acceleration",
        "type": "double"
      },
      {
        "comment": "flying_speed :: double",
        "name": "flying_speed",
        "type": "double"
      },
      {
        "comment": "full_render_layer_switch_distance :: double",
        "name": "full_render_layer_switch_distance",
        "type": "double"
      },
      {
        "comment": "inventory_size :: ItemStackIndex",
        "name": "inventory_size",
        "type": "ItemStackIndex"
      },
      {
        "comment": "rising_speed :: double",
        "name": "rising_speed",
        "type": "double"
      },
      {
        "comment": "rocket_flame_animation :: Animation",
        "name": "rocket_flame_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_flame_left_animation :: Animation",
        "name": "rocket_flame_left_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_flame_left_rotation :: float",
        "name": "rocket_flame_left_rotation",
        "type": "float"
      },
      {
        "comment": "rocket_flame_right_animation :: Animation",
        "name": "rocket_flame_right_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_flame_right_rotation :: float",
        "name": "rocket_flame_right_rotation",
        "type": "float"
      },
      {
        "comment": "rocket_glare_overlay_sprite :: Sprite",
        "name": "rocket_glare_overlay_sprite",
        "type": "Sprite"
      },
      {
        "comment": "rocket_launch_offset :: vector",
        "name": "rocket_launch_offset",
        "type": "vector"
      },
      {
        "comment": "rocket_render_layer_switch_distance :: double",
        "name": "rocket_render_layer_switch_distance",
        "type": "double"
      },
      {
        "comment": "rocket_rise_offset :: vector",
        "name": "rocket_rise_offset",
        "type": "vector"
      },
      {
        "comment": "rocket_shadow_sprite :: Sprite",
        "name": "rocket_shadow_sprite",
        "type": "Sprite"
      },
      {
        "comment": "rocket_smoke_bottom1_animation :: Animation",
        "name": "rocket_smoke_bottom1_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_smoke_bottom2_animation :: Animation",
        "name": "rocket_smoke_bottom2_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_smoke_top1_animation :: Animation",
        "name": "rocket_smoke_top1_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_smoke_top2_animation :: Animation",
        "name": "rocket_smoke_top2_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_smoke_top3_animation :: Animation",
        "name": "rocket_smoke_top3_animation",
        "type": "Animation"
      },
      {
        "comment": "rocket_sprite :: Sprite",
        "name": "rocket_sprite",
        "type": "Sprite"
      },
      {
        "comment": "rocket_visible_distance_from_center :: double",
        "name": "rocket_visible_distance_from_center",
        "type": "double"
      },
      {
        "comment": "shadow_fade_out_end_ratio :: double",
        "name": "shadow_fade_out_end_ratio",
        "type": "double"
      },
      {
        "comment": "shadow_fade_out_start_ratio :: double",
        "name": "shadow_fade_out_start_ratio",
        "type": "double"
      },
      {
        "comment": "shadow_slave_entity :: string",
        "name": "shadow_slave_entity",
        "type": "string"
      },
      {
        "comment": "dying_explosion :: string (optional)",
        "name": "dying_explosion",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "flying_trigger :: TriggerEffect (optional)",
        "name": "flying_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "glow_light :: LightDefinition (optional)",
        "name": "glow_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "result_items :: table of table (optional)",
        "name": "result_items",
        "optional": true,
        "type": {
          "table_of": {
            "table_of": null
          }
        }
      },
      {
        "comment": "rocket_initial_offset :: vector (optional)",
        "name": "rocket_initial_offset",
        "optional": true,
        "type": "vector"
      }
    ]
  },
  {
    "class_name": "RocketSiloRocketShadow",
    "extends": "Entity",
    "name": "rocket-silo-rocket-shadow",
    "properties": []
  },
  {
    "class_name": "RollingStock",
    "extends": "Vehicle",
    "properties": [
      {
        "comment": "air_resistance :: double",
        "name": "air_resistance",
        "type": "double"
      },
      {
        "comment": "connection_distance :: double",
        "name": "connection_distance",
        "type": "double"
      },
      {
        "comment": "joint_distance :: double",
        "name": "joint_distance",
        "type": "double"
      },
      {
        "comment": "max_speed :: double",
        "name": "max_speed",
        "type": "double"
      },
      {
        "comment": "pictures :: RotatedSprite",
        "name": "pictures",
        "type": "RotatedSprite"
      },
      {
        "comment": "vertical_selection_shift :: double",
        "name": "vertical_selection_shift",
        "type": "double"
      },
      {
        "comment": "allow_manual_color :: bool (optional)",
        "name": "allow_manual_color",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "allow_robot_dispatch_in_automatic_mode :: bool (optional)",
        "name": "allow_robot_dispatch_in_automatic_mode",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "back_light :: LightDefinition (optional)",
        "name": "back_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "color :: Color (optional)",
        "name": "color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "drive_over_tie_trigger :: TriggerEffect (optional)",
        "name": "drive_over_tie_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "horizontal_doors :: Animation (optional)",
        "name": "horizontal_doors",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "stand_by_light :: LightDefinition (optional)",
        "name": "stand_by_light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "tie_distance :: double (optional)",
        "name": "tie_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "vertical_doors :: Animation (optional)",
        "name": "vertical_doors",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "wheels :: RotatedSprite (optional)",
        "name": "wheels",
        "optional": true,
        "type": "RotatedSprite"
      }
    ]
  },
  {
    "class_name": "SelectionTool",
    "extends": "ItemWithLabel",
    "name": "selection-tool",
    "properties": [
      {
        "comment": "alt_selection_color :: Color",
        "name": "alt_selection_color",
        "type": "Color"
      },
      {
        "comment": "alt_selection_cursor_box_type :: string",
        "name": "alt_selection_cursor_box_type",
        "type": "string"
      },
      {
        "comment": "alt_selection_mode :: table of string",
        "name": "alt_selection_mode",
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "selection_color :: Color",
        "name": "selection_color",
        "type": "Color"
      },
      {
        "comment": "selection_cursor_box_type :: string",
        "name": "selection_cursor_box_type",
        "type": "string"
      },
      {
        "comment": "selection_mode :: table of string",
        "name": "selection_mode",
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "alt_entity_filter_mode :: string (optional)",
        "name": "alt_entity_filter_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "alt_entity_filters :: table of string (optional)",
        "name": "alt_entity_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "alt_entity_type_filters :: table of string (optional)",
        "name": "alt_entity_type_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "alt_tile_filter_mode :: string (optional)",
        "name": "alt_tile_filter_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "alt_tile_filters :: table of string (optional)",
        "name": "alt_tile_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "always_include_tiles :: bool (optional)",
        "name": "always_include_tiles",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "entity_filter_mode :: string (optional)",
        "name": "entity_filter_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "entity_filters :: table of string (optional)",
        "name": "entity_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "entity_type_filters :: table of string (optional)",
        "name": "entity_type_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "mouse_cursor :: string (optional)",
        "name": "mouse_cursor",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "show_in_library :: bool (optional)",
        "name": "show_in_library",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "tile_filter_mode :: string (optional)",
        "name": "tile_filter_mode",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "tile_filters :: table of string (optional)",
        "name": "tile_filters",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      }
    ]
  },
  {
    "class_name": "Shortcut",
    "extends": "PrototypeBase",
    "name": "shortcut",
    "properties": [
      {
        "comment": "action :: string",
        "name": "action",
        "type": "string"
      },
      {
        "comment": "icon :: Sprite",
        "name": "icon",
        "type": "Sprite"
      },
      {
        "comment": "associated_control_input :: string (optional)",
        "name": "associated_control_input",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "disabled_icon :: Sprite (optional)",
        "name": "disabled_icon",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "disabled_small_icon :: Sprite (optional)",
        "name": "disabled_small_icon",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "item_to_create :: string (optional)",
        "name": "item_to_create",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "small_icon :: Sprite (optional)",
        "name": "small_icon",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "style :: string (optional)",
        "name": "style",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "technology_to_unlock :: string (optional)",
        "name": "technology_to_unlock",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "toggleable :: bool (optional)",
        "name": "toggleable",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "SimpleEntity",
    "extends": "EntityWithHealth",
    "name": "simple-entity",
    "properties": [
      {
        "comment": "animations :: AnimationVariations (optional)",
        "name": "animations",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "count_as_rock_for_filtered_deconstruction :: bool (optional)",
        "name": "count_as_rock_for_filtered_deconstruction",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "pictures :: SpriteVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "random_animation_offset :: bool (optional)",
        "name": "random_animation_offset",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "random_variation_on_create :: bool (optional)",
        "name": "random_variation_on_create",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "secondary_draw_order :: int8 (optional)",
        "name": "secondary_draw_order",
        "optional": true,
        "type": "int8"
      }
    ]
  },
  {
    "class_name": "SimpleEntityWithForce",
    "extends": "EntityWithHealth",
    "name": "simple-entity-with-force",
    "properties": [
      {
        "comment": "animations :: AnimationVariations (optional)",
        "name": "animations",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "pictures :: SpriteVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "random_animation_offset :: bool (optional)",
        "name": "random_animation_offset",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "random_variation_on_create :: bool (optional)",
        "name": "random_variation_on_create",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "secondary_draw_order :: int8 (optional)",
        "name": "secondary_draw_order",
        "optional": true,
        "type": "int8"
      }
    ]
  },
  {
    "class_name": "SimpleEntityWithOwner",
    "extends": "EntityWithHealth",
    "name": "simple-entity-with-owner",
    "properties": [
      {
        "comment": "animations :: AnimationVariations (optional)",
        "name": "animations",
        "optional": true,
        "type": "AnimationVariations"
      },
      {
        "comment": "force_visibility :: ForceCondition (optional)",
        "name": "force_visibility",
        "optional": true,
        "type": "ForceCondition"
      },
      {
        "comment": "picture :: Sprite (optional)",
        "name": "picture",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "pictures :: SpriteVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "random_animation_offset :: bool (optional)",
        "name": "random_animation_offset",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "random_variation_on_create :: bool (optional)",
        "name": "random_variation_on_create",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "secondary_draw_order :: int8 (optional)",
        "name": "secondary_draw_order",
        "optional": true,
        "type": "int8"
      }
    ]
  },
  {
    "class_name": "SimpleSmoke",
    "extends": "Smoke",
    "name": "smoke",
    "properties": []
  },
  {
    "class_name": "Smoke",
    "extends": "Entity",
    "properties": [
      {
        "comment": "animation :: Animation",
        "name": "animation",
        "type": "Animation"
      },
      {
        "comment": "affected_by_wind :: bool (optional)",
        "name": "affected_by_wind",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "color :: Color (optional)",
        "name": "color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "cyclic :: bool (optional)",
        "name": "cyclic",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "duration :: uint32 (optional)",
        "name": "duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "end_scale :: double (optional)",
        "name": "end_scale",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fade_away_duration :: uint32 (optional)",
        "name": "fade_away_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "fade_in_duration :: uint32 (optional)",
        "name": "fade_in_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "glow_animation :: Animation (optional)",
        "name": "glow_animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "glow_fade_away_duration :: uint32 (optional)",
        "name": "glow_fade_away_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "movement_slow_down_factor :: double (optional)",
        "name": "movement_slow_down_factor",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "show_when_smoke_off :: bool (optional)",
        "name": "show_when_smoke_off",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "spread_duration :: uint32 (optional)",
        "name": "spread_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "start_scale :: double (optional)",
        "name": "start_scale",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "SmokeWithTrigger",
    "extends": "Smoke",
    "name": "smoke-with-trigger",
    "properties": [
      {
        "comment": "action :: Trigger (optional)",
        "name": "action",
        "optional": true,
        "type": "Trigger"
      },
      {
        "comment": "action_cooldown :: uint32 (optional)",
        "name": "action_cooldown",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "particle_count :: uint8 (optional)",
        "name": "particle_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "particle_distance_scale_factor :: float (optional)",
        "name": "particle_distance_scale_factor",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "particle_duration_variation :: uint32 (optional)",
        "name": "particle_duration_variation",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "particle_scale_factor :: vector (optional)",
        "name": "particle_scale_factor",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "particle_spread :: vector (optional)",
        "name": "particle_spread",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "spread_duration_variation :: uint32 (optional)",
        "name": "spread_duration_variation",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "wave_distance :: vector (optional)",
        "name": "wave_distance",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "wave_speed :: vector (optional)",
        "name": "wave_speed",
        "optional": true,
        "type": "vector"
      }
    ]
  },
  {
    "class_name": "SolarPanel",
    "extends": "EntityWithHealth",
    "name": "solar-panel",
    "properties": [
      {
        "comment": "energy_source :: EnergySource",
        "name": "energy_source",
        "type": "EnergySource"
      },
      {
        "comment": "picture :: SpriteVariations",
        "name": "picture",
        "type": "SpriteVariations"
      },
      {
        "comment": "production :: Energy",
        "name": "production",
        "type": "Energy"
      },
      {
        "comment": "overlay :: SpriteVariations (optional)",
        "name": "overlay",
        "optional": true,
        "type": "SpriteVariations"
      }
    ]
  },
  {
    "class_name": "SolarPanelEquipment",
    "extends": "Equipment",
    "name": "solar-panel-equipment",
    "properties": [
      {
        "comment": "power :: Energy",
        "name": "power",
        "type": "Energy"
      }
    ]
  },
  {
    "class_name": "Sound",
    "name": "sound",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "aggregation :: table (optional)",
        "name": "aggregation",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "allow_random_repeat :: bool (optional)",
        "name": "allow_random_repeat",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "audible_distance_modifier :: double (optional)",
        "name": "audible_distance_modifier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "category :: string (optional)",
        "name": "category",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "filename :: FileName (optional)",
        "name": "filename",
        "optional": true,
        "type": "FileName"
      },
      {
        "comment": "max_speed :: float (optional)",
        "name": "max_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "min_speed :: float (optional)",
        "name": "min_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "preload :: bool (optional)",
        "name": "preload",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "speed :: float (optional)",
        "name": "speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "variations :: table (array) of tables (optional)",
        "name": "variations",
        "optional": true,
        "type": {
          "table_of": "tables"
        }
      },
      {
        "comment": "volume :: float (optional)",
        "name": "volume",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "SpectatorController",
    "name": "spectator-controller",
    "properties": [
      {
        "comment": "movement_speed :: double",
        "name": "movement_speed",
        "type": "double"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "SpeechBubble",
    "extends": "Entity",
    "name": "speech-bubble",
    "properties": [
      {
        "comment": "style :: string",
        "name": "style",
        "type": "string"
      },
      {
        "comment": "fade_in_out_ticks :: uint32 (optional)",
        "name": "fade_in_out_ticks",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "wrapper_flow_style :: string (optional)",
        "name": "wrapper_flow_style",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "y_offset :: double (optional)",
        "name": "y_offset",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "Splitter",
    "extends": "TransportBeltConnectable",
    "name": "splitter",
    "properties": [
      {
        "comment": "structure :: Animation4Way",
        "name": "structure",
        "type": "Animation4Way"
      },
      {
        "comment": "structure_animation_movement_cooldown :: uint32 (optional)",
        "name": "structure_animation_movement_cooldown",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "structure_animation_speed_coefficient :: double (optional)",
        "name": "structure_animation_speed_coefficient",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "structure_patch :: Animation4Way (optional)",
        "name": "structure_patch",
        "optional": true,
        "type": "Animation4Way"
      }
    ]
  },
  {
    "class_name": "Sprite",
    "name": "sprite",
    "properties": [
      {
        "comment": "filename :: FileName",
        "name": "filename",
        "type": "FileName"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "apply_runtime_tint :: bool (optional)",
        "name": "apply_runtime_tint",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "blend_mode :: BlendMode (optional)",
        "name": "blend_mode",
        "optional": true,
        "type": "BlendMode"
      },
      {
        "comment": "draw_as_shadow :: bool (optional)",
        "name": "draw_as_shadow",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "flags :: SpriteFlags (optional)",
        "name": "flags",
        "optional": true,
        "type": "SpriteFlags"
      },
      {
        "comment": "generate_sdf :: bool (optional)",
        "name": "generate_sdf",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "height :: SpriteSizeType (optional)",
        "name": "height",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "hr_version :: Sprite (optional)",
        "name": "hr_version",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "layers :: table of Sprite (optional)",
        "name": "layers",
        "optional": true,
        "type": {
          "table_of": "Sprite"
        }
      },
      {
        "comment": "load_in_minimal_mode :: bool (optional)",
        "name": "load_in_minimal_mode",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "mipmap_count :: uint8 (optional)",
        "name": "mipmap_count",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "position :: table of SpriteSizeType (optional)",
        "name": "position",
        "optional": true,
        "type": {
          "table_of": "SpriteSizeType"
        }
      },
      {
        "comment": "premul_alpha :: bool (optional)",
        "name": "premul_alpha",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "priority :: SpritePriority (optional)",
        "name": "priority",
        "optional": true,
        "type": "SpritePriority"
      },
      {
        "comment": "scale :: double (optional)",
        "name": "scale",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "shift :: vector (optional)",
        "name": "shift",
        "optional": true,
        "type": "vector"
      },
      {
        "comment": "size :: SpriteSizeType or table of SpriteSizeType (optional)",
        "name": "size",
        "optional": true,
        "type": {
          "or": [
            "SpriteSizeType",
            {
              "table_of": "SpriteSizeType"
            }
          ]
        }
      },
      {
        "comment": "slice :: SpriteSizeType (optional)",
        "name": "slice",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "slice_x :: SpriteSizeType (optional)",
        "name": "slice_x",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "slice_y :: SpriteSizeType (optional)",
        "name": "slice_y",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "tint :: Color (optional)",
        "name": "tint",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "width :: SpriteSizeType (optional)",
        "name": "width",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "x :: SpriteSizeType (optional)",
        "name": "x",
        "optional": true,
        "type": "SpriteSizeType"
      },
      {
        "comment": "y :: SpriteSizeType (optional)",
        "name": "y",
        "optional": true,
        "type": "SpriteSizeType"
      }
    ]
  },
  {
    "class_name": "Sticker",
    "extends": "Entity",
    "name": "sticker",
    "properties": [
      {
        "comment": "duration_in_ticks :: uint32",
        "name": "duration_in_ticks",
        "type": "uint32"
      },
      {
        "comment": "animation :: Animation (optional)",
        "name": "animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "damage_interval :: uint32 (optional)",
        "name": "damage_interval",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "damage_per_tick :: DamagePrototype (optional)",
        "name": "damage_per_tick",
        "optional": true,
        "type": "DamagePrototype"
      },
      {
        "comment": "fire_spread_cooldown :: uint8 (optional)",
        "name": "fire_spread_cooldown",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "fire_spread_radius :: float (optional)",
        "name": "fire_spread_radius",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "force_visibility :: ForceCondition (optional)",
        "name": "force_visibility",
        "optional": true,
        "type": "ForceCondition"
      },
      {
        "comment": "selection_box_type :: string (optional)",
        "name": "selection_box_type",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "single_particle :: bool (optional)",
        "name": "single_particle",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "spread_fire_entity :: string (optional)",
        "name": "spread_fire_entity",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "stickers_per_square_meter :: float (optional)",
        "name": "stickers_per_square_meter",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "target_movement_modifier :: float (optional)",
        "name": "target_movement_modifier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "target_movement_modifier_from :: float (optional)",
        "name": "target_movement_modifier_from",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "target_movement_modifier_to :: float (optional)",
        "name": "target_movement_modifier_to",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vehicle_friction_modifier :: float (optional)",
        "name": "vehicle_friction_modifier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vehicle_friction_modifier_from :: float (optional)",
        "name": "vehicle_friction_modifier_from",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vehicle_friction_modifier_to :: float (optional)",
        "name": "vehicle_friction_modifier_to",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vehicle_speed_modifier :: float (optional)",
        "name": "vehicle_speed_modifier",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vehicle_speed_modifier_from :: float (optional)",
        "name": "vehicle_speed_modifier_from",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "vehicle_speed_modifier_to :: float (optional)",
        "name": "vehicle_speed_modifier_to",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "StorageTank",
    "extends": "EntityWithHealth",
    "name": "storage-tank",
    "properties": [
      {
        "comment": "flow_length_in_ticks :: uint32",
        "name": "flow_length_in_ticks",
        "type": "uint32"
      },
      {
        "comment": "fluid_box :: FluidBox",
        "name": "fluid_box",
        "type": "FluidBox"
      },
      {
        "comment": "pictures :: table",
        "name": "pictures",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "window_bounding_box :: BoundingBox",
        "name": "window_bounding_box",
        "type": "BoundingBox"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "scale_info_icons :: bool (optional)",
        "name": "scale_info_icons",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "two_direction_only :: bool (optional)",
        "name": "two_direction_only",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "StraightRail",
    "extends": "Rail",
    "name": "straight-rail",
    "properties": [
      {
        "comment": "bending_type :: string (optional)",
        "name": "bending_type",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "Technology",
    "extends": "PrototypeBase",
    "name": "technology",
    "properties": [
      {
        "comment": "icons, icon, icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "unit :: table",
        "name": "unit",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "effects :: table of Modifier (optional)",
        "name": "effects",
        "optional": true,
        "type": {
          "table_of": "Modifier"
        }
      },
      {
        "comment": "enabled :: bool (optional)",
        "name": "enabled",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "expensive :: Technology data or bool (optional)",
        "name": "expensive",
        "optional": true,
        "type": {
          "or": [
            "Technology data",
            "bool"
          ]
        }
      },
      {
        "comment": "hidden :: bool (optional)",
        "name": "hidden",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "max_level :: uint32 or string (optional)",
        "name": "max_level",
        "optional": true,
        "type": {
          "or": [
            "uint32",
            "string"
          ]
        }
      },
      {
        "comment": "normal :: Technology data or bool (optional)",
        "name": "normal",
        "optional": true,
        "type": {
          "or": [
            "Technology data",
            "bool"
          ]
        }
      },
      {
        "comment": "prerequisites :: table of string (optional)",
        "name": "prerequisites",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "upgrade :: bool (optional)",
        "name": "upgrade",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "visible_when_disabled :: bool (optional)",
        "name": "visible_when_disabled",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Tile",
    "extends": "PrototypeBase",
    "name": "tile",
    "properties": [
      {
        "comment": "collision_mask :: CollisionMask",
        "name": "collision_mask",
        "type": "CollisionMask"
      },
      {
        "comment": "layer :: uint8",
        "name": "layer",
        "type": "uint8"
      },
      {
        "comment": "map_color :: Color",
        "name": "map_color",
        "type": "Color"
      },
      {
        "comment": "pollution_absorption_per_second :: double",
        "name": "pollution_absorption_per_second",
        "type": "double"
      },
      {
        "comment": "variants :: TileTransitions",
        "name": "variants",
        "type": "TileTransitions"
      },
      {
        "comment": "allowed_neighbors :: table of string (optional)",
        "name": "allowed_neighbors",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "autoplace :: AutoplaceSpecification (optional)",
        "name": "autoplace",
        "optional": true,
        "type": "AutoplaceSpecification"
      },
      {
        "comment": "build_sound :: table (optional)",
        "name": "build_sound",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "can_be_part_of_blueprint :: bool (optional)",
        "name": "can_be_part_of_blueprint",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "decorative_removal_probability :: float (optional)",
        "name": "decorative_removal_probability",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "draw_in_water_layer :: bool (optional)",
        "name": "draw_in_water_layer",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "effect :: string (optional)",
        "name": "effect",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "effect_color :: Color (optional)",
        "name": "effect_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "effect_is_opaque :: bool (optional)",
        "name": "effect_is_opaque",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "layer_group :: string (optional)",
        "name": "layer_group",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "minable :: MinableProperties (optional)",
        "name": "minable",
        "optional": true,
        "type": "MinableProperties"
      },
      {
        "comment": "mined_sound :: Sound (optional)",
        "name": "mined_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "needs_correction :: bool (optional)",
        "name": "needs_correction",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "next_direction :: string (optional)",
        "name": "next_direction",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "placeable_by :: ItemToPlace or table of ItemToPlace (optional)",
        "name": "placeable_by",
        "optional": true,
        "type": {
          "or": [
            "ItemToPlace",
            {
              "table_of": "ItemToPlace"
            }
          ]
        }
      },
      {
        "comment": "scorch_mark_color :: Color (optional)",
        "name": "scorch_mark_color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "tint :: Color (optional)",
        "name": "tint",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "transition_merges_with_tile :: string (optional)",
        "name": "transition_merges_with_tile",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "transition_overlay_layer_offset :: uint8 (optional)",
        "name": "transition_overlay_layer_offset",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "transitions :: table of TileTransitions (optional)",
        "name": "transitions",
        "optional": true,
        "type": {
          "table_of": "TileTransitions"
        }
      },
      {
        "comment": "transitions_between_transitions :: table of TileTransitions (optional)",
        "name": "transitions_between_transitions",
        "optional": true,
        "type": {
          "table_of": "TileTransitions"
        }
      },
      {
        "comment": "trigger_effect :: TriggerEffect (optional)",
        "name": "trigger_effect",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "vehicle_friction_modifier :: double (optional)",
        "name": "vehicle_friction_modifier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "walking_sound :: Sound (optional)",
        "name": "walking_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "walking_speed_modifier :: double (optional)",
        "name": "walking_speed_modifier",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "TileEffect",
    "name": "tile-effect",
    "properties": [
      {
        "comment": "animation_scale :: array of one or two float",
        "name": "animation_scale",
        "type": {
          "or": [
            {
              "tuple": {
                "n": 1,
                "of": "float"
              }
            },
            {
              "tuple": {
                "n": 2,
                "of": "float"
              }
            }
          ]
        }
      },
      {
        "comment": "animation_speed :: float",
        "name": "animation_speed",
        "type": "float"
      },
      {
        "comment": "dark_threshold :: array of one or two float",
        "name": "dark_threshold",
        "type": {
          "or": [
            {
              "tuple": {
                "n": 1,
                "of": "float"
              }
            },
            {
              "tuple": {
                "n": 2,
                "of": "float"
              }
            }
          ]
        }
      },
      {
        "comment": "foam_color :: Color",
        "name": "foam_color",
        "type": "Color"
      },
      {
        "comment": "foam_color_multiplier :: float",
        "name": "foam_color_multiplier",
        "type": "float"
      },
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "reflection_threshold :: array of one or two float",
        "name": "reflection_threshold",
        "type": {
          "or": [
            {
              "tuple": {
                "n": 1,
                "of": "float"
              }
            },
            {
              "tuple": {
                "n": 2,
                "of": "float"
              }
            }
          ]
        }
      },
      {
        "comment": "specular_lightness :: Color",
        "name": "specular_lightness",
        "type": "Color"
      },
      {
        "comment": "specular_threshold :: array of one or two float",
        "name": "specular_threshold",
        "type": {
          "or": [
            {
              "tuple": {
                "n": 1,
                "of": "float"
              }
            },
            {
              "tuple": {
                "n": 2,
                "of": "float"
              }
            }
          ]
        }
      },
      {
        "comment": "texture :: Sprite",
        "name": "texture",
        "type": "Sprite"
      },
      {
        "comment": "tick_scale :: float",
        "name": "tick_scale",
        "type": "float"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "far_zoom :: float (optional)",
        "name": "far_zoom",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "near_zoom :: float (optional)",
        "name": "near_zoom",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "TileGhost",
    "extends": "Entity",
    "name": "tile-ghost",
    "properties": []
  },
  {
    "class_name": "Tool",
    "extends": "Item",
    "name": "tool",
    "properties": [
      {
        "comment": "durability :: double (optional)",
        "name": "durability",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "durability_description_key :: string (optional)",
        "name": "durability_description_key",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "durability_description_value :: string (optional)",
        "name": "durability_description_value",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "infinite :: bool (optional)",
        "name": "infinite",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "TrainPathAchievement",
    "extends": "Achievement",
    "name": "train-path-achievement",
    "properties": [
      {
        "comment": "minimum_distance :: double",
        "name": "minimum_distance",
        "type": "double"
      }
    ]
  },
  {
    "class_name": "TrainStop",
    "extends": "EntityWithHealth",
    "name": "train-stop",
    "properties": [
      {
        "comment": "animation_ticks_per_frame :: uint32",
        "name": "animation_ticks_per_frame",
        "type": "uint32"
      },
      {
        "comment": "animations :: Animation4Way (optional)",
        "name": "animations",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "chart_name :: bool (optional)",
        "name": "chart_name",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "circuit_connector_sprites :: table of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_points :: table of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_points",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "color :: Color (optional)",
        "name": "color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "default_train_stopped_signal :: SignalIDConnector (optional)",
        "name": "default_train_stopped_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "drawing_boxes :: table (optional)",
        "name": "drawing_boxes",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "light1 :: table (optional)",
        "name": "light1",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "light2 :: table (optional)",
        "name": "light2",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "rail_overlay_animations :: Animation4Way (optional)",
        "name": "rail_overlay_animations",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "top_animations :: Animation4Way (optional)",
        "name": "top_animations",
        "optional": true,
        "type": "Animation4Way"
      }
    ]
  },
  {
    "class_name": "TransportBelt",
    "extends": "TransportBeltConnectable",
    "name": "transport-belt",
    "properties": [
      {
        "comment": "connector_frame_sprites :: TransportBeltConnectorFrame",
        "name": "connector_frame_sprites",
        "type": "TransportBeltConnectorFrame"
      },
      {
        "comment": "animations :: RotatedAnimation (optional)",
        "name": "animations",
        "optional": true,
        "type": "RotatedAnimation"
      },
      {
        "comment": "belt_animation_set :: table (optional)",
        "name": "belt_animation_set",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "circuit_connector_sprites :: Array of CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": {
          "table_of": "CircuitConnectorSprites"
        }
      },
      {
        "comment": "circuit_wire_connection_point :: Array of WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": {
          "table_of": "WireConnectionPoint"
        }
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "TransportBeltConnectable",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "speed :: double",
        "name": "speed",
        "type": "double"
      },
      {
        "comment": "animation_speed_coefficient :: double (optional)",
        "name": "animation_speed_coefficient",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "belt_animation_set :: table (optional)",
        "name": "belt_animation_set",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "belt_horizontal :: Animation (optional)",
        "name": "belt_horizontal",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "belt_vertical :: Animation (optional)",
        "name": "belt_vertical",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "ending_bottom :: Animation (optional)",
        "name": "ending_bottom",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "ending_patch :: Sprite4Way (optional)",
        "name": "ending_patch",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "ending_side :: Animation (optional)",
        "name": "ending_side",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "ending_top :: Animation (optional)",
        "name": "ending_top",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "ends_with_stopper :: bool (optional)",
        "name": "ends_with_stopper",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "starting_bottom :: Animation (optional)",
        "name": "starting_bottom",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "starting_side :: Animation (optional)",
        "name": "starting_side",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "starting_top :: Animation (optional)",
        "name": "starting_top",
        "optional": true,
        "type": "Animation"
      }
    ]
  },
  {
    "class_name": "Tree",
    "extends": "EntityWithHealth",
    "name": "tree",
    "properties": [
      {
        "comment": "colors :: table of Color (optional)",
        "name": "colors",
        "optional": true,
        "type": {
          "table_of": "Color"
        }
      },
      {
        "comment": "darkness_of_burnt_tree :: float (optional)",
        "name": "darkness_of_burnt_tree",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "pictures :: SpriteVariations (optional)",
        "name": "pictures",
        "optional": true,
        "type": "SpriteVariations"
      },
      {
        "comment": "variation_weights :: table of double (optional)",
        "name": "variation_weights",
        "optional": true,
        "type": {
          "table_of": "double"
        }
      },
      {
        "comment": "variations :: table of TreePrototypeVariation (optional)",
        "name": "variations",
        "optional": true,
        "type": {
          "table_of": "TreePrototypeVariation"
        }
      }
    ]
  },
  {
    "class_name": "TriggerTargetType",
    "name": "trigger-target-type",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "TrivialSmoke",
    "extends": "PrototypeBase",
    "name": "trivial-smoke",
    "properties": [
      {
        "comment": "animation :: Animation",
        "name": "animation",
        "type": "Animation"
      },
      {
        "comment": "duration :: uint32",
        "name": "duration",
        "type": "uint32"
      },
      {
        "comment": "affected_by_wind :: bool (optional)",
        "name": "affected_by_wind",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "color :: Color (optional)",
        "name": "color",
        "optional": true,
        "type": "Color"
      },
      {
        "comment": "cyclic :: bool (optional)",
        "name": "cyclic",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "end_scale :: double (optional)",
        "name": "end_scale",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "fade_away_duration :: uint32 (optional)",
        "name": "fade_away_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "fade_in_duration :: uint32 (optional)",
        "name": "fade_in_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "glow_animation :: Animation (optional)",
        "name": "glow_animation",
        "optional": true,
        "type": "Animation"
      },
      {
        "comment": "glow_fade_away_duration :: uint32 (optional)",
        "name": "glow_fade_away_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "movement_slow_down_factor :: double (optional)",
        "name": "movement_slow_down_factor",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "show_when_smoke_off :: bool (optional)",
        "name": "show_when_smoke_off",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "spread_duration :: uint32 (optional)",
        "name": "spread_duration",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "start_scale :: double (optional)",
        "name": "start_scale",
        "optional": true,
        "type": "double"
      }
    ]
  },
  {
    "class_name": "Turret",
    "extends": "EntityWithHealth",
    "name": "turret",
    "properties": [
      {
        "comment": "attack_parameters :: AttackParameters",
        "name": "attack_parameters",
        "type": "AttackParameters"
      },
      {
        "comment": "call_for_help_radius :: double",
        "name": "call_for_help_radius",
        "type": "double"
      },
      {
        "comment": "folded_animation :: RotatedAnimation4Way",
        "name": "folded_animation",
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "alert_when_attacking :: bool (optional)",
        "name": "alert_when_attacking",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "allow_turning_when_starting_attack :: bool (optional)",
        "name": "allow_turning_when_starting_attack",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "attack_from_start_frame :: bool (optional)",
        "name": "attack_from_start_frame",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "attack_target_mask :: TriggerTargetMask (optional)",
        "name": "attack_target_mask",
        "optional": true,
        "type": "TriggerTargetMask"
      },
      {
        "comment": "attacking_animation :: RotatedAnimation4Way (optional)",
        "name": "attacking_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "attacking_speed :: float (optional)",
        "name": "attacking_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "base_picture :: Animation4Way (optional)",
        "name": "base_picture",
        "optional": true,
        "type": "Animation4Way"
      },
      {
        "comment": "base_picture_render_layer :: RenderLayer (optional)",
        "name": "base_picture_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "base_picture_secondary_draw_order :: uint8 (optional)",
        "name": "base_picture_secondary_draw_order",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "corpse :: string (optional)",
        "name": "corpse",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "dying_sound :: Sound (optional)",
        "name": "dying_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "ending_attack_animation :: RotatedAnimation4Way (optional)",
        "name": "ending_attack_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "ending_attack_speed :: float (optional)",
        "name": "ending_attack_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "energy_glow_animation :: RotatedAnimation4Way (optional)",
        "name": "energy_glow_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "folded_speed :: float (optional)",
        "name": "folded_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "folded_speed_secondary :: float (optional)",
        "name": "folded_speed_secondary",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "folding_animation :: RotatedAnimation4Way (optional)",
        "name": "folding_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "folding_sound :: Sound (optional)",
        "name": "folding_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "folding_speed :: float (optional)",
        "name": "folding_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "glow_light_intensity :: float (optional)",
        "name": "glow_light_intensity",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "gun_animation_render_layer :: RenderLayer (optional)",
        "name": "gun_animation_render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "gun_animation_secondary_draw_order :: uint8 (optional)",
        "name": "gun_animation_secondary_draw_order",
        "optional": true,
        "type": "uint8"
      },
      {
        "comment": "ignore_target_mask :: TriggerTargetMask (optional)",
        "name": "ignore_target_mask",
        "optional": true,
        "type": "TriggerTargetMask"
      },
      {
        "comment": "integration :: Sprite (optional)",
        "name": "integration",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "prepare_range :: double (optional)",
        "name": "prepare_range",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "prepared_alternative_animation :: RotatedAnimation4Way (optional)",
        "name": "prepared_alternative_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "prepared_alternative_chance :: float (optional)",
        "name": "prepared_alternative_chance",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "prepared_alternative_sound :: Sound (optional)",
        "name": "prepared_alternative_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "prepared_alternative_speed :: float (optional)",
        "name": "prepared_alternative_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "prepared_alternative_speed_secondary :: float (optional)",
        "name": "prepared_alternative_speed_secondary",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "prepared_animation :: RotatedAnimation4Way (optional)",
        "name": "prepared_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "prepared_sound :: Sound (optional)",
        "name": "prepared_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "prepared_speed :: float (optional)",
        "name": "prepared_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "prepared_speed_secondary :: float (optional)",
        "name": "prepared_speed_secondary",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "preparing_animation :: RotatedAnimation4Way (optional)",
        "name": "preparing_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "preparing_sound :: Sound (optional)",
        "name": "preparing_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "preparing_speed :: float (optional)",
        "name": "preparing_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "random_animation_offset :: bool (optional)",
        "name": "random_animation_offset",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "rotation_speed :: float (optional)",
        "name": "rotation_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "secondary_animation :: bool (optional)",
        "name": "secondary_animation",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "shoot_in_prepare_state :: bool (optional)",
        "name": "shoot_in_prepare_state",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "starting_attack_animation :: RotatedAnimation4Way (optional)",
        "name": "starting_attack_animation",
        "optional": true,
        "type": "RotatedAnimation4Way"
      },
      {
        "comment": "starting_attack_sound :: Sound (optional)",
        "name": "starting_attack_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "starting_attack_speed :: float (optional)",
        "name": "starting_attack_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "turret_base_has_direction :: bool (optional)",
        "name": "turret_base_has_direction",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "Tutorial",
    "extends": "PrototypeBase",
    "name": "tutorial",
    "properties": [
      {
        "comment": "icons, icon, icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "scenario :: string",
        "name": "scenario",
        "type": "string"
      },
      {
        "comment": "trigger :: table",
        "name": "trigger",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "dependencies :: table of string (optional)",
        "name": "dependencies",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "locked_when_dependencies_not_completed :: bool (optional)",
        "name": "locked_when_dependencies_not_completed",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "related_items :: table of string (optional)",
        "name": "related_items",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "unlocked :: bool (optional)",
        "name": "unlocked",
        "optional": true,
        "type": "bool"
      }
    ]
  },
  {
    "class_name": "UndergroundBelt",
    "extends": "TransportBeltConnectable",
    "name": "underground-belt",
    "properties": [
      {
        "comment": "max_distance :: uint8",
        "name": "max_distance",
        "type": "uint8"
      },
      {
        "comment": "structure :: table",
        "name": "structure",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "underground_sprite :: Sprite",
        "name": "underground_sprite",
        "type": "Sprite"
      },
      {
        "comment": "underground_remove_belts_sprite :: Sprite (optional)",
        "name": "underground_remove_belts_sprite",
        "optional": true,
        "type": "Sprite"
      }
    ]
  },
  {
    "class_name": "Unit",
    "extends": "EntityWithHealth",
    "name": "unit",
    "properties": [
      {
        "comment": "attack_parameters :: AttackParameters",
        "name": "attack_parameters",
        "type": "AttackParameters"
      },
      {
        "comment": "distance_per_frame :: float",
        "name": "distance_per_frame",
        "type": "float"
      },
      {
        "comment": "distraction_cooldown :: uint32",
        "name": "distraction_cooldown",
        "type": "uint32"
      },
      {
        "comment": "movement_speed :: float",
        "name": "movement_speed",
        "type": "float"
      },
      {
        "comment": "pollution_to_join_attack :: float",
        "name": "pollution_to_join_attack",
        "type": "float"
      },
      {
        "comment": "run_animation :: RotatedAnimation",
        "name": "run_animation",
        "type": "RotatedAnimation"
      },
      {
        "comment": "vision_distance :: double",
        "name": "vision_distance",
        "type": "double"
      },
      {
        "comment": "affected_by_tiles :: bool (optional)",
        "name": "affected_by_tiles",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "ai_settings :: UnitAISettings (optional)",
        "name": "ai_settings",
        "optional": true,
        "type": "UnitAISettings"
      },
      {
        "comment": "alternative_attacking_frame_sequence :: table (optional)",
        "name": "alternative_attacking_frame_sequence",
        "optional": true,
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "can_open_gates :: bool (optional)",
        "name": "can_open_gates",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "dying_sound :: Sound (optional)",
        "name": "dying_sound",
        "optional": true,
        "type": "Sound"
      },
      {
        "comment": "has_belt_immunity :: bool (optional)",
        "name": "has_belt_immunity",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "light :: LightDefinition (optional)",
        "name": "light",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "max_pursue_distance :: double (optional)",
        "name": "max_pursue_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "min_pursue_time :: uint32 (optional)",
        "name": "min_pursue_time",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "move_while_shooting :: bool (optional)",
        "name": "move_while_shooting",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "radar_range :: uint32 (optional)",
        "name": "radar_range",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "render_layer :: RenderLayer (optional)",
        "name": "render_layer",
        "optional": true,
        "type": "RenderLayer"
      },
      {
        "comment": "rotation_speed :: float (optional)",
        "name": "rotation_speed",
        "optional": true,
        "type": "float"
      },
      {
        "comment": "running_sound_animation_positions :: table (array) of float (optional)",
        "name": "running_sound_animation_positions",
        "optional": true,
        "type": {
          "table_of": "float"
        }
      },
      {
        "comment": "spawning_time_modifier :: double (optional)",
        "name": "spawning_time_modifier",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "walking_sound :: Sound (optional)",
        "name": "walking_sound",
        "optional": true,
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "UpgradeItem",
    "extends": "SelectionTool",
    "name": "upgrade-item",
    "properties": [
      {
        "comment": "mapper_count :: ItemStackIndex (optional)",
        "name": "mapper_count",
        "optional": true,
        "type": "ItemStackIndex"
      }
    ]
  },
  {
    "class_name": "UtilityConstants",
    "extends": "PrototypeBase",
    "name": "utility-constants",
    "properties": [
      {
        "comment": "artillery_range_visualization_color :: Color",
        "name": "artillery_range_visualization_color",
        "type": "Color"
      },
      {
        "comment": "bonus_gui_ordering :: table",
        "name": "bonus_gui_ordering",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "building_buildable_tint :: Color",
        "name": "building_buildable_tint",
        "type": "Color"
      },
      {
        "comment": "building_buildable_too_far_tint :: Color",
        "name": "building_buildable_too_far_tint",
        "type": "Color"
      },
      {
        "comment": "building_ignorable_tint :: Color",
        "name": "building_ignorable_tint",
        "type": "Color"
      },
      {
        "comment": "building_no_tint :: Color",
        "name": "building_no_tint",
        "type": "Color"
      },
      {
        "comment": "building_not_buildable_tint :: Color",
        "name": "building_not_buildable_tint",
        "type": "Color"
      },
      {
        "comment": "capsule_range_visualization_color :: Color",
        "name": "capsule_range_visualization_color",
        "type": "Color"
      },
      {
        "comment": "chart :: table",
        "name": "chart",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "clipboard_history_size :: uint32",
        "name": "clipboard_history_size",
        "type": "uint32"
      },
      {
        "comment": "color_filters :: table (array) of tables",
        "name": "color_filters",
        "type": {
          "table_of": "tables"
        }
      },
      {
        "comment": "daytime_color_lookup :: DaytimeColorLookupTable",
        "name": "daytime_color_lookup",
        "type": "DaytimeColorLookupTable"
      },
      {
        "comment": "deconstruct_mark_tint :: Color",
        "name": "deconstruct_mark_tint",
        "type": "Color"
      },
      {
        "comment": "default_alert_icon_scale :: float",
        "name": "default_alert_icon_scale",
        "type": "float"
      },
      {
        "comment": "default_enemy_force_color :: Color",
        "name": "default_enemy_force_color",
        "type": "Color"
      },
      {
        "comment": "default_other_force_color :: Color",
        "name": "default_other_force_color",
        "type": "Color"
      },
      {
        "comment": "default_player_force_color :: Color",
        "name": "default_player_force_color",
        "type": "Color"
      },
      {
        "comment": "default_scorch_mark_color :: Color",
        "name": "default_scorch_mark_color",
        "type": "Color"
      },
      {
        "comment": "disabled_recipe_slot_background_tint :: Color",
        "name": "disabled_recipe_slot_background_tint",
        "type": "Color"
      },
      {
        "comment": "disabled_recipe_slot_tint :: Color",
        "name": "disabled_recipe_slot_tint",
        "type": "Color"
      },
      {
        "comment": "enabled_recipe_slot_tint :: Color",
        "name": "enabled_recipe_slot_tint",
        "type": "Color"
      },
      {
        "comment": "entity_button_background_color :: Color",
        "name": "entity_button_background_color",
        "type": "Color"
      },
      {
        "comment": "entity_renderer_search_box_limits :: table",
        "name": "entity_renderer_search_box_limits",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "equipment_default_background_border_color :: Color",
        "name": "equipment_default_background_border_color",
        "type": "Color"
      },
      {
        "comment": "equipment_default_background_color :: Color",
        "name": "equipment_default_background_color",
        "type": "Color"
      },
      {
        "comment": "equipment_default_grabbed_background_color :: Color",
        "name": "equipment_default_grabbed_background_color",
        "type": "Color"
      },
      {
        "comment": "filter_outline_color :: Color",
        "name": "filter_outline_color",
        "type": "Color"
      },
      {
        "comment": "forced_enabled_recipe_slot_background_tint :: Color",
        "name": "forced_enabled_recipe_slot_background_tint",
        "type": "Color"
      },
      {
        "comment": "ghost_tint :: Color",
        "name": "ghost_tint",
        "type": "Color"
      },
      {
        "comment": "icon_shadow_color :: Color",
        "name": "icon_shadow_color",
        "type": "Color"
      },
      {
        "comment": "icon_shadow_inset :: float",
        "name": "icon_shadow_inset",
        "type": "float"
      },
      {
        "comment": "icon_shadow_radius :: float",
        "name": "icon_shadow_radius",
        "type": "float"
      },
      {
        "comment": "icon_shadow_sharpness :: float",
        "name": "icon_shadow_sharpness",
        "type": "float"
      },
      {
        "comment": "item_outline_color :: Color",
        "name": "item_outline_color",
        "type": "Color"
      },
      {
        "comment": "item_outline_inset :: float",
        "name": "item_outline_inset",
        "type": "float"
      },
      {
        "comment": "item_outline_radius :: float",
        "name": "item_outline_radius",
        "type": "float"
      },
      {
        "comment": "item_outline_sharpness :: float",
        "name": "item_outline_sharpness",
        "type": "float"
      },
      {
        "comment": "light_renderer_search_distance_limit :: uint8",
        "name": "light_renderer_search_distance_limit",
        "type": "uint8"
      },
      {
        "comment": "main_menu_background_image_location :: FileName",
        "name": "main_menu_background_image_location",
        "type": "FileName"
      },
      {
        "comment": "manual_rail_building_reach_modifier :: double",
        "name": "manual_rail_building_reach_modifier",
        "type": "double"
      },
      {
        "comment": "map_editor :: table",
        "name": "map_editor",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "max_terrain_building_size :: uint8",
        "name": "max_terrain_building_size",
        "type": "uint8"
      },
      {
        "comment": "medium_area_size :: float",
        "name": "medium_area_size",
        "type": "float"
      },
      {
        "comment": "missing_preview_sprite_location :: FileName",
        "name": "missing_preview_sprite_location",
        "type": "FileName"
      },
      {
        "comment": "player_colors :: table (array) of tables",
        "name": "player_colors",
        "type": {
          "table_of": "tables"
        }
      },
      {
        "comment": "rail_segment_colors :: table (array) of Color",
        "name": "rail_segment_colors",
        "type": {
          "table_of": "Color"
        }
      },
      {
        "comment": "recipe_step_limit :: uint32",
        "name": "recipe_step_limit",
        "type": "uint32"
      },
      {
        "comment": "script_command_console_chat_color :: Color",
        "name": "script_command_console_chat_color",
        "type": "Color"
      },
      {
        "comment": "server_command_console_chat_color :: Color",
        "name": "server_command_console_chat_color",
        "type": "Color"
      },
      {
        "comment": "small_area_size :: float",
        "name": "small_area_size",
        "type": "float"
      },
      {
        "comment": "tile_ghost_tint :: Color",
        "name": "tile_ghost_tint",
        "type": "Color"
      },
      {
        "comment": "train_inactivity_wait_condition_default :: uint32",
        "name": "train_inactivity_wait_condition_default",
        "type": "uint32"
      },
      {
        "comment": "train_path_finding :: table",
        "name": "train_path_finding",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "train_temporary_stop_wait_time :: uint32",
        "name": "train_temporary_stop_wait_time",
        "type": "uint32"
      },
      {
        "comment": "train_time_wait_condition_default :: uint32",
        "name": "train_time_wait_condition_default",
        "type": "uint32"
      },
      {
        "comment": "tree_leaf_distortion_distortion_far :: vector",
        "name": "tree_leaf_distortion_distortion_far",
        "type": "vector"
      },
      {
        "comment": "tree_leaf_distortion_distortion_near :: vector",
        "name": "tree_leaf_distortion_distortion_near",
        "type": "vector"
      },
      {
        "comment": "tree_leaf_distortion_speed_far :: vector",
        "name": "tree_leaf_distortion_speed_far",
        "type": "vector"
      },
      {
        "comment": "tree_leaf_distortion_speed_near :: vector",
        "name": "tree_leaf_distortion_speed_near",
        "type": "vector"
      },
      {
        "comment": "tree_leaf_distortion_strength_far :: vector",
        "name": "tree_leaf_distortion_strength_far",
        "type": "vector"
      },
      {
        "comment": "tree_leaf_distortion_strength_near :: vector",
        "name": "tree_leaf_distortion_strength_near",
        "type": "vector"
      },
      {
        "comment": "tree_shadow_roughness :: float",
        "name": "tree_shadow_roughness",
        "type": "float"
      },
      {
        "comment": "tree_shadow_speed :: float",
        "name": "tree_shadow_speed",
        "type": "float"
      },
      {
        "comment": "turret_range_visualization_color :: Color",
        "name": "turret_range_visualization_color",
        "type": "Color"
      },
      {
        "comment": "unit_group_pathfind_resolution :: int8",
        "name": "unit_group_pathfind_resolution",
        "type": "int8"
      },
      {
        "comment": "zoom_to_world_can_use_nightvision :: bool",
        "name": "zoom_to_world_can_use_nightvision",
        "type": "bool"
      },
      {
        "comment": "zoom_to_world_daytime_color_lookup :: DaytimeColorLookupTable",
        "name": "zoom_to_world_daytime_color_lookup",
        "type": "DaytimeColorLookupTable"
      },
      {
        "comment": "zoom_to_world_effect_strength :: float",
        "name": "zoom_to_world_effect_strength",
        "type": "float"
      },
      {
        "comment": "default_alert_icon_scale_by_type :: table (array) of string to float (optional)",
        "name": "default_alert_icon_scale_by_type",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "default_alert_icon_shift_by_type :: table (array) of string to vector (optional)",
        "name": "default_alert_icon_shift_by_type",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      },
      {
        "comment": "default_trigger_target_mask_by_type :: table (array) of string to TriggerTargetMask (optional)",
        "name": "default_trigger_target_mask_by_type",
        "optional": true,
        "type": {
          "table_of": "string"
        }
      }
    ]
  },
  {
    "class_name": "UtilitySounds",
    "extends": "PrototypeBase",
    "name": "utility-sounds",
    "properties": [
      {
        "comment": "achievement_unlocked :: Sound",
        "name": "achievement_unlocked",
        "type": "Sound"
      },
      {
        "comment": "alert_destroyed :: Sound",
        "name": "alert_destroyed",
        "type": "Sound"
      },
      {
        "comment": "armor_insert :: Sound",
        "name": "armor_insert",
        "type": "Sound"
      },
      {
        "comment": "armor_remove :: Sound",
        "name": "armor_remove",
        "type": "Sound"
      },
      {
        "comment": "axe_fighting :: Sound",
        "name": "axe_fighting",
        "type": "Sound"
      },
      {
        "comment": "axe_mining_ore :: Sound",
        "name": "axe_mining_ore",
        "type": "Sound"
      },
      {
        "comment": "build_big :: Sound",
        "name": "build_big",
        "type": "Sound"
      },
      {
        "comment": "build_medium :: Sound",
        "name": "build_medium",
        "type": "Sound"
      },
      {
        "comment": "build_small :: Sound",
        "name": "build_small",
        "type": "Sound"
      },
      {
        "comment": "cannot_build :: Sound",
        "name": "cannot_build",
        "type": "Sound"
      },
      {
        "comment": "console_message :: Sound",
        "name": "console_message",
        "type": "Sound"
      },
      {
        "comment": "crafting_finished :: Sound",
        "name": "crafting_finished",
        "type": "Sound"
      },
      {
        "comment": "deconstruct_big :: Sound",
        "name": "deconstruct_big",
        "type": "Sound"
      },
      {
        "comment": "deconstruct_medium :: Sound",
        "name": "deconstruct_medium",
        "type": "Sound"
      },
      {
        "comment": "deconstruct_robot :: Sound",
        "name": "deconstruct_robot",
        "type": "Sound"
      },
      {
        "comment": "deconstruct_small :: Sound",
        "name": "deconstruct_small",
        "type": "Sound"
      },
      {
        "comment": "default_manual_repair :: Sound",
        "name": "default_manual_repair",
        "type": "Sound"
      },
      {
        "comment": "game_lost :: Sound",
        "name": "game_lost",
        "type": "Sound"
      },
      {
        "comment": "game_won :: Sound",
        "name": "game_won",
        "type": "Sound"
      },
      {
        "comment": "gui_click :: Sound",
        "name": "gui_click",
        "type": "Sound"
      },
      {
        "comment": "inventory_move :: Sound",
        "name": "inventory_move",
        "type": "Sound"
      },
      {
        "comment": "list_box_click :: Sound",
        "name": "list_box_click",
        "type": "Sound"
      },
      {
        "comment": "metal_walking_sound :: Sound",
        "name": "metal_walking_sound",
        "type": "Sound"
      },
      {
        "comment": "mining_wood :: Sound",
        "name": "mining_wood",
        "type": "Sound"
      },
      {
        "comment": "new_objective :: Sound",
        "name": "new_objective",
        "type": "Sound"
      },
      {
        "comment": "picked_up_item :: Sound",
        "name": "picked_up_item",
        "type": "Sound"
      },
      {
        "comment": "research_completed :: Sound",
        "name": "research_completed",
        "type": "Sound"
      },
      {
        "comment": "rotated_big :: Sound",
        "name": "rotated_big",
        "type": "Sound"
      },
      {
        "comment": "rotated_medium :: Sound",
        "name": "rotated_medium",
        "type": "Sound"
      },
      {
        "comment": "rotated_small :: Sound",
        "name": "rotated_small",
        "type": "Sound"
      },
      {
        "comment": "scenario_message :: Sound",
        "name": "scenario_message",
        "type": "Sound"
      },
      {
        "comment": "smart_pipette :: Sound",
        "name": "smart_pipette",
        "type": "Sound"
      },
      {
        "comment": "switch_gun :: Sound",
        "name": "switch_gun",
        "type": "Sound"
      },
      {
        "comment": "tutorial_notice :: Sound",
        "name": "tutorial_notice",
        "type": "Sound"
      },
      {
        "comment": "wire_connect_pole :: Sound",
        "name": "wire_connect_pole",
        "type": "Sound"
      },
      {
        "comment": "wire_disconnect :: Sound",
        "name": "wire_disconnect",
        "type": "Sound"
      },
      {
        "comment": "wire_pickup :: Sound",
        "name": "wire_pickup",
        "type": "Sound"
      }
    ]
  },
  {
    "class_name": "UtilitySprites",
    "extends": "PrototypeBase",
    "name": "utility-sprites",
    "properties": [
      {
        "comment": "achievement_label_failed :: Sprite",
        "name": "achievement_label_failed",
        "type": "Sprite"
      },
      {
        "comment": "achievement_label_locked :: Sprite",
        "name": "achievement_label_locked",
        "type": "Sprite"
      },
      {
        "comment": "achievement_label_unlocked :: Sprite",
        "name": "achievement_label_unlocked",
        "type": "Sprite"
      },
      {
        "comment": "achievement_label_unlocked_off :: Sprite",
        "name": "achievement_label_unlocked_off",
        "type": "Sprite"
      },
      {
        "comment": "add :: Sprite",
        "name": "add",
        "type": "Sprite"
      },
      {
        "comment": "ammo_damage_modifier_icon :: Sprite",
        "name": "ammo_damage_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "ammo_icon :: Sprite",
        "name": "ammo_icon",
        "type": "Sprite"
      },
      {
        "comment": "and_or :: Sprite",
        "name": "and_or",
        "type": "Sprite"
      },
      {
        "comment": "area_icon :: Sprite",
        "name": "area_icon",
        "type": "Sprite"
      },
      {
        "comment": "arrow_button :: Animation",
        "name": "arrow_button",
        "type": "Animation"
      },
      {
        "comment": "artillery_range_modifier_icon :: Sprite",
        "name": "artillery_range_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "auto_character_logistic_trash_slots_modifier_icon :: Sprite",
        "name": "auto_character_logistic_trash_slots_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "bar_gray_pip :: Sprite",
        "name": "bar_gray_pip",
        "type": "Sprite"
      },
      {
        "comment": "battery :: Sprite",
        "name": "battery",
        "type": "Sprite"
      },
      {
        "comment": "battery_indicator :: Sprite",
        "name": "battery_indicator",
        "type": "Sprite"
      },
      {
        "comment": "battery_indicator_bar :: Sprite",
        "name": "battery_indicator_bar",
        "type": "Sprite"
      },
      {
        "comment": "brush_circle_shape :: Sprite",
        "name": "brush_circle_shape",
        "type": "Sprite"
      },
      {
        "comment": "brush_icon :: Sprite",
        "name": "brush_icon",
        "type": "Sprite"
      },
      {
        "comment": "brush_square_shape :: Sprite",
        "name": "brush_square_shape",
        "type": "Sprite"
      },
      {
        "comment": "cable_editor_icon :: Sprite",
        "name": "cable_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "center :: Sprite",
        "name": "center",
        "type": "Sprite"
      },
      {
        "comment": "change_recipe :: Sprite",
        "name": "change_recipe",
        "type": "Sprite"
      },
      {
        "comment": "character_additional_mining_categories_modifier_icon :: Sprite",
        "name": "character_additional_mining_categories_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_build_distance_modifier_icon :: Sprite",
        "name": "character_build_distance_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_crafting_speed_modifier_icon :: Sprite",
        "name": "character_crafting_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_health_bonus_modifier_icon :: Sprite",
        "name": "character_health_bonus_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_inventory_slots_bonus_modifier_icon :: Sprite",
        "name": "character_inventory_slots_bonus_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_item_drop_distance_modifier_icon :: Sprite",
        "name": "character_item_drop_distance_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_item_pickup_distance_modifier_icon :: Sprite",
        "name": "character_item_pickup_distance_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_logistic_requests_modifier_icon :: Sprite",
        "name": "character_logistic_requests_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_logistic_slots_modifier_icon :: Sprite",
        "name": "character_logistic_slots_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_logistic_trash_slots_modifier_icon :: Sprite",
        "name": "character_logistic_trash_slots_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_loot_pickup_distance_modifier_icon :: Sprite",
        "name": "character_loot_pickup_distance_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_mining_speed_modifier_icon :: Sprite",
        "name": "character_mining_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_reach_distance_modifier_icon :: Sprite",
        "name": "character_reach_distance_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_resource_reach_distance_modifier_icon :: Sprite",
        "name": "character_resource_reach_distance_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "character_running_speed_modifier_icon :: Sprite",
        "name": "character_running_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "check_mark :: Sprite",
        "name": "check_mark",
        "type": "Sprite"
      },
      {
        "comment": "check_mark_white :: Sprite",
        "name": "check_mark_white",
        "type": "Sprite"
      },
      {
        "comment": "circuit_network_panel_black :: Sprite",
        "name": "circuit_network_panel_black",
        "type": "Sprite"
      },
      {
        "comment": "circuit_network_panel_white :: Sprite",
        "name": "circuit_network_panel_white",
        "type": "Sprite"
      },
      {
        "comment": "cliff_editor_icon :: Sprite",
        "name": "cliff_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "clock :: Sprite",
        "name": "clock",
        "type": "Sprite"
      },
      {
        "comment": "clone :: Sprite",
        "name": "clone",
        "type": "Sprite"
      },
      {
        "comment": "clone_editor_icon :: Sprite",
        "name": "clone_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "close_black :: Sprite",
        "name": "close_black",
        "type": "Sprite"
      },
      {
        "comment": "close_fat :: Sprite",
        "name": "close_fat",
        "type": "Sprite"
      },
      {
        "comment": "close_white :: Sprite",
        "name": "close_white",
        "type": "Sprite"
      },
      {
        "comment": "clouds :: Animation",
        "name": "clouds",
        "type": "Animation"
      },
      {
        "comment": "collapse :: Sprite",
        "name": "collapse",
        "type": "Sprite"
      },
      {
        "comment": "collapse_dark :: Sprite",
        "name": "collapse_dark",
        "type": "Sprite"
      },
      {
        "comment": "color_effect :: Sprite",
        "name": "color_effect",
        "type": "Sprite"
      },
      {
        "comment": "color_picker :: Sprite",
        "name": "color_picker",
        "type": "Sprite"
      },
      {
        "comment": "confirm_slot :: Sprite",
        "name": "confirm_slot",
        "type": "Sprite"
      },
      {
        "comment": "construction_radius_visualization :: Sprite",
        "name": "construction_radius_visualization",
        "type": "Sprite"
      },
      {
        "comment": "copper_wire :: Sprite",
        "name": "copper_wire",
        "type": "Sprite"
      },
      {
        "comment": "covered_chunk :: Sprite",
        "name": "covered_chunk",
        "type": "Sprite"
      },
      {
        "comment": "crafting_machine_recipe_not_unlocked :: Sprite",
        "name": "crafting_machine_recipe_not_unlocked",
        "type": "Sprite"
      },
      {
        "comment": "cursor_box :: table",
        "name": "cursor_box",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "cursor_icon :: Sprite",
        "name": "cursor_icon",
        "type": "Sprite"
      },
      {
        "comment": "custom_tag_in_map_view :: Sprite",
        "name": "custom_tag_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "danger_icon :: Sprite",
        "name": "danger_icon",
        "type": "Sprite"
      },
      {
        "comment": "deconstruction_mark :: Sprite",
        "name": "deconstruction_mark",
        "type": "Sprite"
      },
      {
        "comment": "deconstruction_time_to_live_modifier_icon :: Sprite",
        "name": "deconstruction_time_to_live_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "decorative_editor_icon :: Sprite",
        "name": "decorative_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "default_ammo_damage_modifier_icon :: Sprite",
        "name": "default_ammo_damage_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "default_gun_speed_modifier_icon :: Sprite",
        "name": "default_gun_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "default_turret_attack_modifier_icon :: Sprite",
        "name": "default_turret_attack_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "destroyed_icon :: Sprite",
        "name": "destroyed_icon",
        "type": "Sprite"
      },
      {
        "comment": "down_arrow :: Sprite",
        "name": "down_arrow",
        "type": "Sprite"
      },
      {
        "comment": "downloaded :: Sprite",
        "name": "downloaded",
        "type": "Sprite"
      },
      {
        "comment": "downloaded_white :: Sprite",
        "name": "downloaded_white",
        "type": "Sprite"
      },
      {
        "comment": "downloading :: Sprite",
        "name": "downloading",
        "type": "Sprite"
      },
      {
        "comment": "downloading_white :: Sprite",
        "name": "downloading_white",
        "type": "Sprite"
      },
      {
        "comment": "dropdown :: Sprite",
        "name": "dropdown",
        "type": "Sprite"
      },
      {
        "comment": "editor_pause :: Sprite",
        "name": "editor_pause",
        "type": "Sprite"
      },
      {
        "comment": "editor_play :: Sprite",
        "name": "editor_play",
        "type": "Sprite"
      },
      {
        "comment": "editor_selection :: Sprite",
        "name": "editor_selection",
        "type": "Sprite"
      },
      {
        "comment": "editor_speed_down :: Sprite",
        "name": "editor_speed_down",
        "type": "Sprite"
      },
      {
        "comment": "editor_speed_up :: Sprite",
        "name": "editor_speed_up",
        "type": "Sprite"
      },
      {
        "comment": "electricity_icon :: Sprite",
        "name": "electricity_icon",
        "type": "Sprite"
      },
      {
        "comment": "electricity_icon_unplugged :: Sprite",
        "name": "electricity_icon_unplugged",
        "type": "Sprite"
      },
      {
        "comment": "enemy_force_icon :: Sprite",
        "name": "enemy_force_icon",
        "type": "Sprite"
      },
      {
        "comment": "enter :: Sprite",
        "name": "enter",
        "type": "Sprite"
      },
      {
        "comment": "entity_editor_icon :: Sprite",
        "name": "entity_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "entity_info_dark_background :: Sprite",
        "name": "entity_info_dark_background",
        "type": "Sprite"
      },
      {
        "comment": "equipment_collision :: Sprite",
        "name": "equipment_collision",
        "type": "Sprite"
      },
      {
        "comment": "equipment_grid :: Sprite",
        "name": "equipment_grid",
        "type": "Sprite"
      },
      {
        "comment": "equipment_slot :: Sprite",
        "name": "equipment_slot",
        "type": "Sprite"
      },
      {
        "comment": "expand :: Sprite",
        "name": "expand",
        "type": "Sprite"
      },
      {
        "comment": "expand_dark :: Sprite",
        "name": "expand_dark",
        "type": "Sprite"
      },
      {
        "comment": "expand_dots :: Sprite",
        "name": "expand_dots",
        "type": "Sprite"
      },
      {
        "comment": "expand_dots_white :: Sprite",
        "name": "expand_dots_white",
        "type": "Sprite"
      },
      {
        "comment": "explosion_chart_visualization :: Animation",
        "name": "explosion_chart_visualization",
        "type": "Animation"
      },
      {
        "comment": "export :: Sprite",
        "name": "export",
        "type": "Sprite"
      },
      {
        "comment": "export_slot :: Sprite",
        "name": "export_slot",
        "type": "Sprite"
      },
      {
        "comment": "favourite_server_icon :: Sprite",
        "name": "favourite_server_icon",
        "type": "Sprite"
      },
      {
        "comment": "fluid_icon :: Sprite",
        "name": "fluid_icon",
        "type": "Sprite"
      },
      {
        "comment": "fluid_indication_arrow :: Sprite",
        "name": "fluid_indication_arrow",
        "type": "Sprite"
      },
      {
        "comment": "fluid_indication_arrow_both_ways :: Sprite",
        "name": "fluid_indication_arrow_both_ways",
        "type": "Sprite"
      },
      {
        "comment": "follower_robot_lifetime_modifier_icon :: Sprite",
        "name": "follower_robot_lifetime_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "force_editor_icon :: Sprite",
        "name": "force_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "fuel_icon :: Sprite",
        "name": "fuel_icon",
        "type": "Sprite"
      },
      {
        "comment": "game_stopped_visualization :: Sprite",
        "name": "game_stopped_visualization",
        "type": "Sprite"
      },
      {
        "comment": "ghost_bar_pip :: Sprite",
        "name": "ghost_bar_pip",
        "type": "Sprite"
      },
      {
        "comment": "ghost_cursor :: Sprite",
        "name": "ghost_cursor",
        "type": "Sprite"
      },
      {
        "comment": "ghost_time_to_live_modifier_icon :: Sprite",
        "name": "ghost_time_to_live_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "give_item_modifier_icon :: Sprite",
        "name": "give_item_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "go_to_arrow :: Sprite",
        "name": "go_to_arrow",
        "type": "Sprite"
      },
      {
        "comment": "gps_map_icon :: Sprite",
        "name": "gps_map_icon",
        "type": "Sprite"
      },
      {
        "comment": "green_circle :: Sprite",
        "name": "green_circle",
        "type": "Sprite"
      },
      {
        "comment": "green_dot :: Sprite",
        "name": "green_dot",
        "type": "Sprite"
      },
      {
        "comment": "green_wire :: Sprite",
        "name": "green_wire",
        "type": "Sprite"
      },
      {
        "comment": "green_wire_hightlight :: Sprite",
        "name": "green_wire_hightlight",
        "type": "Sprite"
      },
      {
        "comment": "grey_placement_indicator_leg :: Sprite",
        "name": "grey_placement_indicator_leg",
        "type": "Sprite"
      },
      {
        "comment": "grey_rail_signal_placement_indicator :: Sprite",
        "name": "grey_rail_signal_placement_indicator",
        "type": "Sprite"
      },
      {
        "comment": "gun_speed_modifier_icon :: Sprite",
        "name": "gun_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "hand :: Sprite",
        "name": "hand",
        "type": "Sprite"
      },
      {
        "comment": "health_bar_green_pip :: Sprite",
        "name": "health_bar_green_pip",
        "type": "Sprite"
      },
      {
        "comment": "health_bar_red_pip :: Sprite",
        "name": "health_bar_red_pip",
        "type": "Sprite"
      },
      {
        "comment": "health_bar_yellow_pip :: Sprite",
        "name": "health_bar_yellow_pip",
        "type": "Sprite"
      },
      {
        "comment": "heat_exchange_indication :: Sprite",
        "name": "heat_exchange_indication",
        "type": "Sprite"
      },
      {
        "comment": "hint_arrow_down :: Sprite",
        "name": "hint_arrow_down",
        "type": "Sprite"
      },
      {
        "comment": "hint_arrow_left :: Sprite",
        "name": "hint_arrow_left",
        "type": "Sprite"
      },
      {
        "comment": "hint_arrow_right :: Sprite",
        "name": "hint_arrow_right",
        "type": "Sprite"
      },
      {
        "comment": "hint_arrow_up :: Sprite",
        "name": "hint_arrow_up",
        "type": "Sprite"
      },
      {
        "comment": "import :: Sprite",
        "name": "import",
        "type": "Sprite"
      },
      {
        "comment": "import_slot :: Sprite",
        "name": "import_slot",
        "type": "Sprite"
      },
      {
        "comment": "indication_arrow :: Sprite",
        "name": "indication_arrow",
        "type": "Sprite"
      },
      {
        "comment": "indication_line :: Sprite",
        "name": "indication_line",
        "type": "Sprite"
      },
      {
        "comment": "inserter_stack_size_bonus_modifier_icon :: Sprite",
        "name": "inserter_stack_size_bonus_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "item_editor_icon :: Sprite",
        "name": "item_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "laboratory_productivity_modifier_icon :: Sprite",
        "name": "laboratory_productivity_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "laboratory_speed_modifier_icon :: Sprite",
        "name": "laboratory_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "left_arrow :: Sprite",
        "name": "left_arrow",
        "type": "Sprite"
      },
      {
        "comment": "light_cone :: Sprite",
        "name": "light_cone",
        "type": "Sprite"
      },
      {
        "comment": "light_medium :: Sprite",
        "name": "light_medium",
        "type": "Sprite"
      },
      {
        "comment": "light_small :: Sprite",
        "name": "light_small",
        "type": "Sprite"
      },
      {
        "comment": "line_icon :: Sprite",
        "name": "line_icon",
        "type": "Sprite"
      },
      {
        "comment": "logistic_network_panel_black :: Sprite",
        "name": "logistic_network_panel_black",
        "type": "Sprite"
      },
      {
        "comment": "logistic_network_panel_white :: Sprite",
        "name": "logistic_network_panel_white",
        "type": "Sprite"
      },
      {
        "comment": "logistic_radius_visualization :: Sprite",
        "name": "logistic_radius_visualization",
        "type": "Sprite"
      },
      {
        "comment": "lua_snippet_tool_icon :: Sprite",
        "name": "lua_snippet_tool_icon",
        "type": "Sprite"
      },
      {
        "comment": "map :: Sprite",
        "name": "map",
        "type": "Sprite"
      },
      {
        "comment": "map_exchange_string :: Sprite",
        "name": "map_exchange_string",
        "type": "Sprite"
      },
      {
        "comment": "max_failed_attempts_per_tick_per_construction_queue_modifier_icon :: Sprite",
        "name": "max_failed_attempts_per_tick_per_construction_queue_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "max_successful_attempts_per_tick_per_construction_queue_modifier_icon :: Sprite",
        "name": "max_successful_attempts_per_tick_per_construction_queue_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "maximum_following_robots_count_modifier_icon :: Sprite",
        "name": "maximum_following_robots_count_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "medium_gui_arrow :: Sprite",
        "name": "medium_gui_arrow",
        "type": "Sprite"
      },
      {
        "comment": "mining_drill_productivity_bonus_modifier_icon :: Sprite",
        "name": "mining_drill_productivity_bonus_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "missing_icon :: Sprite",
        "name": "missing_icon",
        "type": "Sprite"
      },
      {
        "comment": "missing_mod_icon :: Sprite",
        "name": "missing_mod_icon",
        "type": "Sprite"
      },
      {
        "comment": "mod_dependency_arrow :: Sprite",
        "name": "mod_dependency_arrow",
        "type": "Sprite"
      },
      {
        "comment": "multiplayer_waiting_icon :: Sprite",
        "name": "multiplayer_waiting_icon",
        "type": "Sprite"
      },
      {
        "comment": "nature_icon :: Sprite",
        "name": "nature_icon",
        "type": "Sprite"
      },
      {
        "comment": "neutral_force_icon :: Sprite",
        "name": "neutral_force_icon",
        "type": "Sprite"
      },
      {
        "comment": "no_building_material_icon :: Sprite",
        "name": "no_building_material_icon",
        "type": "Sprite"
      },
      {
        "comment": "no_nature_icon :: Sprite",
        "name": "no_nature_icon",
        "type": "Sprite"
      },
      {
        "comment": "no_storage_space_icon :: Sprite",
        "name": "no_storage_space_icon",
        "type": "Sprite"
      },
      {
        "comment": "none_editor_icon :: Sprite",
        "name": "none_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "not_available :: Sprite",
        "name": "not_available",
        "type": "Sprite"
      },
      {
        "comment": "not_enough_construction_robots_icon :: Sprite",
        "name": "not_enough_construction_robots_icon",
        "type": "Sprite"
      },
      {
        "comment": "not_enough_repair_packs_icon :: Sprite",
        "name": "not_enough_repair_packs_icon",
        "type": "Sprite"
      },
      {
        "comment": "nothing_modifier_icon :: Sprite",
        "name": "nothing_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "paint_bucket_icon :: Sprite",
        "name": "paint_bucket_icon",
        "type": "Sprite"
      },
      {
        "comment": "pause :: Sprite",
        "name": "pause",
        "type": "Sprite"
      },
      {
        "comment": "placement_indicator_leg :: Sprite",
        "name": "placement_indicator_leg",
        "type": "Sprite"
      },
      {
        "comment": "play :: Sprite",
        "name": "play",
        "type": "Sprite"
      },
      {
        "comment": "player_force_icon :: Sprite",
        "name": "player_force_icon",
        "type": "Sprite"
      },
      {
        "comment": "pollution_visualization :: Sprite",
        "name": "pollution_visualization",
        "type": "Sprite"
      },
      {
        "comment": "preset :: Sprite",
        "name": "preset",
        "type": "Sprite"
      },
      {
        "comment": "pump_cannot_connect_icon :: Sprite",
        "name": "pump_cannot_connect_icon",
        "type": "Sprite"
      },
      {
        "comment": "questionmark :: Sprite",
        "name": "questionmark",
        "type": "Sprite"
      },
      {
        "comment": "quick_bar_count_modifier_icon :: Sprite",
        "name": "quick_bar_count_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "rail_path_not_possible :: Sprite",
        "name": "rail_path_not_possible",
        "type": "Sprite"
      },
      {
        "comment": "rail_planner_indication_arrow :: Sprite",
        "name": "rail_planner_indication_arrow",
        "type": "Sprite"
      },
      {
        "comment": "rail_planner_indication_arrow_too_far :: Sprite",
        "name": "rail_planner_indication_arrow_too_far",
        "type": "Sprite"
      },
      {
        "comment": "rail_signal_placement_indicator :: Sprite",
        "name": "rail_signal_placement_indicator",
        "type": "Sprite"
      },
      {
        "comment": "recharge_icon :: Sprite",
        "name": "recharge_icon",
        "type": "Sprite"
      },
      {
        "comment": "red_wire :: Sprite",
        "name": "red_wire",
        "type": "Sprite"
      },
      {
        "comment": "red_wire_hightlight :: Sprite",
        "name": "red_wire_hightlight",
        "type": "Sprite"
      },
      {
        "comment": "refresh :: Sprite",
        "name": "refresh",
        "type": "Sprite"
      },
      {
        "comment": "refresh_white :: Animation",
        "name": "refresh_white",
        "type": "Animation"
      },
      {
        "comment": "rename_icon_normal :: Sprite",
        "name": "rename_icon_normal",
        "type": "Sprite"
      },
      {
        "comment": "rename_icon_small_black :: Sprite",
        "name": "rename_icon_small_black",
        "type": "Sprite"
      },
      {
        "comment": "rename_icon_small_white :: Sprite",
        "name": "rename_icon_small_white",
        "type": "Sprite"
      },
      {
        "comment": "reset :: Sprite",
        "name": "reset",
        "type": "Sprite"
      },
      {
        "comment": "reset_white :: Sprite",
        "name": "reset_white",
        "type": "Sprite"
      },
      {
        "comment": "resource_editor_icon :: Sprite",
        "name": "resource_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "right_arrow :: Sprite",
        "name": "right_arrow",
        "type": "Sprite"
      },
      {
        "comment": "robot_slot :: Sprite",
        "name": "robot_slot",
        "type": "Sprite"
      },
      {
        "comment": "scripting_editor_icon :: Sprite",
        "name": "scripting_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "search_black :: Sprite",
        "name": "search_black",
        "type": "Sprite"
      },
      {
        "comment": "search_icon :: Sprite",
        "name": "search_icon",
        "type": "Sprite"
      },
      {
        "comment": "search_white :: Sprite",
        "name": "search_white",
        "type": "Sprite"
      },
      {
        "comment": "set_bar_slot :: Sprite",
        "name": "set_bar_slot",
        "type": "Sprite"
      },
      {
        "comment": "shield_bar_pip :: Sprite",
        "name": "shield_bar_pip",
        "type": "Sprite"
      },
      {
        "comment": "shoot_cursor_green :: Sprite",
        "name": "shoot_cursor_green",
        "type": "Sprite"
      },
      {
        "comment": "shoot_cursor_red :: Sprite",
        "name": "shoot_cursor_red",
        "type": "Sprite"
      },
      {
        "comment": "short_indication_line :: Sprite",
        "name": "short_indication_line",
        "type": "Sprite"
      },
      {
        "comment": "show_electric_network_in_map_view :: Sprite",
        "name": "show_electric_network_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "show_electric_network_in_map_view_black :: Sprite",
        "name": "show_electric_network_in_map_view_black",
        "type": "Sprite"
      },
      {
        "comment": "show_logistics_network_in_map_view :: Sprite",
        "name": "show_logistics_network_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "show_logistics_network_in_map_view_black :: Sprite",
        "name": "show_logistics_network_in_map_view_black",
        "type": "Sprite"
      },
      {
        "comment": "show_player_names_in_map_view :: Sprite",
        "name": "show_player_names_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "show_player_names_in_map_view_black :: Sprite",
        "name": "show_player_names_in_map_view_black",
        "type": "Sprite"
      },
      {
        "comment": "show_pollution_in_map_view :: Sprite",
        "name": "show_pollution_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "show_pollution_in_map_view_black :: Sprite",
        "name": "show_pollution_in_map_view_black",
        "type": "Sprite"
      },
      {
        "comment": "show_train_station_names_in_map_view :: Sprite",
        "name": "show_train_station_names_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "show_train_station_names_in_map_view_black :: Sprite",
        "name": "show_train_station_names_in_map_view_black",
        "type": "Sprite"
      },
      {
        "comment": "show_turret_range_in_map_view :: Sprite",
        "name": "show_turret_range_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "show_turret_range_in_map_view_black :: Sprite",
        "name": "show_turret_range_in_map_view_black",
        "type": "Sprite"
      },
      {
        "comment": "shuffle :: Sprite",
        "name": "shuffle",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_achievements_hover_icon :: Sprite",
        "name": "side_menu_achievements_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_achievements_icon :: Sprite",
        "name": "side_menu_achievements_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_blueprint_library_hover_icon :: Sprite",
        "name": "side_menu_blueprint_library_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_blueprint_library_icon :: Sprite",
        "name": "side_menu_blueprint_library_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_bonus_hover_icon :: Sprite",
        "name": "side_menu_bonus_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_bonus_icon :: Sprite",
        "name": "side_menu_bonus_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_map_hover_icon :: Sprite",
        "name": "side_menu_map_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_map_icon :: Sprite",
        "name": "side_menu_map_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_menu_hover_icon :: Sprite",
        "name": "side_menu_menu_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_menu_icon :: Sprite",
        "name": "side_menu_menu_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_production_hover_icon :: Sprite",
        "name": "side_menu_production_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_production_icon :: Sprite",
        "name": "side_menu_production_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_train_hover_icon :: Sprite",
        "name": "side_menu_train_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_train_icon :: Sprite",
        "name": "side_menu_train_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_tutorials_hover_icon :: Sprite",
        "name": "side_menu_tutorials_hover_icon",
        "type": "Sprite"
      },
      {
        "comment": "side_menu_tutorials_icon :: Sprite",
        "name": "side_menu_tutorials_icon",
        "type": "Sprite"
      },
      {
        "comment": "slot :: Sprite",
        "name": "slot",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_ammo :: Sprite",
        "name": "slot_icon_ammo",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_armor :: Sprite",
        "name": "slot_icon_armor",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_fuel :: Sprite",
        "name": "slot_icon_fuel",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_gun :: Sprite",
        "name": "slot_icon_gun",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_module :: Sprite",
        "name": "slot_icon_module",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_resource :: Sprite",
        "name": "slot_icon_resource",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_result :: Sprite",
        "name": "slot_icon_result",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_robot :: Sprite",
        "name": "slot_icon_robot",
        "type": "Sprite"
      },
      {
        "comment": "slot_icon_robot_material :: Sprite",
        "name": "slot_icon_robot_material",
        "type": "Sprite"
      },
      {
        "comment": "small_gui_arrow :: Sprite",
        "name": "small_gui_arrow",
        "type": "Sprite"
      },
      {
        "comment": "spawn_flag :: Sprite",
        "name": "spawn_flag",
        "type": "Sprite"
      },
      {
        "comment": "speed_down :: Sprite",
        "name": "speed_down",
        "type": "Sprite"
      },
      {
        "comment": "speed_up :: Sprite",
        "name": "speed_up",
        "type": "Sprite"
      },
      {
        "comment": "spray_icon :: Sprite",
        "name": "spray_icon",
        "type": "Sprite"
      },
      {
        "comment": "stack_inserter_capacity_bonus_modifier_icon :: Sprite",
        "name": "stack_inserter_capacity_bonus_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "station_name :: Sprite",
        "name": "station_name",
        "type": "Sprite"
      },
      {
        "comment": "stop :: Sprite",
        "name": "stop",
        "type": "Sprite"
      },
      {
        "comment": "surface_editor_icon :: Sprite",
        "name": "surface_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "sync_mods :: Sprite",
        "name": "sync_mods",
        "type": "Sprite"
      },
      {
        "comment": "tick_custom :: Sprite",
        "name": "tick_custom",
        "type": "Sprite"
      },
      {
        "comment": "tick_once :: Sprite",
        "name": "tick_once",
        "type": "Sprite"
      },
      {
        "comment": "tick_sixty :: Sprite",
        "name": "tick_sixty",
        "type": "Sprite"
      },
      {
        "comment": "tile_editor_icon :: Sprite",
        "name": "tile_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "tile_ghost_cursor :: Sprite",
        "name": "tile_ghost_cursor",
        "type": "Sprite"
      },
      {
        "comment": "time_editor_icon :: Sprite",
        "name": "time_editor_icon",
        "type": "Sprite"
      },
      {
        "comment": "too_far :: Sprite",
        "name": "too_far",
        "type": "Sprite"
      },
      {
        "comment": "too_far_from_roboport_icon :: Sprite",
        "name": "too_far_from_roboport_icon",
        "type": "Sprite"
      },
      {
        "comment": "track_button :: Sprite",
        "name": "track_button",
        "type": "Sprite"
      },
      {
        "comment": "train_braking_force_bonus_modifier_icon :: Sprite",
        "name": "train_braking_force_bonus_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "train_stop_disabled_in_map_view :: Sprite",
        "name": "train_stop_disabled_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "train_stop_in_map_view :: Sprite",
        "name": "train_stop_in_map_view",
        "type": "Sprite"
      },
      {
        "comment": "train_stop_placement_indicator :: Sprite",
        "name": "train_stop_placement_indicator",
        "type": "Sprite"
      },
      {
        "comment": "trash :: Sprite",
        "name": "trash",
        "type": "Sprite"
      },
      {
        "comment": "trash_bin :: Sprite",
        "name": "trash_bin",
        "type": "Sprite"
      },
      {
        "comment": "trash_white :: Sprite",
        "name": "trash_white",
        "type": "Sprite"
      },
      {
        "comment": "turret_attack_modifier_icon :: Sprite",
        "name": "turret_attack_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "underground_pipe_connection :: Sprite",
        "name": "underground_pipe_connection",
        "type": "Sprite"
      },
      {
        "comment": "underground_remove_belts :: Sprite",
        "name": "underground_remove_belts",
        "type": "Sprite"
      },
      {
        "comment": "underground_remove_pipes :: Sprite",
        "name": "underground_remove_pipes",
        "type": "Sprite"
      },
      {
        "comment": "unlock_recipe_modifier_icon :: Sprite",
        "name": "unlock_recipe_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "upgrade_blueprint :: Sprite",
        "name": "upgrade_blueprint",
        "type": "Sprite"
      },
      {
        "comment": "upgrade_mark :: Sprite",
        "name": "upgrade_mark",
        "type": "Sprite"
      },
      {
        "comment": "variations_tool_icon :: Sprite",
        "name": "variations_tool_icon",
        "type": "Sprite"
      },
      {
        "comment": "warning :: Sprite",
        "name": "warning",
        "type": "Sprite"
      },
      {
        "comment": "warning_icon :: Sprite",
        "name": "warning_icon",
        "type": "Sprite"
      },
      {
        "comment": "warning_white :: Sprite",
        "name": "warning_white",
        "type": "Sprite"
      },
      {
        "comment": "white_mask :: Sprite",
        "name": "white_mask",
        "type": "Sprite"
      },
      {
        "comment": "white_square :: Sprite",
        "name": "white_square",
        "type": "Sprite"
      },
      {
        "comment": "wire_shadow :: Sprite",
        "name": "wire_shadow",
        "type": "Sprite"
      },
      {
        "comment": "worker_robot_battery_modifier_icon :: Sprite",
        "name": "worker_robot_battery_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "worker_robot_speed_modifier_icon :: Sprite",
        "name": "worker_robot_speed_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "worker_robot_storage_modifier_icon :: Sprite",
        "name": "worker_robot_storage_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "zoom_to_world_blueprint_enabled_modifier_icon :: Sprite",
        "name": "zoom_to_world_blueprint_enabled_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "zoom_to_world_deconstruction_planner_enabled_modifier_icon :: Sprite",
        "name": "zoom_to_world_deconstruction_planner_enabled_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "zoom_to_world_enabled_modifier_icon :: Sprite",
        "name": "zoom_to_world_enabled_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "zoom_to_world_ghost_building_enabled_modifier_icon :: Sprite",
        "name": "zoom_to_world_ghost_building_enabled_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "zoom_to_world_selection_tool_enabled_modifier_icon :: Sprite",
        "name": "zoom_to_world_selection_tool_enabled_modifier_icon",
        "type": "Sprite"
      },
      {
        "comment": "zoom_to_world_upgrade_planner_enabled_modifier_icon :: Sprite",
        "name": "zoom_to_world_upgrade_planner_enabled_modifier_icon",
        "type": "Sprite"
      }
    ]
  },
  {
    "class_name": "Vehicle",
    "extends": "EntityWithHealth",
    "properties": [
      {
        "comment": "braking_power or braking_force :: Energy or double",
        "name": "braking_power or braking_force",
        "type": {
          "or": [
            "Energy",
            "double"
          ]
        }
      },
      {
        "comment": "energy_per_hit_point :: double",
        "name": "energy_per_hit_point",
        "type": "double"
      },
      {
        "comment": "friction or friction_force :: double",
        "name": "friction or friction_force",
        "type": "double"
      },
      {
        "comment": "weight :: double",
        "name": "weight",
        "type": "double"
      },
      {
        "comment": "crash_trigger :: TriggerEffect (optional)",
        "name": "crash_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "equipment_grid :: string (optional)",
        "name": "equipment_grid",
        "optional": true,
        "type": "string"
      },
      {
        "comment": "minimap_representation :: Sprite (optional)",
        "name": "minimap_representation",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "selected_minimap_representation :: Sprite (optional)",
        "name": "selected_minimap_representation",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "sound_minimum_speed :: double (optional)",
        "name": "sound_minimum_speed",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "sound_scaling_ratio :: double (optional)",
        "name": "sound_scaling_ratio",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "stop_trigger :: TriggerEffect (optional)",
        "name": "stop_trigger",
        "optional": true,
        "type": "TriggerEffect"
      },
      {
        "comment": "stop_trigger_speed :: double (optional)",
        "name": "stop_trigger_speed",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "terrain_friction_modifier :: float (optional)",
        "name": "terrain_friction_modifier",
        "optional": true,
        "type": "float"
      }
    ]
  },
  {
    "class_name": "VirtualSignal",
    "extends": "PrototypeBase",
    "name": "virtual-signal",
    "properties": [
      {
        "comment": "icons, icon, icon_size (IconSpecification) :: IconSpecification",
        "name": "icon_spec",
        "transparent": true,
        "type": "IconSpecification"
      },
      {
        "comment": "special_signal :: bool (optional)",
        "name": "special_signal",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "subgroup :: string (optional)",
        "name": "subgroup",
        "optional": true,
        "type": "string"
      }
    ]
  },
  {
    "class_name": "Wall",
    "extends": "EntityWithHealth",
    "name": "wall",
    "properties": [
      {
        "comment": "pictures :: table",
        "name": "pictures",
        "type": {
          "table_of": null
        }
      },
      {
        "comment": "circuit_connector_sprites :: CircuitConnectorSprites (optional)",
        "name": "circuit_connector_sprites",
        "optional": true,
        "type": "CircuitConnectorSprites"
      },
      {
        "comment": "circuit_wire_connection_point :: WireConnectionPoint (optional)",
        "name": "circuit_wire_connection_point",
        "optional": true,
        "type": "WireConnectionPoint"
      },
      {
        "comment": "circuit_wire_max_distance :: double (optional)",
        "name": "circuit_wire_max_distance",
        "optional": true,
        "type": "double"
      },
      {
        "comment": "connected_gate_visualization :: Sprite (optional)",
        "name": "connected_gate_visualization",
        "optional": true,
        "type": "Sprite"
      },
      {
        "comment": "default_output_signal :: SignalIDConnector (optional)",
        "name": "default_output_signal",
        "optional": true,
        "type": "SignalIDConnector"
      },
      {
        "comment": "draw_circuit_wires :: bool (optional)",
        "name": "draw_circuit_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "draw_copper_wires :: bool (optional)",
        "name": "draw_copper_wires",
        "optional": true,
        "type": "bool"
      },
      {
        "comment": "visual_merge_group :: uint32 (optional)",
        "name": "visual_merge_group",
        "optional": true,
        "type": "uint32"
      },
      {
        "comment": "wall_diode_green :: Sprite4Way (optional)",
        "name": "wall_diode_green",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "wall_diode_green_light_bottom :: LightDefinition (optional)",
        "name": "wall_diode_green_light_bottom",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_green_light_left :: LightDefinition (optional)",
        "name": "wall_diode_green_light_left",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_green_light_right :: LightDefinition (optional)",
        "name": "wall_diode_green_light_right",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_green_light_top :: LightDefinition (optional)",
        "name": "wall_diode_green_light_top",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_red :: Sprite4Way (optional)",
        "name": "wall_diode_red",
        "optional": true,
        "type": "Sprite4Way"
      },
      {
        "comment": "wall_diode_red_light_bottom :: LightDefinition (optional)",
        "name": "wall_diode_red_light_bottom",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_red_light_left :: LightDefinition (optional)",
        "name": "wall_diode_red_light_left",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_red_light_right :: LightDefinition (optional)",
        "name": "wall_diode_red_light_right",
        "optional": true,
        "type": "LightDefinition"
      },
      {
        "comment": "wall_diode_red_light_top :: LightDefinition (optional)",
        "name": "wall_diode_red_light_top",
        "optional": true,
        "type": "LightDefinition"
      }
    ]
  },
  {
    "class_name": "WindSound",
    "name": "wind-sound",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "sound :: Sound",
        "name": "sound",
        "type": "Sound"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      }
    ]
  },
  {
    "class_name": "PrototypeBase",
    "properties": [
      {
        "comment": "name :: string",
        "name": "name",
        "type": "string"
      },
      {
        "comment": "type :: string",
        "name": "type",
        "type": "string"
      },
      {
        "comment": "localised_description :: LocalisedString (optional)",
        "name": "localised_description",
        "optional": true,
        "type": "LocalisedString"
      },
      {
        "comment": "localised_name :: LocalisedString (optional)",
        "name": "localised_name",
        "optional": true,
        "type": "LocalisedString"
      },
      {
        "comment": "order :: Order (optional)",
        "name": "order",
        "optional": true,
        "type": "Order"
      }
    ]
  }
]